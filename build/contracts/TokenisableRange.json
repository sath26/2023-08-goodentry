{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee1",
          "type": "uint256"
        }
      ],
      "name": "ClaimFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "trAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset0",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "startX10",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "endX10",
          "type": "uint128"
        }
      ],
      "name": "InitTR",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "trAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ORACLE",
      "outputs": [
        {
          "internalType": "contract IAaveOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POS_MGR",
      "outputs": [
        {
          "internalType": "contract INonfungiblePositionManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOKEN0",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOKEN1",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TREASURY_DEPRECATED",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "V3_FACTORY",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "n0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "n1",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lpAmt",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee0",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTier",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "token0Amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "token1Amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountsExcludingFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "token0Amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "token1Amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "TOKEN0_PRICE",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "TOKEN1_PRICE",
          "type": "uint256"
        }
      ],
      "name": "getValuePerLPAtPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "priceX1e8",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "n0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "n1",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAaveOracle",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "asset0",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "asset1",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "startX10",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "endX10",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "startName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "endName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isTicker",
          "type": "bool"
        }
      ],
      "name": "initProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "priceX1e8",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lowerTick",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "TOKEN0_PRICE",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "TOKEN1_PRICE",
          "type": "uint256"
        }
      ],
      "name": "returnExpectedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amt0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amt1",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "status",
      "outputs": [
        {
          "internalType": "enum TokenisableRange.ProxyState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryFee_deprecated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upperTick",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount0Min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1Min",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "removed0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "removed1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/TokenisableRange.sol",
    "2": "contracts/lib/FixedPoint96.sol",
    "3": "contracts/lib/FullMath.sol",
    "4": "contracts/lib/LiquidityAmounts.sol",
    "42": "contracts/openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
    "43": "contracts/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
    "44": "contracts/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
    "5": "contracts/lib/TickMath.sol",
    "53": "contracts/openzeppelin-solidity/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "58": "contracts/openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
    "68": "contracts/openzeppelin-solidity/contracts/utils/Address.sol",
    "70": "contracts/openzeppelin-solidity/contracts/utils/Context.sol",
    "86": "interfaces/IAaveOracle.sol",
    "89": "interfaces/INonfungiblePositionManager.sol",
    "98": "interfaces/IUniswapV3Factory.sol",
    "99": "interfaces/IUniswapV3Pool.sol"
  },
  "ast": {
    "absolutePath": "contracts/TokenisableRange.sol",
    "exportedSymbols": {
      "Address": [
        12471
      ],
      "Context": [
        12493
      ],
      "ERC20": [
        5329
      ],
      "FixedPoint96": [
        14667
      ],
      "FullMath": [
        14843
      ],
      "IAaveOracle": [
        9894
      ],
      "IERC165": [
        14855
      ],
      "IERC20": [
        5407
      ],
      "IERC20Metadata": [
        6892
      ],
      "IERC721": [
        16080
      ],
      "IERC721Enumerable": [
        15937
      ],
      "IERC721Metadata": [
        15964
      ],
      "IERC721Permit": [
        14484
      ],
      "INonfungiblePositionManager": [
        10244
      ],
      "IPeripheryImmutableState": [
        14500
      ],
      "IPeripheryPayments": [
        14526
      ],
      "IPoolInitializer": [
        14545
      ],
      "IUniswapV3Factory": [
        12138
      ],
      "IUniswapV3Pool": [
        12176
      ],
      "LiquidityAmounts": [
        11314
      ],
      "PoolAddress": [
        14643
      ],
      "ReentrancyGuard": [
        8964
      ],
      "SafeERC20": [
        7450
      ],
      "Strings": [
        12055
      ],
      "TickMath": [
        11852
      ],
      "TokenisableRange": [
        2807
      ]
    },
    "id": 2808,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 914,
        "literals": [
          "solidity",
          "0.8"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:20:1"
      },
      {
        "absolutePath": "interfaces/INonfungiblePositionManager.sol",
        "file": "../interfaces/INonfungiblePositionManager.sol",
        "id": 915,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2808,
        "sourceUnit": 10245,
        "src": "61:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUniswapV3Factory.sol",
        "file": "../interfaces/IUniswapV3Factory.sol",
        "id": 916,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2808,
        "sourceUnit": 12139,
        "src": "117:45:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUniswapV3Pool.sol",
        "file": "../interfaces/IUniswapV3Pool.sol",
        "id": 917,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2808,
        "sourceUnit": 12177,
        "src": "163:42:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "./openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 918,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2808,
        "sourceUnit": 5330,
        "src": "206:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "./openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 919,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2808,
        "sourceUnit": 7451,
        "src": "272:75:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/Strings.sol",
        "file": "./openzeppelin-solidity/contracts/utils/Strings.sol",
        "id": 920,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2808,
        "sourceUnit": 12056,
        "src": "348:61:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
        "file": "./openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
        "id": 921,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2808,
        "sourceUnit": 8965,
        "src": "410:72:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/LiquidityAmounts.sol",
        "file": "./lib/LiquidityAmounts.sol",
        "id": 922,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2808,
        "sourceUnit": 11315,
        "src": "483:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/TickMath.sol",
        "file": "./lib/TickMath.sol",
        "id": 923,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2808,
        "sourceUnit": 11853,
        "src": "520:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IAaveOracle.sol",
        "file": "../interfaces/IAaveOracle.sol",
        "id": 924,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2808,
        "sourceUnit": 9895,
        "src": "549:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IAaveOracle.sol",
        "file": "../interfaces/IAaveOracle.sol",
        "id": 925,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2808,
        "sourceUnit": 9895,
        "src": "589:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "",
                "id": 928,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "712:2:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                  "typeString": "literal_string \"\""
                },
                "value": ""
              },
              {
                "hexValue": "",
                "id": 929,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "716:2:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                  "typeString": "literal_string \"\""
                },
                "value": ""
              }
            ],
            "baseName": {
              "id": 927,
              "name": "ERC20",
              "nameLocations": [
                "706:5:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5329,
              "src": "706:5:1"
            },
            "id": 930,
            "nodeType": "InheritanceSpecifier",
            "src": "706:13:1"
          },
          {
            "baseName": {
              "id": 931,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "721:15:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8964,
              "src": "721:15:1"
            },
            "id": 932,
            "nodeType": "InheritanceSpecifier",
            "src": "721:15:1"
          }
        ],
        "canonicalName": "TokenisableRange",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 926,
          "nodeType": "StructuredDocumentation",
          "src": "630:47:1",
          "text": "@notice Tokenize a Uniswap V3 NFT position"
        },
        "fullyImplemented": true,
        "id": 2807,
        "linearizedBaseContracts": [
          2807,
          8964,
          5329,
          6892,
          5407,
          12493
        ],
        "name": "TokenisableRange",
        "nameLocation": "686:16:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 936,
            "libraryName": {
              "id": 933,
              "name": "SafeERC20",
              "nameLocations": [
                "749:9:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7450,
              "src": "749:9:1"
            },
            "nodeType": "UsingForDirective",
            "src": "743:26:1",
            "typeName": {
              "id": 935,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 934,
                "name": "ERC20",
                "nameLocations": [
                  "763:5:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5329,
                "src": "763:5:1"
              },
              "referencedDeclaration": 5329,
              "src": "763:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$5329",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 937,
              "nodeType": "StructuredDocumentation",
              "src": "774:10:1",
              "text": "EVENTS"
            },
            "eventSelector": "eb71465d71f7b18c376ba29f6edb7953dc29c7afb4fcaa4e1335c8827a8dd96e",
            "id": 947,
            "name": "InitTR",
            "nameLocation": "795:6:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 939,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "asset0",
                  "nameLocation": "819:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 947,
                  "src": "811:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 941,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "asset1",
                  "nameLocation": "843:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 947,
                  "src": "835:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 943,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startX10",
                  "nameLocation": "867:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 947,
                  "src": "859:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 945,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endX10",
                  "nameLocation": "893:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 947,
                  "src": "885:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "801:104:1"
            },
            "src": "789:117:1"
          },
          {
            "anonymous": false,
            "eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
            "id": 953,
            "name": "Deposit",
            "nameLocation": "917:7:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 949,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "933:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 953,
                  "src": "925:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 951,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "trAmount",
                  "nameLocation": "946:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 953,
                  "src": "941:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "924:31:1"
            },
            "src": "911:45:1"
          },
          {
            "anonymous": false,
            "eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
            "id": 959,
            "name": "Withdraw",
            "nameLocation": "967:8:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 955,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "984:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "976:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 957,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "trAmount",
                  "nameLocation": "997:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "992:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "975:31:1"
            },
            "src": "961:46:1"
          },
          {
            "anonymous": false,
            "eventSelector": "cbf6196d7bebcbaaf53f321eecb5b4f39479879f3996f828f10012708a9442d7",
            "id": 965,
            "name": "ClaimFees",
            "nameLocation": "1018:9:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fee0",
                  "nameLocation": "1033:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 965,
                  "src": "1028:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1028:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 963,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fee1",
                  "nameLocation": "1044:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 965,
                  "src": "1039:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1027:22:1"
            },
            "src": "1012:38:1"
          },
          {
            "constant": false,
            "documentation": {
              "id": 966,
              "nodeType": "StructuredDocumentation",
              "src": "1056:14:1",
              "text": "VARIABLES"
            },
            "functionSelector": "9b1344ac",
            "id": 968,
            "mutability": "mutable",
            "name": "lowerTick",
            "nameLocation": "1088:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1075:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 967,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1075:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "727dd228",
            "id": 970,
            "mutability": "mutable",
            "name": "upperTick",
            "nameLocation": "1116:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1103:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 969,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1103:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "72f5d98a",
            "id": 972,
            "mutability": "mutable",
            "name": "feeTier",
            "nameLocation": "1145:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1131:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 971,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "1131:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "17d70f7c",
            "id": 974,
            "mutability": "mutable",
            "name": "tokenId",
            "nameLocation": "1174:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1159:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 973,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1159:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e3526af4",
            "id": 976,
            "mutability": "mutable",
            "name": "fee0",
            "nameLocation": "1202:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1187:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 975,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1187:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6098256",
            "id": 978,
            "mutability": "mutable",
            "name": "fee1",
            "nameLocation": "1227:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1212:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 977,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1212:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "TokenisableRange.ASSET",
            "id": 984,
            "members": [
              {
                "constant": false,
                "id": 981,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "1267:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 984,
                "src": "1261:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$5329",
                  "typeString": "contract ERC20"
                },
                "typeName": {
                  "id": 980,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 979,
                    "name": "ERC20",
                    "nameLocations": [
                      "1261:5:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 5329,
                    "src": "1261:5:1"
                  },
                  "referencedDeclaration": 5329,
                  "src": "1261:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$5329",
                    "typeString": "contract ERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 983,
                "mutability": "mutable",
                "name": "decimals",
                "nameLocation": "1288:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 984,
                "src": "1282:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 982,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1282:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ASSET",
            "nameLocation": "1245:5:1",
            "nodeType": "StructDefinition",
            "scope": 2807,
            "src": "1238:65:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "443ec74d",
            "id": 987,
            "mutability": "mutable",
            "name": "TOKEN0",
            "nameLocation": "1322:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1309:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ASSET_$984_storage",
              "typeString": "struct TokenisableRange.ASSET"
            },
            "typeName": {
              "id": 986,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 985,
                "name": "ASSET",
                "nameLocations": [
                  "1309:5:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 984,
                "src": "1309:5:1"
              },
              "referencedDeclaration": 984,
              "src": "1309:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ASSET_$984_storage_ptr",
                "typeString": "struct TokenisableRange.ASSET"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5ee04d78",
            "id": 990,
            "mutability": "mutable",
            "name": "TOKEN1",
            "nameLocation": "1347:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1334:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ASSET_$984_storage",
              "typeString": "struct TokenisableRange.ASSET"
            },
            "typeName": {
              "id": 989,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 988,
                "name": "ASSET",
                "nameLocations": [
                  "1334:5:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 984,
                "src": "1334:5:1"
              },
              "referencedDeclaration": 984,
              "src": "1334:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ASSET_$984_storage_ptr",
                "typeString": "struct TokenisableRange.ASSET"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "38013f02",
            "id": 993,
            "mutability": "mutable",
            "name": "ORACLE",
            "nameLocation": "1378:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1359:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAaveOracle_$9894",
              "typeString": "contract IAaveOracle"
            },
            "typeName": {
              "id": 992,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 991,
                "name": "IAaveOracle",
                "nameLocations": [
                  "1359:11:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9894,
                "src": "1359:11:1"
              },
              "referencedDeclaration": 9894,
              "src": "1359:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                "typeString": "contract IAaveOracle"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 995,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1398:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1391:12:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 994,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1391:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 997,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1416:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1409:14:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 996,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1409:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "TokenisableRange.ProxyState",
            "id": 1001,
            "members": [
              {
                "id": 998,
                "name": "INIT_PROXY",
                "nameLocation": "1456:10:1",
                "nodeType": "EnumValue",
                "src": "1456:10:1"
              },
              {
                "id": 999,
                "name": "INIT_LP",
                "nameLocation": "1476:7:1",
                "nodeType": "EnumValue",
                "src": "1476:7:1"
              },
              {
                "id": 1000,
                "name": "READY",
                "nameLocation": "1493:5:1",
                "nodeType": "EnumValue",
                "src": "1493:5:1"
              }
            ],
            "name": "ProxyState",
            "nameLocation": "1435:10:1",
            "nodeType": "EnumDefinition",
            "src": "1430:74:1"
          },
          {
            "constant": false,
            "functionSelector": "200d2ed2",
            "id": 1004,
            "mutability": "mutable",
            "name": "status",
            "nameLocation": "1527:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1509:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_ProxyState_$1001",
              "typeString": "enum TokenisableRange.ProxyState"
            },
            "typeName": {
              "id": 1003,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1002,
                "name": "ProxyState",
                "nameLocations": [
                  "1509:10:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1001,
                "src": "1509:10:1"
              },
              "referencedDeclaration": 1001,
              "src": "1509:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ProxyState_$1001",
                "typeString": "enum TokenisableRange.ProxyState"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1006,
            "mutability": "mutable",
            "name": "creator",
            "nameLocation": "1555:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1539:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1005,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1539:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "1a686502",
            "id": 1008,
            "mutability": "mutable",
            "name": "liquidity",
            "nameLocation": "1584:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1569:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 1007,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "1569:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "449247aa",
            "id": 1011,
            "mutability": "mutable",
            "name": "TREASURY_DEPRECATED",
            "nameLocation": "1694:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1679:87:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1009,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1679:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832324363336636363562613443383938323236333533423637326335313233633538373531363932",
              "id": 1010,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1724:42:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x22Cc3f665ba4C898226353B672c5123c58751692"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "470f6e1d",
            "id": 1014,
            "mutability": "mutable",
            "name": "treasuryFee_deprecated",
            "nameLocation": "1784:22:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1772:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1012,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1772:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 1013,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1809:2:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "bd865cba",
            "id": 1020,
            "mutability": "constant",
            "name": "POS_MGR",
            "nameLocation": "1960:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "1916:133:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
              "typeString": "contract INonfungiblePositionManager"
            },
            "typeName": {
              "id": 1016,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1015,
                "name": "INonfungiblePositionManager",
                "nameLocations": [
                  "1916:27:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10244,
                "src": "1916:27:1"
              },
              "referencedDeclaration": 10244,
              "src": "1916:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                "typeString": "contract INonfungiblePositionManager"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843333634343262346134353232453837313339394344373137614244443834374162313146453838",
                  "id": 1018,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2006:42:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xC36442b4a4522E871399CD717aBDD847Ab11FE88"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 1017,
                "name": "INonfungiblePositionManager",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 10244,
                "src": "1978:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$10244_$",
                  "typeString": "type(contract INonfungiblePositionManager)"
                }
              },
              "id": 1019,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1978:71:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                "typeString": "contract INonfungiblePositionManager"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "08bd1a85",
            "id": 1026,
            "mutability": "constant",
            "name": "V3_FACTORY",
            "nameLocation": "2089:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "2055:116:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV3Factory_$12138",
              "typeString": "contract IUniswapV3Factory"
            },
            "typeName": {
              "id": 1022,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1021,
                "name": "IUniswapV3Factory",
                "nameLocations": [
                  "2055:17:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12138,
                "src": "2055:17:1"
              },
              "referencedDeclaration": 12138,
              "src": "2055:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Factory_$12138",
                "typeString": "contract IUniswapV3Factory"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831463938343331633861443938353233363331414534613539663236373334366561333146393834",
                  "id": 1024,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2128:42:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x1F98431c8aD98523631AE4a59f267346ea31F984"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 1023,
                "name": "IUniswapV3Factory",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 12138,
                "src": "2110:17:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$12138_$",
                  "typeString": "type(contract IUniswapV3Factory)"
                }
              },
              "id": 1025,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2110:61:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Factory_$12138",
                "typeString": "contract IUniswapV3Factory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "61d027b3",
            "id": 1029,
            "mutability": "constant",
            "name": "treasury",
            "nameLocation": "2201:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "2177:85:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1027,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2177:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832324363336636363562613443383938323236333533423637326335313233633538373531363932",
              "id": 1028,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2220:42:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x22Cc3f665ba4C898226353B672c5123c58751692"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "cc32d176",
            "id": 1032,
            "mutability": "constant",
            "name": "treasuryFee",
            "nameLocation": "2289:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 2807,
            "src": "2268:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1030,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "2268:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 1031,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2303:2:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1073,
              "nodeType": "Block",
              "src": "2470:138:1",
              "statements": [
                {
                  "assignments": [
                    1041
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1041,
                      "mutability": "mutable",
                      "name": "z",
                      "nameLocation": "2485:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "2480:6:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1040,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2480:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1048,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1042,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1035,
                            "src": "2490:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2494:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2490:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1045,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2489:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 1046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2499:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "2489:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2480:20:1"
                },
                {
                  "expression": {
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1049,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1038,
                      "src": "2510:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1050,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1035,
                      "src": "2514:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2510:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "2510:5:1"
                },
                {
                  "body": {
                    "id": 1071,
                    "nodeType": "Block",
                    "src": "2539:63:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 1058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1056,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1038,
                            "src": "2553:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1057,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1041,
                            "src": "2557:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2553:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1059,
                        "nodeType": "ExpressionStatement",
                        "src": "2553:5:1"
                      },
                      {
                        "expression": {
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1060,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1041,
                            "src": "2572:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1065,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1063,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1061,
                                      "name": "x",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1035,
                                      "src": "2577:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "id": 1062,
                                      "name": "z",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1041,
                                      "src": "2581:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2577:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 1064,
                                    "name": "z",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1041,
                                    "src": "2585:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2577:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1066,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2576:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 1067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2590:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "2576:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2572:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1070,
                        "nodeType": "ExpressionStatement",
                        "src": "2572:19:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1053,
                      "name": "z",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "2532:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1054,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1038,
                      "src": "2536:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2532:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1072,
                  "nodeType": "WhileStatement",
                  "src": "2525:77:1"
                }
              ]
            },
            "documentation": {
              "id": 1033,
              "nodeType": "StructuredDocumentation",
              "src": "2312:100:1",
              "text": "@notice Babylonian method for sqrt\n @param x sqrt parameter\n @return y Square root"
            },
            "id": 1074,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sqrt",
            "nameLocation": "2426:4:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1035,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "2436:1:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "2431:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1034,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2431:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2430:8:1"
            },
            "returnParameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1038,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "2467:1:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "2462:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1037,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2461:8:1"
            },
            "scope": 2807,
            "src": "2417:191:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1455,
              "nodeType": "Block",
              "src": "3375:3243:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1100,
                              "name": "_oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1078,
                              "src": "3401:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                                "typeString": "contract IAaveOracle"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                                "typeString": "contract IAaveOracle"
                              }
                            ],
                            "id": 1099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3393:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1098,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3393:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3393:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 1104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3421:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3413:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1102,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3413:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3413:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3393:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f7261636c65",
                        "id": 1107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3427:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb",
                          "typeString": "literal_string \"Invalid oracle\""
                        },
                        "value": "Invalid oracle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb",
                          "typeString": "literal_string \"Invalid oracle\""
                        }
                      ],
                      "id": 1097,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3385:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3385:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1109,
                  "nodeType": "ExpressionStatement",
                  "src": "3385:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ProxyState_$1001",
                          "typeString": "enum TokenisableRange.ProxyState"
                        },
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1111,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "3462:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProxyState_$1001",
                            "typeString": "enum TokenisableRange.ProxyState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1112,
                            "name": "ProxyState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1001,
                            "src": "3472:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ProxyState_$1001_$",
                              "typeString": "type(enum TokenisableRange.ProxyState)"
                            }
                          },
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3483:10:1",
                          "memberName": "INIT_PROXY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 998,
                          "src": "3472:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProxyState_$1001",
                            "typeString": "enum TokenisableRange.ProxyState"
                          }
                        },
                        "src": "3462:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21496e697450726f7879",
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3495:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eaf3dc0dac2dd3d5fc91eccbe49a0a26879ea33c3029770e9146cde85b15af5f",
                          "typeString": "literal_string \"!InitProxy\""
                        },
                        "value": "!InitProxy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eaf3dc0dac2dd3d5fc91eccbe49a0a26879ea33c3029770e9146cde85b15af5f",
                          "typeString": "literal_string \"!InitProxy\""
                        }
                      ],
                      "id": 1110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3454:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3454:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "3454:54:1"
                },
                {
                  "expression": {
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1118,
                      "name": "creator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1006,
                      "src": "3518:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1119,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3528:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3532:6:1",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3528:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3518:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "3518:20:1"
                },
                {
                  "expression": {
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1123,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1004,
                      "src": "3548:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProxyState_$1001",
                        "typeString": "enum TokenisableRange.ProxyState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1124,
                        "name": "ProxyState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "3557:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProxyState_$1001_$",
                          "typeString": "type(enum TokenisableRange.ProxyState)"
                        }
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3568:7:1",
                      "memberName": "INIT_LP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 999,
                      "src": "3557:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProxyState_$1001",
                        "typeString": "enum TokenisableRange.ProxyState"
                      }
                    },
                    "src": "3548:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProxyState_$1001",
                      "typeString": "enum TokenisableRange.ProxyState"
                    }
                  },
                  "id": 1127,
                  "nodeType": "ExpressionStatement",
                  "src": "3548:27:1"
                },
                {
                  "expression": {
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1128,
                      "name": "ORACLE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "3585:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                        "typeString": "contract IAaveOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1129,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1078,
                      "src": "3594:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                        "typeString": "contract IAaveOracle"
                      }
                    },
                    "src": "3585:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                      "typeString": "contract IAaveOracle"
                    }
                  },
                  "id": 1131,
                  "nodeType": "ExpressionStatement",
                  "src": "3585:16:1"
                },
                {
                  "expression": {
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1132,
                        "name": "TOKEN0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 987,
                        "src": "3612:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ASSET_$984_storage",
                          "typeString": "struct TokenisableRange.ASSET storage ref"
                        }
                      },
                      "id": 1134,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3619:5:1",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 981,
                      "src": "3612:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$5329",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1135,
                      "name": "asset0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "3627:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$5329",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "3612:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$5329",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "3612:21:1"
                },
                {
                  "expression": {
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1138,
                        "name": "TOKEN0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 987,
                        "src": "3643:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ASSET_$984_storage",
                          "typeString": "struct TokenisableRange.ASSET storage ref"
                        }
                      },
                      "id": 1140,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3650:8:1",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 983,
                      "src": "3643:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1141,
                          "name": "asset0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1081,
                          "src": "3661:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5329",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3668:8:1",
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4858,
                        "src": "3661:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 1143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3661:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3643:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1145,
                  "nodeType": "ExpressionStatement",
                  "src": "3643:35:1"
                },
                {
                  "expression": {
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1146,
                        "name": "TOKEN1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 990,
                        "src": "3688:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ASSET_$984_storage",
                          "typeString": "struct TokenisableRange.ASSET storage ref"
                        }
                      },
                      "id": 1148,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3695:5:1",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 981,
                      "src": "3688:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$5329",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1149,
                      "name": "asset1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1084,
                      "src": "3703:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$5329",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "3688:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$5329",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 1151,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:21:1"
                },
                {
                  "expression": {
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1152,
                        "name": "TOKEN1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 990,
                        "src": "3719:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ASSET_$984_storage",
                          "typeString": "struct TokenisableRange.ASSET storage ref"
                        }
                      },
                      "id": 1154,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3726:8:1",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 983,
                      "src": "3719:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1155,
                          "name": "asset1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "3737:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5329",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3744:8:1",
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4858,
                        "src": "3737:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 1157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3737:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3719:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "3719:35:1"
                },
                {
                  "assignments": [
                    1161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1161,
                      "mutability": "mutable",
                      "name": "quoteSymbol",
                      "nameLocation": "3778:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1455,
                      "src": "3764:25:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1160,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3764:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1165,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1162,
                        "name": "asset0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "3792:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3799:6:1",
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4848,
                      "src": "3792:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3792:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3764:43:1"
                },
                {
                  "assignments": [
                    1167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1167,
                      "mutability": "mutable",
                      "name": "baseSymbol",
                      "nameLocation": "3831:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1455,
                      "src": "3817:24:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1166,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3817:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1171,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1168,
                        "name": "asset1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1084,
                        "src": "3844:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3851:6:1",
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4848,
                      "src": "3844:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3844:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3817:42:1"
                },
                {
                  "assignments": [
                    1173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1173,
                      "mutability": "mutable",
                      "name": "_upperTick",
                      "nameLocation": "3876:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1455,
                      "src": "3870:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 1172,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3870:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1210,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_281474976710656_by_1",
                                "typeString": "int_const 281474976710656"
                              },
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 1178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3955:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3438",
                                "id": 1179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3960:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_48_by_1",
                                  "typeString": "int_const 48"
                                },
                                "value": "48"
                              },
                              "src": "3955:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_281474976710656_by_1",
                                "typeString": "int_const 281474976710656"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1193,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1190,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                                                  "typeString": "int_const 79228162514264337593543950336"
                                                },
                                                "id": 1184,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "hexValue": "32",
                                                  "id": 1182,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "4017:1:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_2_by_1",
                                                    "typeString": "int_const 2"
                                                  },
                                                  "value": "2"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "**",
                                                "rightExpression": {
                                                  "hexValue": "3936",
                                                  "id": 1183,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "4022:2:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_96_by_1",
                                                    "typeString": "int_const 96"
                                                  },
                                                  "value": "96"
                                                },
                                                "src": "4017:7:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                                                  "typeString": "int_const 79228162514264337593543950336"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 1188,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "hexValue": "3130",
                                                      "id": 1185,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "4028:2:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_10_by_1",
                                                        "typeString": "int_const 10"
                                                      },
                                                      "value": "10"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "**",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "id": 1186,
                                                        "name": "TOKEN1",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 990,
                                                        "src": "4034:6:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                                          "typeString": "struct TokenisableRange.ASSET storage ref"
                                                        }
                                                      },
                                                      "id": 1187,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberLocation": "4041:8:1",
                                                      "memberName": "decimals",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 983,
                                                      "src": "4034:15:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                      }
                                                    },
                                                    "src": "4028:21:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 1189,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "4027:23:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "4017:33:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 1191,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "4016:35:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "31653130",
                                          "id": 1192,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4054:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000000000_by_1",
                                            "typeString": "int_const 10000000000"
                                          },
                                          "value": "1e10"
                                        },
                                        "src": "4016:42:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1194,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4015:44:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1203,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "arguments": [
                                            {
                                              "id": 1197,
                                              "name": "startX10",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1086,
                                              "src": "4099:8:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint128",
                                                "typeString": "uint128"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint128",
                                                "typeString": "uint128"
                                              }
                                            ],
                                            "id": 1196,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4091:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            },
                                            "typeName": {
                                              "id": 1195,
                                              "name": "uint256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4091:7:1",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 1198,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4091:17:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1202,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3130",
                                            "id": 1199,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4111:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 1200,
                                              "name": "TOKEN0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 987,
                                              "src": "4117:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                                "typeString": "struct TokenisableRange.ASSET storage ref"
                                              }
                                            },
                                            "id": 1201,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4124:8:1",
                                            "memberName": "decimals",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 983,
                                            "src": "4117:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "4111:21:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4091:41:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1204,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4090:43:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4015:118:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1181,
                                "name": "sqrt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1074,
                                "src": "3985:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3985:170:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3955:200:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3930:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 1176,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "3930:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3930:239:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "expression": {
                        "id": 1174,
                        "name": "TickMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11852,
                        "src": "3889:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TickMath_$11852_$",
                          "typeString": "type(library TickMath)"
                        }
                      },
                      "id": 1175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3898:18:1",
                      "memberName": "getTickAtSqrtRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11851,
                      "src": "3889:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_uint160_$returns$_t_int24_$",
                        "typeString": "function (uint160) pure returns (int24)"
                      }
                    },
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3889:290:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3870:309:1"
                },
                {
                  "assignments": [
                    1212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1212,
                      "mutability": "mutable",
                      "name": "_lowerTick",
                      "nameLocation": "4195:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1455,
                      "src": "4189:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 1211,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4189:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1249,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_281474976710656_by_1",
                                "typeString": "int_const 281474976710656"
                              },
                              "id": 1219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 1217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4274:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3438",
                                "id": 1218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4279:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_48_by_1",
                                  "typeString": "int_const 48"
                                },
                                "value": "48"
                              },
                              "src": "4274:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_281474976710656_by_1",
                                "typeString": "int_const 281474976710656"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1244,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1232,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1229,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                                                  "typeString": "int_const 79228162514264337593543950336"
                                                },
                                                "id": 1223,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "hexValue": "32",
                                                  "id": 1221,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "4336:1:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_2_by_1",
                                                    "typeString": "int_const 2"
                                                  },
                                                  "value": "2"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "**",
                                                "rightExpression": {
                                                  "hexValue": "3936",
                                                  "id": 1222,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "4341:2:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_96_by_1",
                                                    "typeString": "int_const 96"
                                                  },
                                                  "value": "96"
                                                },
                                                "src": "4336:7:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                                                  "typeString": "int_const 79228162514264337593543950336"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 1227,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "hexValue": "3130",
                                                      "id": 1224,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "4347:2:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_10_by_1",
                                                        "typeString": "int_const 10"
                                                      },
                                                      "value": "10"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "**",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "id": 1225,
                                                        "name": "TOKEN1",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 990,
                                                        "src": "4353:6:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                                          "typeString": "struct TokenisableRange.ASSET storage ref"
                                                        }
                                                      },
                                                      "id": 1226,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberLocation": "4360:8:1",
                                                      "memberName": "decimals",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 983,
                                                      "src": "4353:15:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                      }
                                                    },
                                                    "src": "4347:21:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 1228,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "4346:23:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "4336:33:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 1230,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "4335:35:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "31653130",
                                          "id": 1231,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4373:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000000000_by_1",
                                            "typeString": "int_const 10000000000"
                                          },
                                          "value": "1e10"
                                        },
                                        "src": "4335:42:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1233,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4334:44:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1242,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "arguments": [
                                            {
                                              "id": 1236,
                                              "name": "endX10",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1088,
                                              "src": "4418:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint128",
                                                "typeString": "uint128"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint128",
                                                "typeString": "uint128"
                                              }
                                            ],
                                            "id": 1235,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4410:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            },
                                            "typeName": {
                                              "id": 1234,
                                              "name": "uint256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4410:7:1",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 1237,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4410:15:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1241,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3130",
                                            "id": 1238,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4428:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 1239,
                                              "name": "TOKEN0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 987,
                                              "src": "4434:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                                "typeString": "struct TokenisableRange.ASSET storage ref"
                                              }
                                            },
                                            "id": 1240,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4441:8:1",
                                            "memberName": "decimals",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 983,
                                            "src": "4434:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "4428:21:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4410:39:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1243,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4409:41:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4334:116:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1220,
                                "name": "sqrt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1074,
                                "src": "4304:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4304:168:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4274:198:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4249:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 1215,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "4249:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4249:237:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "expression": {
                        "id": 1213,
                        "name": "TickMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11852,
                        "src": "4208:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TickMath_$11852_$",
                          "typeString": "type(library TickMath)"
                        }
                      },
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4217:18:1",
                      "memberName": "getTickAtSqrtRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11851,
                      "src": "4208:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_uint160_$returns$_t_int24_$",
                        "typeString": "function (uint160) pure returns (int24)"
                      }
                    },
                    "id": 1248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4208:288:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4189:307:1"
                },
                {
                  "condition": {
                    "id": 1250,
                    "name": "isTicker",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1094,
                    "src": "4511:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1432,
                    "nodeType": "Block",
                    "src": "5506:969:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 1344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1342,
                            "name": "feeTier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "5520:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "35",
                            "id": 1343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5530:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "5520:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "id": 1345,
                        "nodeType": "ExpressionStatement",
                        "src": "5520:11:1"
                      },
                      {
                        "expression": {
                          "id": 1370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1346,
                            "name": "_lowerTick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1212,
                            "src": "5545:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "id": 1369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  },
                                  "id": 1352,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1347,
                                    "name": "_lowerTick",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1212,
                                    "src": "5575:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 1350,
                                        "name": "feeTier",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 972,
                                        "src": "5594:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      ],
                                      "id": 1349,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5588:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int24_$",
                                        "typeString": "type(int24)"
                                      },
                                      "typeName": {
                                        "id": 1348,
                                        "name": "int24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5588:5:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1351,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5588:14:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "src": "5575:27:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "id": 1353,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5574:29:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  },
                                  "id": 1367,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_int24",
                                          "typeString": "int24"
                                        },
                                        "id": 1359,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1354,
                                          "name": "_lowerTick",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1212,
                                          "src": "5624:10:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "arguments": [
                                            {
                                              "id": 1357,
                                              "name": "feeTier",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 972,
                                              "src": "5643:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint24",
                                                "typeString": "uint24"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint24",
                                                "typeString": "uint24"
                                              }
                                            ],
                                            "id": 1356,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "5637:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_int24_$",
                                              "typeString": "type(int24)"
                                            },
                                            "typeName": {
                                              "id": 1355,
                                              "name": "int24",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "5637:5:1",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 1358,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5637:14:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                          }
                                        },
                                        "src": "5624:27:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int24",
                                          "typeString": "int24"
                                        }
                                      }
                                    ],
                                    "id": 1360,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5623:29:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "%",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        },
                                        "id": 1365,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1363,
                                          "name": "feeTier",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 972,
                                          "src": "5661:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint24",
                                            "typeString": "uint24"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "32",
                                          "id": 1364,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5671:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "src": "5661:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      ],
                                      "id": 1362,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5655:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int24_$",
                                        "typeString": "type(int24)"
                                      },
                                      "typeName": {
                                        "id": 1361,
                                        "name": "int24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5655:5:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1366,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5655:18:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "src": "5623:50:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "id": 1368,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5622:52:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "src": "5574:100:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "5545:129:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "id": 1371,
                        "nodeType": "ExpressionStatement",
                        "src": "5545:129:1"
                      },
                      {
                        "expression": {
                          "id": 1396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1372,
                            "name": "_upperTick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1173,
                            "src": "5688:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "id": 1395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  },
                                  "id": 1378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1373,
                                    "name": "_upperTick",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1173,
                                    "src": "5718:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 1376,
                                        "name": "feeTier",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 972,
                                        "src": "5737:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      ],
                                      "id": 1375,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5731:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int24_$",
                                        "typeString": "type(int24)"
                                      },
                                      "typeName": {
                                        "id": 1374,
                                        "name": "int24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5731:5:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1377,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5731:14:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "src": "5718:27:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "id": 1379,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5717:29:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  },
                                  "id": 1393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_int24",
                                          "typeString": "int24"
                                        },
                                        "id": 1385,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1380,
                                          "name": "_upperTick",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1173,
                                          "src": "5767:10:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "arguments": [
                                            {
                                              "id": 1383,
                                              "name": "feeTier",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 972,
                                              "src": "5786:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint24",
                                                "typeString": "uint24"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint24",
                                                "typeString": "uint24"
                                              }
                                            ],
                                            "id": 1382,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "5780:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_int24_$",
                                              "typeString": "type(int24)"
                                            },
                                            "typeName": {
                                              "id": 1381,
                                              "name": "int24",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "5780:5:1",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 1384,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5780:14:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                          }
                                        },
                                        "src": "5767:27:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int24",
                                          "typeString": "int24"
                                        }
                                      }
                                    ],
                                    "id": 1386,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5766:29:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "%",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        },
                                        "id": 1391,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1389,
                                          "name": "feeTier",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 972,
                                          "src": "5804:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint24",
                                            "typeString": "uint24"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "32",
                                          "id": 1390,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5814:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "src": "5804:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      ],
                                      "id": 1388,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5798:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int24_$",
                                        "typeString": "type(int24)"
                                      },
                                      "typeName": {
                                        "id": 1387,
                                        "name": "int24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5798:5:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1392,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5798:18:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "src": "5766:50:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "id": 1394,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5765:52:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "src": "5717:100:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "5688:129:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "id": 1397,
                        "nodeType": "ExpressionStatement",
                        "src": "5688:129:1"
                      },
                      {
                        "expression": {
                          "id": 1413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1398,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "5831:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "52616e67657220",
                                    "id": 1403,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5901:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_219d68db5562cbe9189582cb47d23df34b7e6b96219a9d61a2fa4849c79ee7ba",
                                      "typeString": "literal_string \"Ranger \""
                                    },
                                    "value": "Ranger "
                                  },
                                  {
                                    "id": 1404,
                                    "name": "baseSymbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1167,
                                    "src": "5932:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "20",
                                    "id": 1405,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5964:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                      "typeString": "literal_string \" \""
                                    },
                                    "value": " "
                                  },
                                  {
                                    "id": 1406,
                                    "name": "quoteSymbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1161,
                                    "src": "5989:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "20",
                                    "id": 1407,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6022:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                      "typeString": "literal_string \" \""
                                    },
                                    "value": " "
                                  },
                                  {
                                    "id": 1408,
                                    "name": "startName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1090,
                                    "src": "6047:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "2d",
                                    "id": 1409,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6078:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                                      "typeString": "literal_string \"-\""
                                    },
                                    "value": "-"
                                  },
                                  {
                                    "id": 1410,
                                    "name": "endName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1092,
                                    "src": "6103:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_219d68db5562cbe9189582cb47d23df34b7e6b96219a9d61a2fa4849c79ee7ba",
                                      "typeString": "literal_string \"Ranger \""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                      "typeString": "literal_string \" \""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                      "typeString": "literal_string \" \""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                                      "typeString": "literal_string \"-\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1401,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5863:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1402,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "5867:12:1",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5863:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5863:265:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5839:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 1399,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "5839:6:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5839:303:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "5831:311:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1414,
                        "nodeType": "ExpressionStatement",
                        "src": "5831:311:1"
                      },
                      {
                        "expression": {
                          "id": 1430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1415,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "6156:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "522d",
                                    "id": 1420,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6228:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c4a25a9cc3f63fcf27669f47ff8afad59f65fd40c4cf19726d3df347c100c6be",
                                      "typeString": "literal_string \"R-\""
                                    },
                                    "value": "R-"
                                  },
                                  {
                                    "id": 1421,
                                    "name": "startName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1090,
                                    "src": "6254:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "5f",
                                    "id": 1422,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6285:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_cd5edcba1904ce1b09e94c8a2d2a85375599856ca21c793571193054498b51d7",
                                      "typeString": "literal_string \"_\""
                                    },
                                    "value": "_"
                                  },
                                  {
                                    "id": 1423,
                                    "name": "endName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1092,
                                    "src": "6310:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "2d",
                                    "id": 1424,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6339:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                                      "typeString": "literal_string \"-\""
                                    },
                                    "value": "-"
                                  },
                                  {
                                    "id": 1425,
                                    "name": "baseSymbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1167,
                                    "src": "6364:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "2d",
                                    "id": 1426,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6396:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                                      "typeString": "literal_string \"-\""
                                    },
                                    "value": "-"
                                  },
                                  {
                                    "id": 1427,
                                    "name": "quoteSymbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1161,
                                    "src": "6421:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c4a25a9cc3f63fcf27669f47ff8afad59f65fd40c4cf19726d3df347c100c6be",
                                      "typeString": "literal_string \"R-\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_cd5edcba1904ce1b09e94c8a2d2a85375599856ca21c793571193054498b51d7",
                                      "typeString": "literal_string \"_\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                                      "typeString": "literal_string \"-\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                                      "typeString": "literal_string \"-\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1418,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6190:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1419,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "6194:12:1",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "6190:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6190:260:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6166:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 1416,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "6166:6:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6166:298:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "6156:308:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1431,
                        "nodeType": "ExpressionStatement",
                        "src": "6156:308:1"
                      }
                    ]
                  },
                  "id": 1433,
                  "nodeType": "IfStatement",
                  "src": "4507:1968:1",
                  "trueBody": {
                    "id": 1341,
                    "nodeType": "Block",
                    "src": "4521:979:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1251,
                            "name": "feeTier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "4535:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "35",
                            "id": 1252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4545:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "4535:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "id": 1254,
                        "nodeType": "ExpressionStatement",
                        "src": "4535:11:1"
                      },
                      {
                        "assignments": [
                          1256
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1256,
                            "mutability": "mutable",
                            "name": "midleTick",
                            "nameLocation": "4566:9:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1341,
                            "src": "4560:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "typeName": {
                              "id": 1255,
                              "name": "int24",
                              "nodeType": "ElementaryTypeName",
                              "src": "4560:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1257,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4560:15:1"
                      },
                      {
                        "expression": {
                          "id": 1265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1258,
                            "name": "midleTick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "4589:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "id": 1264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  },
                                  "id": 1261,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1259,
                                    "name": "_upperTick",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1173,
                                    "src": "4602:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 1260,
                                    "name": "_lowerTick",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1212,
                                    "src": "4615:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "src": "4602:23:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "id": 1262,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4601:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 1263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4629:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "4601:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "4589:41:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "id": 1266,
                        "nodeType": "ExpressionStatement",
                        "src": "4589:41:1"
                      },
                      {
                        "expression": {
                          "id": 1291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1267,
                            "name": "_upperTick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1173,
                            "src": "4644:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "id": 1290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  },
                                  "id": 1273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1268,
                                    "name": "midleTick",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1256,
                                    "src": "4674:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 1271,
                                        "name": "feeTier",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 972,
                                        "src": "4692:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      ],
                                      "id": 1270,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4686:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int24_$",
                                        "typeString": "type(int24)"
                                      },
                                      "typeName": {
                                        "id": 1269,
                                        "name": "int24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4686:5:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1272,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4686:14:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "src": "4674:26:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "id": 1274,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4673:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  },
                                  "id": 1288,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_int24",
                                          "typeString": "int24"
                                        },
                                        "id": 1280,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1275,
                                          "name": "midleTick",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1256,
                                          "src": "4722:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "arguments": [
                                            {
                                              "id": 1278,
                                              "name": "feeTier",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 972,
                                              "src": "4740:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint24",
                                                "typeString": "uint24"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint24",
                                                "typeString": "uint24"
                                              }
                                            ],
                                            "id": 1277,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4734:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_int24_$",
                                              "typeString": "type(int24)"
                                            },
                                            "typeName": {
                                              "id": 1276,
                                              "name": "int24",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4734:5:1",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 1279,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4734:14:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                          }
                                        },
                                        "src": "4722:26:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int24",
                                          "typeString": "int24"
                                        }
                                      }
                                    ],
                                    "id": 1281,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4721:28:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "%",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        },
                                        "id": 1286,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1284,
                                          "name": "feeTier",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 972,
                                          "src": "4758:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint24",
                                            "typeString": "uint24"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "32",
                                          "id": 1285,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4768:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "src": "4758:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      ],
                                      "id": 1283,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4752:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int24_$",
                                        "typeString": "type(int24)"
                                      },
                                      "typeName": {
                                        "id": 1282,
                                        "name": "int24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4752:5:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1287,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4752:18:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "src": "4721:49:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "id": 1289,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4720:51:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "src": "4673:98:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "4644:127:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "id": 1292,
                        "nodeType": "ExpressionStatement",
                        "src": "4644:127:1"
                      },
                      {
                        "expression": {
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1293,
                            "name": "_lowerTick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1212,
                            "src": "4785:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "id": 1304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              "id": 1299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1294,
                                "name": "_upperTick",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1173,
                                "src": "4798:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 1297,
                                    "name": "feeTier",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 972,
                                    "src": "4817:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    }
                                  ],
                                  "id": 1296,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4811:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int24_$",
                                    "typeString": "type(int24)"
                                  },
                                  "typeName": {
                                    "id": 1295,
                                    "name": "int24",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4811:5:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4811:14:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "src": "4798:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 1302,
                                  "name": "feeTier",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 972,
                                  "src": "4834:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                ],
                                "id": 1301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4828:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int24_$",
                                  "typeString": "type(int24)"
                                },
                                "typeName": {
                                  "id": 1300,
                                  "name": "int24",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4828:5:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4828:14:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "src": "4798:44:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "4785:57:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "id": 1306,
                        "nodeType": "ExpressionStatement",
                        "src": "4785:57:1"
                      },
                      {
                        "expression": {
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1307,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "4856:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "5469636b657220",
                                    "id": 1312,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4926:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_927dc9ade8544fbe9ded2d92eb7c3daab2d96c46715415999bb2081d5251c692",
                                      "typeString": "literal_string \"Ticker \""
                                    },
                                    "value": "Ticker "
                                  },
                                  {
                                    "id": 1313,
                                    "name": "baseSymbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1167,
                                    "src": "4957:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "20",
                                    "id": 1314,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4989:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                      "typeString": "literal_string \" \""
                                    },
                                    "value": " "
                                  },
                                  {
                                    "id": 1315,
                                    "name": "quoteSymbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1161,
                                    "src": "5014:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "20",
                                    "id": 1316,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5047:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                      "typeString": "literal_string \" \""
                                    },
                                    "value": " "
                                  },
                                  {
                                    "id": 1317,
                                    "name": "startName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1090,
                                    "src": "5072:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "2d",
                                    "id": 1318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5103:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                                      "typeString": "literal_string \"-\""
                                    },
                                    "value": "-"
                                  },
                                  {
                                    "id": 1319,
                                    "name": "endName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1092,
                                    "src": "5128:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_927dc9ade8544fbe9ded2d92eb7c3daab2d96c46715415999bb2081d5251c692",
                                      "typeString": "literal_string \"Ticker \""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                      "typeString": "literal_string \" \""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                      "typeString": "literal_string \" \""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                                      "typeString": "literal_string \"-\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1310,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4888:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4892:12:1",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "4888:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4888:265:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4864:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 1308,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "4864:6:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4864:303:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "4856:311:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1323,
                        "nodeType": "ExpressionStatement",
                        "src": "4856:311:1"
                      },
                      {
                        "expression": {
                          "id": 1339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1324,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "5181:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "542d",
                                    "id": 1329,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5253:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7bddddd29a871c18a5e0193e69312ebd9a49f1250683d2d2c13b89ee12db5bce",
                                      "typeString": "literal_string \"T-\""
                                    },
                                    "value": "T-"
                                  },
                                  {
                                    "id": 1330,
                                    "name": "startName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1090,
                                    "src": "5279:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "5f",
                                    "id": 1331,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5310:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_cd5edcba1904ce1b09e94c8a2d2a85375599856ca21c793571193054498b51d7",
                                      "typeString": "literal_string \"_\""
                                    },
                                    "value": "_"
                                  },
                                  {
                                    "id": 1332,
                                    "name": "endName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1092,
                                    "src": "5335:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "2d",
                                    "id": 1333,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5364:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                                      "typeString": "literal_string \"-\""
                                    },
                                    "value": "-"
                                  },
                                  {
                                    "id": 1334,
                                    "name": "baseSymbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1167,
                                    "src": "5389:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "2d",
                                    "id": 1335,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5421:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                                      "typeString": "literal_string \"-\""
                                    },
                                    "value": "-"
                                  },
                                  {
                                    "id": 1336,
                                    "name": "quoteSymbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1161,
                                    "src": "5446:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_7bddddd29a871c18a5e0193e69312ebd9a49f1250683d2d2c13b89ee12db5bce",
                                      "typeString": "literal_string \"T-\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_cd5edcba1904ce1b09e94c8a2d2a85375599856ca21c793571193054498b51d7",
                                      "typeString": "literal_string \"_\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                                      "typeString": "literal_string \"-\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                                      "typeString": "literal_string \"-\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1327,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5215:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "5219:12:1",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5215:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5215:260:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5191:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 1325,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "5191:6:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5191:298:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "5181:308:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1340,
                        "nodeType": "ExpressionStatement",
                        "src": "5181:308:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1434,
                      "name": "lowerTick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 968,
                      "src": "6484:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1435,
                      "name": "_lowerTick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1212,
                      "src": "6496:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "6484:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 1437,
                  "nodeType": "ExpressionStatement",
                  "src": "6484:22:1"
                },
                {
                  "expression": {
                    "id": 1440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1438,
                      "name": "upperTick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "6516:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1439,
                      "name": "_upperTick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1173,
                      "src": "6528:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "6516:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 1441,
                  "nodeType": "ExpressionStatement",
                  "src": "6516:22:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1445,
                            "name": "asset0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1081,
                            "src": "6568:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$5329",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$5329",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6560:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1443,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6560:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6560:15:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1449,
                            "name": "asset1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1084,
                            "src": "6585:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$5329",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$5329",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6577:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1447,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6577:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6577:15:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1451,
                        "name": "startX10",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1086,
                        "src": "6594:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 1452,
                        "name": "endX10",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1088,
                        "src": "6604:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 1442,
                      "name": "InitTR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 947,
                      "src": "6553:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint128_$_t_uint128_$returns$__$",
                        "typeString": "function (address,address,uint128,uint128)"
                      }
                    },
                    "id": 1453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6553:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1454,
                  "nodeType": "EmitStatement",
                  "src": "6548:63:1"
                }
              ]
            },
            "documentation": {
              "id": 1075,
              "nodeType": "StructuredDocumentation",
              "src": "2614:512:1",
              "text": "@notice Store range parameters\n @param _oracle Address of the IAaveOracle interface of the ROE lending pool\n @param asset0 Quote token address\n @param asset1 Base token address\n @param startX10 Range lower price scaled by 1e10\n @param endX10 Range high price scaled by 1e10\n @param startName Name of the range lower bound\n @param endName Name of the range higher bound\n @param isTicker Range is single tick liquidity around upperTick/startX10/startName"
            },
            "functionSelector": "d3518877",
            "id": 1456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initProxy",
            "nameLocation": "3140:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1078,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "3171:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "3159:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                    "typeString": "contract IAaveOracle"
                  },
                  "typeName": {
                    "id": 1077,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1076,
                      "name": "IAaveOracle",
                      "nameLocations": [
                        "3159:11:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9894,
                      "src": "3159:11:1"
                    },
                    "referencedDeclaration": 9894,
                    "src": "3159:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                      "typeString": "contract IAaveOracle"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1081,
                  "mutability": "mutable",
                  "name": "asset0",
                  "nameLocation": "3194:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "3188:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$5329",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1080,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1079,
                      "name": "ERC20",
                      "nameLocations": [
                        "3188:5:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5329,
                      "src": "3188:5:1"
                    },
                    "referencedDeclaration": 5329,
                    "src": "3188:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$5329",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "asset1",
                  "nameLocation": "3216:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "3210:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$5329",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1083,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1082,
                      "name": "ERC20",
                      "nameLocations": [
                        "3210:5:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5329,
                      "src": "3210:5:1"
                    },
                    "referencedDeclaration": 5329,
                    "src": "3210:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$5329",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1086,
                  "mutability": "mutable",
                  "name": "startX10",
                  "nameLocation": "3240:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "3232:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1085,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3232:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1088,
                  "mutability": "mutable",
                  "name": "endX10",
                  "nameLocation": "3266:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "3258:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1087,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3258:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "startName",
                  "nameLocation": "3296:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "3282:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3282:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "endName",
                  "nameLocation": "3329:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "3315:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1091,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1094,
                  "mutability": "mutable",
                  "name": "isTicker",
                  "nameLocation": "3351:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "3346:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1093,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3346:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3149:216:1"
            },
            "returnParameters": {
              "id": 1096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3375:0:1"
            },
            "scope": 2807,
            "src": "3131:3487:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4838
            ],
            "body": {
              "id": 1465,
              "nodeType": "Block",
              "src": "6816:29:1",
              "statements": [
                {
                  "expression": {
                    "id": 1463,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 995,
                    "src": "6833:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1462,
                  "id": 1464,
                  "nodeType": "Return",
                  "src": "6826:12:1"
                }
              ]
            },
            "documentation": {
              "id": 1457,
              "nodeType": "StructuredDocumentation",
              "src": "6624:118:1",
              "text": "@notice Get the name of this contract token\n @dev Override name, symbol and decimals from ERC20 inheritance"
            },
            "functionSelector": "06fdde03",
            "id": 1466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "6756:4:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1459,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6783:8:1"
            },
            "parameters": {
              "id": 1458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6760:2:1"
            },
            "returnParameters": {
              "id": 1462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1461,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1466,
                  "src": "6801:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1460,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6801:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6800:15:1"
            },
            "scope": 2807,
            "src": "6747:98:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4848
            ],
            "body": {
              "id": 1475,
              "nodeType": "Block",
              "src": "6976:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 1473,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 997,
                    "src": "6993:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1472,
                  "id": 1474,
                  "nodeType": "Return",
                  "src": "6986:14:1"
                }
              ]
            },
            "documentation": {
              "id": 1467,
              "nodeType": "StructuredDocumentation",
              "src": "6851:49:1",
              "text": "@notice Get the symbol of this contract token"
            },
            "functionSelector": "95d89b41",
            "id": 1476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "6914:6:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1469,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6943:8:1"
            },
            "parameters": {
              "id": 1468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6920:2:1"
            },
            "returnParameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1471,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1476,
                  "src": "6961:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1470,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6961:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6960:15:1"
            },
            "scope": 2807,
            "src": "6905:102:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1649,
              "nodeType": "Block",
              "src": "7345:1374:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ProxyState_$1001",
                          "typeString": "enum TokenisableRange.ProxyState"
                        },
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1485,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "7363:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProxyState_$1001",
                            "typeString": "enum TokenisableRange.ProxyState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1486,
                            "name": "ProxyState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1001,
                            "src": "7373:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ProxyState_$1001_$",
                              "typeString": "type(enum TokenisableRange.ProxyState)"
                            }
                          },
                          "id": 1487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7384:7:1",
                          "memberName": "INIT_LP",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 999,
                          "src": "7373:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProxyState_$1001",
                            "typeString": "enum TokenisableRange.ProxyState"
                          }
                        },
                        "src": "7363:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21496e69744c50",
                        "id": 1489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7393:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13f21ce46ed2a903a9798f5e70ea36664550db5fc4a0e594cd53c895846a43fe",
                          "typeString": "literal_string \"!InitLP\""
                        },
                        "value": "!InitLP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13f21ce46ed2a903a9798f5e70ea36664550db5fc4a0e594cd53c895846a43fe",
                          "typeString": "literal_string \"!InitLP\""
                        }
                      ],
                      "id": 1484,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7355:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7355:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1491,
                  "nodeType": "ExpressionStatement",
                  "src": "7355:48:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1493,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7421:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7425:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7421:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1495,
                          "name": "creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1006,
                          "src": "7435:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7421:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e616c6c6f7765642063616c6c",
                        "id": 1497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7444:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c748e661e8cd84ae18dba2fc1ff42f9533a356b672d2c80afd3020694da3204",
                          "typeString": "literal_string \"Unallowed call\""
                        },
                        "value": "Unallowed call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c748e661e8cd84ae18dba2fc1ff42f9533a356b672d2c80afd3020694da3204",
                          "typeString": "literal_string \"Unallowed call\""
                        }
                      ],
                      "id": 1492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7413:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7413:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1499,
                  "nodeType": "ExpressionStatement",
                  "src": "7413:48:1"
                },
                {
                  "expression": {
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1500,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1004,
                      "src": "7471:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProxyState_$1001",
                        "typeString": "enum TokenisableRange.ProxyState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1501,
                        "name": "ProxyState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "7480:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProxyState_$1001_$",
                          "typeString": "type(enum TokenisableRange.ProxyState)"
                        }
                      },
                      "id": 1502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7491:5:1",
                      "memberName": "READY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "7480:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProxyState_$1001",
                        "typeString": "enum TokenisableRange.ProxyState"
                      }
                    },
                    "src": "7471:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProxyState_$1001",
                      "typeString": "enum TokenisableRange.ProxyState"
                    }
                  },
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "7471:25:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1510,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7536:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7540:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7536:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1514,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7556:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                              "typeString": "contract TokenisableRange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                              "typeString": "contract TokenisableRange"
                            }
                          ],
                          "id": 1513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7548:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1512,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7548:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7548:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1516,
                        "name": "n0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "7563:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1505,
                          "name": "TOKEN0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "7506:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ASSET_$984_storage",
                            "typeString": "struct TokenisableRange.ASSET storage ref"
                          }
                        },
                        "id": 1508,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7513:5:1",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 981,
                        "src": "7506:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7519:16:1",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7283,
                      "src": "7506:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7506:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1518,
                  "nodeType": "ExpressionStatement",
                  "src": "7506:60:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1524,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7606:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7610:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7606:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1528,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7626:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                              "typeString": "contract TokenisableRange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                              "typeString": "contract TokenisableRange"
                            }
                          ],
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7618:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1526,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7618:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7618:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1530,
                        "name": "n1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "7633:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1519,
                          "name": "TOKEN1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 990,
                          "src": "7576:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ASSET_$984_storage",
                            "typeString": "struct TokenisableRange.ASSET storage ref"
                          }
                        },
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7583:5:1",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 981,
                        "src": "7576:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7589:16:1",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7283,
                      "src": "7576:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7576:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1532,
                  "nodeType": "ExpressionStatement",
                  "src": "7576:60:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1540,
                            "name": "POS_MGR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1020,
                            "src": "7689:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                              "typeString": "contract INonfungiblePositionManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                              "typeString": "contract INonfungiblePositionManager"
                            }
                          ],
                          "id": 1539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7681:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1538,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7681:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7681:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1542,
                        "name": "n0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "7699:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1533,
                          "name": "TOKEN0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "7646:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ASSET_$984_storage",
                            "typeString": "struct TokenisableRange.ASSET storage ref"
                          }
                        },
                        "id": 1536,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7653:5:1",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 981,
                        "src": "7646:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7659:21:1",
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7363,
                      "src": "7646:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7646:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1544,
                  "nodeType": "ExpressionStatement",
                  "src": "7646:56:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1552,
                            "name": "POS_MGR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1020,
                            "src": "7755:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                              "typeString": "contract INonfungiblePositionManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                              "typeString": "contract INonfungiblePositionManager"
                            }
                          ],
                          "id": 1551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7747:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1550,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7747:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7747:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1554,
                        "name": "n1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "7765:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1545,
                          "name": "TOKEN1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 990,
                          "src": "7712:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ASSET_$984_storage",
                            "typeString": "struct TokenisableRange.ASSET storage ref"
                          }
                        },
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7719:5:1",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 981,
                        "src": "7712:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7725:21:1",
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7363,
                      "src": "7712:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7712:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1556,
                  "nodeType": "ExpressionStatement",
                  "src": "7712:56:1"
                },
                {
                  "expression": {
                    "id": 1601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 1557,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 974,
                          "src": "7779:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1558,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1008,
                          "src": "7788:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null
                      ],
                      "id": 1559,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7778:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint128_$__$__$",
                        "typeString": "tuple(uint256,uint128,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1566,
                                    "name": "TOKEN0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 987,
                                    "src": "7904:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                      "typeString": "struct TokenisableRange.ASSET storage ref"
                                    }
                                  },
                                  "id": 1567,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7911:5:1",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 981,
                                  "src": "7904:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 1565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7896:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1564,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7896:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7896:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1571,
                                    "name": "TOKEN1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 990,
                                    "src": "7951:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                      "typeString": "struct TokenisableRange.ASSET storage ref"
                                    }
                                  },
                                  "id": 1572,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7958:5:1",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 981,
                                  "src": "7951:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 1570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7943:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1569,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7943:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7943:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              },
                              "id": 1576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1574,
                                "name": "feeTier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 972,
                                "src": "7987:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 1575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7997:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "7987:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            },
                            {
                              "id": 1577,
                              "name": "lowerTick",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 968,
                              "src": "8029:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1578,
                              "name": "upperTick",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 970,
                              "src": "8067:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1579,
                              "name": "n0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "8110:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1580,
                              "name": "n1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1481,
                              "src": "8146:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1583,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1581,
                                      "name": "n0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1479,
                                      "src": "8179:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "3935",
                                      "id": 1582,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8184:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_95_by_1",
                                        "typeString": "int_const 95"
                                      },
                                      "value": "95"
                                    },
                                    "src": "8179:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1584,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8178:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 1585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8190:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8178:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1589,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1587,
                                      "name": "n1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1481,
                                      "src": "8224:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "3935",
                                      "id": 1588,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8229:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_95_by_1",
                                        "typeString": "int_const 95"
                                      },
                                      "value": "95"
                                    },
                                    "src": "8224:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1590,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8223:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 1591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8235:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8223:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1595,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8275:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                    "typeString": "contract TokenisableRange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                    "typeString": "contract TokenisableRange"
                                  }
                                ],
                                "id": 1594,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8267:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1593,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8267:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8267:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1597,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8308:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8314:9:1",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8308:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1562,
                              "name": "INonfungiblePositionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10244,
                              "src": "7831:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$10244_$",
                                "typeString": "type(contract INonfungiblePositionManager)"
                              }
                            },
                            "id": 1563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7859:10:1",
                            "memberName": "MintParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10154,
                            "src": "7831:38:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_MintParams_$10154_storage_ptr_$",
                              "typeString": "type(struct INonfungiblePositionManager.MintParams storage pointer)"
                            }
                          },
                          "id": 1599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "7888:6:1",
                            "7935:6:1",
                            "7982:3:1",
                            "8018:9:1",
                            "8056:9:1",
                            "8094:14:1",
                            "8130:14:1",
                            "8166:10:1",
                            "8211:10:1",
                            "8256:9:1",
                            "8298:8:1"
                          ],
                          "names": [
                            "token0",
                            "token1",
                            "fee",
                            "tickLower",
                            "tickUpper",
                            "amount0Desired",
                            "amount1Desired",
                            "amount0Min",
                            "amount1Min",
                            "recipient",
                            "deadline"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "7831:507:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintParams_$10154_memory_ptr",
                            "typeString": "struct INonfungiblePositionManager.MintParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintParams_$10154_memory_ptr",
                            "typeString": "struct INonfungiblePositionManager.MintParams memory"
                          }
                        ],
                        "expression": {
                          "id": 1560,
                          "name": "POS_MGR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1020,
                          "src": "7805:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                            "typeString": "contract INonfungiblePositionManager"
                          }
                        },
                        "id": 1561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7813:4:1",
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10169,
                        "src": "7805:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_MintParams_$10154_memory_ptr_$returns$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (struct INonfungiblePositionManager.MintParams memory) payable external returns (uint256,uint128,uint256,uint256)"
                        }
                      },
                      "id": 1600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7805:543:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint128,uint256,uint256)"
                      }
                    },
                    "src": "7778:570:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1602,
                  "nodeType": "ExpressionStatement",
                  "src": "7778:570:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1608,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8448:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8452:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8448:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1615,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8503:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                  "typeString": "contract TokenisableRange"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                  "typeString": "contract TokenisableRange"
                                }
                              ],
                              "id": 1614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8495:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1613,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8495:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8495:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 1610,
                              "name": "TOKEN0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 987,
                              "src": "8472:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                "typeString": "struct TokenisableRange.ASSET storage ref"
                              }
                            },
                            "id": 1611,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8479:5:1",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 981,
                            "src": "8472:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$5329",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 1612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8485:9:1",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4882,
                          "src": "8472:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8472:37:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1603,
                          "name": "TOKEN0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "8409:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ASSET_$984_storage",
                            "typeString": "struct TokenisableRange.ASSET storage ref"
                          }
                        },
                        "id": 1606,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8416:5:1",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 981,
                        "src": "8409:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8422:12:1",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7257,
                      "src": "8409:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8409:110:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1619,
                  "nodeType": "ExpressionStatement",
                  "src": "8409:110:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1625,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8568:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8572:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8568:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1632,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8623:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                  "typeString": "contract TokenisableRange"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                  "typeString": "contract TokenisableRange"
                                }
                              ],
                              "id": 1631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8615:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1630,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8615:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8615:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 1627,
                              "name": "TOKEN1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 990,
                              "src": "8592:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                "typeString": "struct TokenisableRange.ASSET storage ref"
                              }
                            },
                            "id": 1628,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8599:5:1",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 981,
                            "src": "8592:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$5329",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 1629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8605:9:1",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4882,
                          "src": "8592:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8592:37:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1620,
                          "name": "TOKEN1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 990,
                          "src": "8529:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ASSET_$984_storage",
                            "typeString": "struct TokenisableRange.ASSET storage ref"
                          }
                        },
                        "id": 1623,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8536:5:1",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 981,
                        "src": "8529:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8542:12:1",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7257,
                      "src": "8529:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8529:110:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1636,
                  "nodeType": "ExpressionStatement",
                  "src": "8529:110:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1638,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8655:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8659:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8655:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 1640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8667:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 1637,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5189,
                      "src": "8649:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8649:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1642,
                  "nodeType": "ExpressionStatement",
                  "src": "8649:23:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1644,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8695:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8699:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8695:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 1646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8707:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 1643,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 953,
                      "src": "8687:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8687:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1648,
                  "nodeType": "EmitStatement",
                  "src": "8682:30:1"
                }
              ]
            },
            "documentation": {
              "id": 1477,
              "nodeType": "StructuredDocumentation",
              "src": "7013:286:1",
              "text": "@notice Initialize a TokenizableRange by adding assets in the underlying Uniswap V3 position\n @param n0 Amount of quote token added\n @param n1 Amount of base token added\n @notice The token amounts must be 95% correct or this will fail the Uniswap slippage check"
            },
            "functionSelector": "a5843f08",
            "id": 1650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nameLocation": "7313:4:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1479,
                  "mutability": "mutable",
                  "name": "n0",
                  "nameLocation": "7323:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1650,
                  "src": "7318:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7318:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "n1",
                  "nameLocation": "7332:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1650,
                  "src": "7327:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7327:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7317:18:1"
            },
            "returnParameters": {
              "id": 1483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7345:0:1"
            },
            "scope": 2807,
            "src": "7304:1415:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1934,
              "nodeType": "Block",
              "src": "8814:2675:1",
              "statements": [
                {
                  "assignments": [
                    1655,
                    1657
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1655,
                      "mutability": "mutable",
                      "name": "newFee0",
                      "nameLocation": "8833:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1934,
                      "src": "8825:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1654,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8825:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1657,
                      "mutability": "mutable",
                      "name": "newFee1",
                      "nameLocation": "8850:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1934,
                      "src": "8842:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1656,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8842:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1679,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1662,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 974,
                            "src": "8959:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1665,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9003:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                  "typeString": "contract TokenisableRange"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                  "typeString": "contract TokenisableRange"
                                }
                              ],
                              "id": 1664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8995:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1663,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8995:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8995:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1669,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9043:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint128_$",
                                    "typeString": "type(uint128)"
                                  },
                                  "typeName": {
                                    "id": 1668,
                                    "name": "uint128",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9043:7:1",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint128_$",
                                    "typeString": "type(uint128)"
                                  }
                                ],
                                "id": 1667,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "9038:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9038:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint128",
                                "typeString": "type(uint128)"
                              }
                            },
                            "id": 1671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "9052:3:1",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "9038:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1674,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9090:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint128_$",
                                    "typeString": "type(uint128)"
                                  },
                                  "typeName": {
                                    "id": 1673,
                                    "name": "uint128",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9090:7:1",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint128_$",
                                    "typeString": "type(uint128)"
                                  }
                                ],
                                "id": 1672,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "9085:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9085:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint128",
                                "typeString": "type(uint128)"
                              }
                            },
                            "id": 1676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "9099:3:1",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "9085:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 1660,
                            "name": "INonfungiblePositionManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10244,
                            "src": "8890:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$10244_$",
                              "typeString": "type(contract INonfungiblePositionManager)"
                            }
                          },
                          "id": 1661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8918:13:1",
                          "memberName": "CollectParams",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10226,
                          "src": "8890:41:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_CollectParams_$10226_storage_ptr_$",
                            "typeString": "type(struct INonfungiblePositionManager.CollectParams storage pointer)"
                          }
                        },
                        "id": 1677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "8950:7:1",
                          "8984:9:1",
                          "9026:10:1",
                          "9073:10:1"
                        ],
                        "names": [
                          "tokenId",
                          "recipient",
                          "amount0Max",
                          "amount1Max"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "8890:227:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollectParams_$10226_memory_ptr",
                          "typeString": "struct INonfungiblePositionManager.CollectParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CollectParams_$10226_memory_ptr",
                          "typeString": "struct INonfungiblePositionManager.CollectParams memory"
                        }
                      ],
                      "expression": {
                        "id": 1658,
                        "name": "POS_MGR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "8861:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                          "typeString": "contract INonfungiblePositionManager"
                        }
                      },
                      "id": 1659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8869:7:1",
                      "memberName": "collect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10237,
                      "src": "8861:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_CollectParams_$10226_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct INonfungiblePositionManager.CollectParams memory) payable external returns (uint256,uint256)"
                      }
                    },
                    "id": 1678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8861:266:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8824:303:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1680,
                            "name": "newFee0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1655,
                            "src": "9211:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9222:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9211:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1683,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9210:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1684,
                            "name": "newFee1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1657,
                            "src": "9229:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9240:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9229:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1687,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9228:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9210:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1690,
                  "nodeType": "IfStatement",
                  "src": "9206:45:1",
                  "trueBody": {
                    "functionReturnParameters": 1653,
                    "id": 1689,
                    "nodeType": "Return",
                    "src": "9244:7:1"
                  }
                },
                {
                  "assignments": [
                    1692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1692,
                      "mutability": "mutable",
                      "name": "tf0",
                      "nameLocation": "9265:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1934,
                      "src": "9260:8:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1691,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9260:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1699,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1693,
                            "name": "newFee0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1655,
                            "src": "9272:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1694,
                            "name": "treasuryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1032,
                            "src": "9282:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9272:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1696,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9271:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9297:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "9271:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9260:40:1"
                },
                {
                  "assignments": [
                    1701
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1701,
                      "mutability": "mutable",
                      "name": "tf1",
                      "nameLocation": "9315:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1934,
                      "src": "9310:8:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1700,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9310:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1708,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1702,
                            "name": "newFee1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1657,
                            "src": "9322:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1703,
                            "name": "treasuryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1032,
                            "src": "9332:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9322:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1705,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9321:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9347:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "9321:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9310:40:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1709,
                      "name": "tf0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1692,
                      "src": "9364:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9370:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9364:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1721,
                  "nodeType": "IfStatement",
                  "src": "9360:53:1",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1717,
                          "name": "treasury",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "9399:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1718,
                          "name": "tf0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1692,
                          "src": "9409:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 1712,
                            "name": "TOKEN0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 987,
                            "src": "9373:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ASSET_$984_storage",
                              "typeString": "struct TokenisableRange.ASSET storage ref"
                            }
                          },
                          "id": 1715,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9380:5:1",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 981,
                          "src": "9373:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5329",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 1716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9386:12:1",
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7257,
                        "src": "9373:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9373:40:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1720,
                    "nodeType": "ExpressionStatement",
                    "src": "9373:40:1"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1722,
                      "name": "tf1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1701,
                      "src": "9427:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9433:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9427:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1734,
                  "nodeType": "IfStatement",
                  "src": "9423:53:1",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1730,
                          "name": "treasury",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "9462:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1731,
                          "name": "tf1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1701,
                          "src": "9472:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 1725,
                            "name": "TOKEN1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 990,
                            "src": "9436:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ASSET_$984_storage",
                              "typeString": "struct TokenisableRange.ASSET storage ref"
                            }
                          },
                          "id": 1728,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9443:5:1",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 981,
                          "src": "9436:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5329",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 1729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9449:12:1",
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7257,
                        "src": "9436:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9436:40:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1733,
                    "nodeType": "ExpressionStatement",
                    "src": "9436:40:1"
                  }
                },
                {
                  "expression": {
                    "id": 1741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1735,
                      "name": "fee0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 976,
                      "src": "9487:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1736,
                          "name": "fee0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 976,
                          "src": "9494:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 1737,
                          "name": "newFee0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1655,
                          "src": "9501:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9494:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1739,
                        "name": "tf0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1692,
                        "src": "9511:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9494:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9487:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1742,
                  "nodeType": "ExpressionStatement",
                  "src": "9487:27:1"
                },
                {
                  "expression": {
                    "id": 1749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1743,
                      "name": "fee1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "9524:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1744,
                          "name": "fee1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "9531:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 1745,
                          "name": "newFee1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1657,
                          "src": "9538:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9531:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1747,
                        "name": "tf1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "9548:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9531:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9524:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1750,
                  "nodeType": "ExpressionStatement",
                  "src": "9524:27:1"
                },
                {
                  "assignments": [
                    1752,
                    1754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1752,
                      "mutability": "mutable",
                      "name": "bal0",
                      "nameLocation": "9610:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1934,
                      "src": "9602:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1751,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9602:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1754,
                      "mutability": "mutable",
                      "name": "bal1",
                      "nameLocation": "9624:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1934,
                      "src": "9616:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9616:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1759,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9665:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 1757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9668:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1755,
                      "name": "returnExpectedBalanceWithoutFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2584,
                      "src": "9632:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9632:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9601:69:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1760,
                              "name": "fee0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 976,
                              "src": "9784:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 1761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9791:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "9784:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1763,
                            "name": "bal0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1752,
                            "src": "9797:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9784:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1765,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9783:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1766,
                              "name": "fee1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "9807:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 1767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9814:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "9807:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1769,
                            "name": "bal1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1754,
                            "src": "9820:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9807:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1771,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9806:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9783:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1928,
                  "nodeType": "IfStatement",
                  "src": "9779:1662:1",
                  "trueBody": {
                    "id": 1927,
                    "nodeType": "Block",
                    "src": "9827:1614:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1780,
                                  "name": "POS_MGR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1020,
                                  "src": "9884:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                                    "typeString": "contract INonfungiblePositionManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                                    "typeString": "contract INonfungiblePositionManager"
                                  }
                                ],
                                "id": 1779,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9876:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1778,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9876:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9876:16:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1782,
                              "name": "fee0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 976,
                              "src": "9894:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1773,
                                "name": "TOKEN0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 987,
                                "src": "9841:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                  "typeString": "struct TokenisableRange.ASSET storage ref"
                                }
                              },
                              "id": 1776,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9848:5:1",
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 981,
                              "src": "9841:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$5329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9854:21:1",
                            "memberName": "safeIncreaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7363,
                            "src": "9841:34:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9841:58:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1784,
                        "nodeType": "ExpressionStatement",
                        "src": "9841:58:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1792,
                                  "name": "POS_MGR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1020,
                                  "src": "9956:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                                    "typeString": "contract INonfungiblePositionManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                                    "typeString": "contract INonfungiblePositionManager"
                                  }
                                ],
                                "id": 1791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9948:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1790,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9948:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9948:16:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1794,
                              "name": "fee1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "9966:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1785,
                                "name": "TOKEN1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 990,
                                "src": "9913:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                  "typeString": "struct TokenisableRange.ASSET storage ref"
                                }
                              },
                              "id": 1788,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9920:5:1",
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 981,
                              "src": "9913:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$5329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9926:21:1",
                            "memberName": "safeIncreaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7363,
                            "src": "9913:34:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9913:58:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1796,
                        "nodeType": "ExpressionStatement",
                        "src": "9913:58:1"
                      },
                      {
                        "assignments": [
                          1798,
                          1800,
                          1802
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1798,
                            "mutability": "mutable",
                            "name": "newLiquidity",
                            "nameLocation": "9994:12:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1927,
                            "src": "9986:20:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "typeName": {
                              "id": 1797,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "9986:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1800,
                            "mutability": "mutable",
                            "name": "added0",
                            "nameLocation": "10016:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1927,
                            "src": "10008:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1799,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10008:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1802,
                            "mutability": "mutable",
                            "name": "added1",
                            "nameLocation": "10032:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1927,
                            "src": "10024:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1801,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10024:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1816,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1807,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 974,
                                  "src": "10193:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1808,
                                  "name": "fee0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 976,
                                  "src": "10242:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1809,
                                  "name": "fee1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 978,
                                  "src": "10288:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 1810,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10330:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "30",
                                  "id": 1811,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10369:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "expression": {
                                    "id": 1812,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "10406:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1813,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10412:9:1",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "10406:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1805,
                                  "name": "INonfungiblePositionManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10244,
                                  "src": "10106:27:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$10244_$",
                                    "typeString": "type(contract INonfungiblePositionManager)"
                                  }
                                },
                                "id": 1806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10134:23:1",
                                "memberName": "IncreaseLiquidityParams",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10182,
                                "src": "10106:51:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_IncreaseLiquidityParams_$10182_storage_ptr_$",
                                  "typeString": "type(struct INonfungiblePositionManager.IncreaseLiquidityParams storage pointer)"
                                }
                              },
                              "id": 1814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "10184:7:1",
                                "10226:14:1",
                                "10272:14:1",
                                "10318:10:1",
                                "10357:10:1",
                                "10396:8:1"
                              ],
                              "names": [
                                "tokenId",
                                "amount0Desired",
                                "amount1Desired",
                                "amount0Min",
                                "amount1Min",
                                "deadline"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "10106:338:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IncreaseLiquidityParams_$10182_memory_ptr",
                                "typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_IncreaseLiquidityParams_$10182_memory_ptr",
                                "typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
                              }
                            ],
                            "expression": {
                              "id": 1803,
                              "name": "POS_MGR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1020,
                              "src": "10042:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                                "typeString": "contract INonfungiblePositionManager"
                              }
                            },
                            "id": 1804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10067:17:1",
                            "memberName": "increaseLiquidity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10195,
                            "src": "10042:42:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_struct$_IncreaseLiquidityParams_$10182_memory_ptr_$returns$_t_uint128_$_t_uint256_$_t_uint256_$",
                              "typeString": "function (struct INonfungiblePositionManager.IncreaseLiquidityParams memory) payable external returns (uint128,uint256,uint256)"
                            }
                          },
                          "id": 1815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10042:420:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint128,uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9985:477:1"
                      },
                      {
                        "assignments": [
                          1818
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1818,
                            "mutability": "mutable",
                            "name": "token0Price",
                            "nameLocation": "10571:11:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1927,
                            "src": "10566:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1817,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10566:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1827,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1823,
                                    "name": "TOKEN0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 987,
                                    "src": "10614:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                      "typeString": "struct TokenisableRange.ASSET storage ref"
                                    }
                                  },
                                  "id": 1824,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10621:5:1",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 981,
                                  "src": "10614:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 1822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10606:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1821,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10606:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10606:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1819,
                              "name": "ORACLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 993,
                              "src": "10585:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                                "typeString": "contract IAaveOracle"
                              }
                            },
                            "id": 1820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10592:13:1",
                            "memberName": "getAssetPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9886,
                            "src": "10585:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10585:43:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10566:62:1"
                      },
                      {
                        "assignments": [
                          1829
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1829,
                            "mutability": "mutable",
                            "name": "token1Price",
                            "nameLocation": "10647:11:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1927,
                            "src": "10642:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1828,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10642:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1838,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1834,
                                    "name": "TOKEN1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 990,
                                    "src": "10690:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                      "typeString": "struct TokenisableRange.ASSET storage ref"
                                    }
                                  },
                                  "id": 1835,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10697:5:1",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 981,
                                  "src": "10690:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 1833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10682:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1832,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10682:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10682:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1830,
                              "name": "ORACLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 993,
                              "src": "10661:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                                "typeString": "contract IAaveOracle"
                              }
                            },
                            "id": 1831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10668:13:1",
                            "memberName": "getAssetPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9886,
                            "src": "10661:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10661:43:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10642:62:1"
                      },
                      {
                        "assignments": [
                          1840
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1840,
                            "mutability": "mutable",
                            "name": "addedValue",
                            "nameLocation": "10723:10:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1927,
                            "src": "10718:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1839,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10718:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1860,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1843,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1841,
                                    "name": "added0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1800,
                                    "src": "10737:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1842,
                                    "name": "token0Price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1818,
                                    "src": "10746:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10737:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1844,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10736:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 1845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10777:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "expression": {
                                  "id": 1846,
                                  "name": "TOKEN0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 987,
                                  "src": "10783:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                    "typeString": "struct TokenisableRange.ASSET storage ref"
                                  }
                                },
                                "id": 1847,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10790:8:1",
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 983,
                                "src": "10783:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "10777:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10736:62:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1852,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1850,
                                    "name": "added1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1802,
                                    "src": "10818:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1851,
                                    "name": "token1Price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1829,
                                    "src": "10827:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10818:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1853,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10817:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 1854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10858:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "expression": {
                                  "id": 1855,
                                  "name": "TOKEN1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 990,
                                  "src": "10864:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                    "typeString": "struct TokenisableRange.ASSET storage ref"
                                  }
                                },
                                "id": 1856,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10871:8:1",
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 983,
                                "src": "10864:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "10858:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10817:62:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10736:143:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10718:161:1"
                      },
                      {
                        "assignments": [
                          1862
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1862,
                            "mutability": "mutable",
                            "name": "totalValue",
                            "nameLocation": "10898:10:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1927,
                            "src": "10893:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1861,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10893:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1882,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1865,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1863,
                                    "name": "bal0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1752,
                                    "src": "10912:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1864,
                                    "name": "token0Price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1818,
                                    "src": "10919:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10912:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1866,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10911:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 1867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10950:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "expression": {
                                  "id": 1868,
                                  "name": "TOKEN0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 987,
                                  "src": "10956:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                    "typeString": "struct TokenisableRange.ASSET storage ref"
                                  }
                                },
                                "id": 1869,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10963:8:1",
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 983,
                                "src": "10956:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "10950:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10911:60:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1874,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1872,
                                    "name": "bal1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1754,
                                    "src": "10991:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1873,
                                    "name": "token1Price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1829,
                                    "src": "10998:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10991:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1875,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10990:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 1876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11029:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "expression": {
                                  "id": 1877,
                                  "name": "TOKEN1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 990,
                                  "src": "11035:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                    "typeString": "struct TokenisableRange.ASSET storage ref"
                                  }
                                },
                                "id": 1878,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11042:8:1",
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 983,
                                "src": "11035:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "11029:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10990:60:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10911:139:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10893:157:1"
                      },
                      {
                        "assignments": [
                          1884
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1884,
                            "mutability": "mutable",
                            "name": "liquidityValue",
                            "nameLocation": "11069:14:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1927,
                            "src": "11064:19:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1883,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11064:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1891,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1887,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1885,
                                  "name": "totalValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1862,
                                  "src": "11087:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1886,
                                  "name": "newLiquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1798,
                                  "src": "11100:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "11087:25:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1888,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11086:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1889,
                            "name": "liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1008,
                            "src": "11116:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "11086:39:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11064:61:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1893,
                                  "name": "addedValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1840,
                                  "src": "11164:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1899,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1896,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1894,
                                          "name": "liquidityValue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1884,
                                          "src": "11178:14:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "3935",
                                          "id": 1895,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11195:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_95_by_1",
                                            "typeString": "int_const 95"
                                          },
                                          "value": "95"
                                        },
                                        "src": "11178:19:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1897,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "11177:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "313030",
                                    "id": 1898,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11201:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "src": "11177:27:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11164:40:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1908,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1901,
                                  "name": "liquidityValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1884,
                                  "src": "11228:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1907,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1904,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1902,
                                          "name": "addedValue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1840,
                                          "src": "11246:10:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "3935",
                                          "id": 1903,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11259:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_95_by_1",
                                            "typeString": "int_const 95"
                                          },
                                          "value": "95"
                                        },
                                        "src": "11246:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1905,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "11245:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "313030",
                                    "id": 1906,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11265:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "src": "11245:23:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11228:40:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "11164:104:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54523a20436c61696d2046656520536c697070616765",
                              "id": 1910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11286:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_227d89ffbcb768d8e136f6a0c5c048cf8fe3d9890b62fe1aea5352e26759d8a5",
                                "typeString": "literal_string \"TR: Claim Fee Slippage\""
                              },
                              "value": "TR: Claim Fee Slippage"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_227d89ffbcb768d8e136f6a0c5c048cf8fe3d9890b62fe1aea5352e26759d8a5",
                                "typeString": "literal_string \"TR: Claim Fee Slippage\""
                              }
                            ],
                            "id": 1892,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11139:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11139:185:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1912,
                        "nodeType": "ExpressionStatement",
                        "src": "11139:185:1"
                      },
                      {
                        "expression": {
                          "id": 1915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1913,
                            "name": "fee0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 976,
                            "src": "11338:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1914,
                            "name": "added0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1800,
                            "src": "11346:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11338:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1916,
                        "nodeType": "ExpressionStatement",
                        "src": "11338:14:1"
                      },
                      {
                        "expression": {
                          "id": 1919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1917,
                            "name": "fee1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "11366:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1918,
                            "name": "added1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1802,
                            "src": "11374:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11366:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1920,
                        "nodeType": "ExpressionStatement",
                        "src": "11366:14:1"
                      },
                      {
                        "expression": {
                          "id": 1925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1921,
                            "name": "liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1008,
                            "src": "11394:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 1924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1922,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1008,
                              "src": "11406:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1923,
                              "name": "newLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1798,
                              "src": "11418:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "11406:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "11394:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 1926,
                        "nodeType": "ExpressionStatement",
                        "src": "11394:36:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1930,
                        "name": "newFee0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "11465:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1931,
                        "name": "newFee1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1657,
                        "src": "11474:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1929,
                      "name": "ClaimFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 965,
                      "src": "11455:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11455:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1933,
                  "nodeType": "EmitStatement",
                  "src": "11450:32:1"
                }
              ]
            },
            "documentation": {
              "id": 1651,
              "nodeType": "StructuredDocumentation",
              "src": "8725:57:1",
              "text": "@notice Claim the accumulated Uniswap V3 trading fees"
            },
            "functionSelector": "99d32fc4",
            "id": 1935,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimFee",
            "nameLocation": "8796:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8804:2:1"
            },
            "returnParameters": {
              "id": 1653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8814:0:1"
            },
            "scope": 2807,
            "src": "8787:2702:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2319,
              "nodeType": "Block",
              "src": "11779:4077:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1948,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4868,
                            "src": "11992:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11992:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12008:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11992:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "545220436c6f736564",
                        "id": 1952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12011:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9e8bd817cfebd1581625c26f1092bf8839d68ac62a1518ae4a1d1c115a607db",
                          "typeString": "literal_string \"TR Closed\""
                        },
                        "value": "TR Closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9e8bd817cfebd1581625c26f1092bf8839d68ac62a1518ae4a1d1c115a607db",
                          "typeString": "literal_string \"TR Closed\""
                        }
                      ],
                      "id": 1947,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11984:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11984:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1954,
                  "nodeType": "ExpressionStatement",
                  "src": "11984:39:1"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1955,
                      "name": "claimFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1935,
                      "src": "12034:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12034:10:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1957,
                  "nodeType": "ExpressionStatement",
                  "src": "12034:10:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1963,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12080:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12084:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12080:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1967,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12100:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                              "typeString": "contract TokenisableRange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                              "typeString": "contract TokenisableRange"
                            }
                          ],
                          "id": 1966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12092:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1965,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12092:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12092:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1969,
                        "name": "n0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1938,
                        "src": "12107:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1958,
                          "name": "TOKEN0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "12054:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ASSET_$984_storage",
                            "typeString": "struct TokenisableRange.ASSET storage ref"
                          }
                        },
                        "id": 1961,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12061:5:1",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 981,
                        "src": "12054:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12067:12:1",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4990,
                      "src": "12054:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12054:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1971,
                  "nodeType": "ExpressionStatement",
                  "src": "12054:56:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1977,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12146:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12150:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12146:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1981,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12166:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                              "typeString": "contract TokenisableRange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                              "typeString": "contract TokenisableRange"
                            }
                          ],
                          "id": 1980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12158:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1979,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12158:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12158:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1983,
                        "name": "n1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1940,
                        "src": "12173:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1972,
                          "name": "TOKEN1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 990,
                          "src": "12120:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ASSET_$984_storage",
                            "typeString": "struct TokenisableRange.ASSET storage ref"
                          }
                        },
                        "id": 1975,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12127:5:1",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 981,
                        "src": "12120:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12133:12:1",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4990,
                      "src": "12120:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12120:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1985,
                  "nodeType": "ExpressionStatement",
                  "src": "12120:56:1"
                },
                {
                  "assignments": [
                    1987
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1987,
                      "mutability": "mutable",
                      "name": "newFee0",
                      "nameLocation": "12192:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2319,
                      "src": "12187:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1986,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12187:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1988,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12187:12:1"
                },
                {
                  "assignments": [
                    1990
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1990,
                      "mutability": "mutable",
                      "name": "newFee1",
                      "nameLocation": "12214:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2319,
                      "src": "12209:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1989,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12209:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1991,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12209:12:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1992,
                            "name": "fee0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 976,
                            "src": "12700:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1993,
                            "name": "fee1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "12707:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12700:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12714:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12700:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1997,
                                "name": "n0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1938,
                                "src": "12720:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12725:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12720:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2000,
                                "name": "fee0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 976,
                                "src": "12730:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12738:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12730:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "12720:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 2004,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "12719:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "12700:40:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2006,
                              "name": "n1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1940,
                              "src": "12745:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12750:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "12745:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2009,
                              "name": "fee1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "12755:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12763:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "12755:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "12745:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2013,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12744:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12700:65:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2113,
                  "nodeType": "IfStatement",
                  "src": "12696:971:1",
                  "trueBody": {
                    "id": 2112,
                    "nodeType": "Block",
                    "src": "12767:900:1",
                    "statements": [
                      {
                        "assignments": [
                          2016
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2016,
                            "mutability": "mutable",
                            "name": "pool",
                            "nameLocation": "12789:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2112,
                            "src": "12781:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2015,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12781:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2033,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2021,
                                    "name": "TOKEN0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 987,
                                    "src": "12840:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                      "typeString": "struct TokenisableRange.ASSET storage ref"
                                    }
                                  },
                                  "id": 2022,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12847:5:1",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 981,
                                  "src": "12840:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 2020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12832:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2019,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12832:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12832:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2026,
                                    "name": "TOKEN1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 990,
                                    "src": "12879:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                      "typeString": "struct TokenisableRange.ASSET storage ref"
                                    }
                                  },
                                  "id": 2027,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12886:5:1",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 981,
                                  "src": "12879:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 2025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12871:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2024,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12871:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12871:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              },
                              "id": 2031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2029,
                                "name": "feeTier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 972,
                                "src": "12910:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2030,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12920:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "12910:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "expression": {
                              "id": 2017,
                              "name": "V3_FACTORY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1026,
                              "src": "12796:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Factory_$12138",
                                "typeString": "contract IUniswapV3Factory"
                              }
                            },
                            "id": 2018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12807:7:1",
                            "memberName": "getPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12111,
                            "src": "12796:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                              "typeString": "function (address,address,uint24) view external returns (address)"
                            }
                          },
                          "id": 2032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12796:141:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12781:156:1"
                      },
                      {
                        "assignments": [
                          2035,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2035,
                            "mutability": "mutable",
                            "name": "sqrtPriceX96",
                            "nameLocation": "12960:12:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2112,
                            "src": "12952:20:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "typeName": {
                              "id": 2034,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "12952:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          null,
                          null,
                          null,
                          null
                        ],
                        "id": 2041,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2037,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2016,
                                  "src": "13003:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2036,
                                "name": "IUniswapV3Pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12176,
                                "src": "12988:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$12176_$",
                                  "typeString": "type(contract IUniswapV3Pool)"
                                }
                              },
                              "id": 2038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12988:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$12176",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 2039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13009:5:1",
                            "memberName": "slot0",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12158,
                            "src": "12988:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                              "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                            }
                          },
                          "id": 2040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12988:28:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                            "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12951:65:1"
                      },
                      {
                        "assignments": [
                          2043,
                          2045
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2043,
                            "mutability": "mutable",
                            "name": "token0Amount",
                            "nameLocation": "13039:12:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2112,
                            "src": "13031:20:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2042,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13031:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2045,
                            "mutability": "mutable",
                            "name": "token1Amount",
                            "nameLocation": "13061:12:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2112,
                            "src": "13053:20:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2044,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13053:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2059,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2048,
                              "name": "sqrtPriceX96",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2035,
                              "src": "13155:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2051,
                                  "name": "lowerTick",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 968,
                                  "src": "13217:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                ],
                                "expression": {
                                  "id": 2049,
                                  "name": "TickMath",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11852,
                                  "src": "13189:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_TickMath_$11852_$",
                                    "typeString": "type(library TickMath)"
                                  }
                                },
                                "id": 2050,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13198:18:1",
                                "memberName": "getSqrtRatioAtTick",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11712,
                                "src": "13189:27:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_delegatecall_pure$_t_int24_$returns$_t_uint160_$",
                                  "typeString": "function (int24) pure returns (uint160)"
                                }
                              },
                              "id": 2052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13189:38:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2055,
                                  "name": "upperTick",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 970,
                                  "src": "13277:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                ],
                                "expression": {
                                  "id": 2053,
                                  "name": "TickMath",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11852,
                                  "src": "13249:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_TickMath_$11852_$",
                                    "typeString": "type(library TickMath)"
                                  }
                                },
                                "id": 2054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13258:18:1",
                                "memberName": "getSqrtRatioAtTick",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11712,
                                "src": "13249:27:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_delegatecall_pure$_t_int24_$returns$_t_uint160_$",
                                  "typeString": "function (int24) pure returns (uint160)"
                                }
                              },
                              "id": 2056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13249:38:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            {
                              "id": 2057,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1008,
                              "src": "13309:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              },
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              },
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "expression": {
                              "id": 2046,
                              "name": "LiquidityAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11314,
                              "src": "13077:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LiquidityAmounts_$11314_$",
                                "typeString": "type(library LiquidityAmounts)"
                              }
                            },
                            "id": 2047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13111:22:1",
                            "memberName": "getAmountsForLiquidity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11313,
                            "src": "13077:56:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (uint160,uint160,uint160,uint128) pure returns (uint256,uint256)"
                            }
                          },
                          "id": 2058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13077:259:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13030:306:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2060,
                              "name": "token0Amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2043,
                              "src": "13354:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 2061,
                              "name": "fee0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 976,
                              "src": "13369:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13354:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13376:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13354:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2077,
                        "nodeType": "IfStatement",
                        "src": "13350:90:1",
                        "trueBody": {
                          "expression": {
                            "id": 2075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2065,
                              "name": "newFee0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1987,
                              "src": "13395:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2068,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2066,
                                      "name": "n0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1938,
                                      "src": "13406:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2067,
                                      "name": "fee0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 976,
                                      "src": "13411:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "13406:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2069,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "13405:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2072,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2070,
                                      "name": "token0Amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2043,
                                      "src": "13420:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 2071,
                                      "name": "fee0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 976,
                                      "src": "13435:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "13420:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2073,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "13419:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13405:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13395:45:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2076,
                          "nodeType": "ExpressionStatement",
                          "src": "13395:45:1"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2078,
                              "name": "token1Amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2045,
                              "src": "13458:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 2079,
                              "name": "fee1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "13473:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13458:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13480:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13458:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2095,
                        "nodeType": "IfStatement",
                        "src": "13454:90:1",
                        "trueBody": {
                          "expression": {
                            "id": 2093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2083,
                              "name": "newFee1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1990,
                              "src": "13499:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2086,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2084,
                                      "name": "n1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1940,
                                      "src": "13510:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2085,
                                      "name": "fee1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 978,
                                      "src": "13515:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "13510:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2087,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "13509:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2090,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2088,
                                      "name": "token1Amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2045,
                                      "src": "13524:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 2089,
                                      "name": "fee1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 978,
                                      "src": "13539:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "13524:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2091,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "13523:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13509:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13499:45:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2094,
                          "nodeType": "ExpressionStatement",
                          "src": "13499:45:1"
                        }
                      },
                      {
                        "expression": {
                          "id": 2098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2096,
                            "name": "fee0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 976,
                            "src": "13558:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2097,
                            "name": "newFee0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "13566:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13558:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2099,
                        "nodeType": "ExpressionStatement",
                        "src": "13558:15:1"
                      },
                      {
                        "expression": {
                          "id": 2102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2100,
                            "name": "fee1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "13587:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2101,
                            "name": "newFee1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1990,
                            "src": "13595:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13587:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2103,
                        "nodeType": "ExpressionStatement",
                        "src": "13587:15:1"
                      },
                      {
                        "expression": {
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2104,
                            "name": "n0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1938,
                            "src": "13616:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 2105,
                            "name": "newFee0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "13622:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13616:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2107,
                        "nodeType": "ExpressionStatement",
                        "src": "13616:13:1"
                      },
                      {
                        "expression": {
                          "id": 2110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2108,
                            "name": "n1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1940,
                            "src": "13643:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 2109,
                            "name": "newFee1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1990,
                            "src": "13649:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13643:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2111,
                        "nodeType": "ExpressionStatement",
                        "src": "13643:13:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2121,
                            "name": "POS_MGR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1020,
                            "src": "13720:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                              "typeString": "contract INonfungiblePositionManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                              "typeString": "contract INonfungiblePositionManager"
                            }
                          ],
                          "id": 2120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13712:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2119,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13712:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13712:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2123,
                        "name": "n0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1938,
                        "src": "13730:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 2114,
                          "name": "TOKEN0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "13677:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ASSET_$984_storage",
                            "typeString": "struct TokenisableRange.ASSET storage ref"
                          }
                        },
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13684:5:1",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 981,
                        "src": "13677:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13690:21:1",
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7363,
                      "src": "13677:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13677:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2125,
                  "nodeType": "ExpressionStatement",
                  "src": "13677:56:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2133,
                            "name": "POS_MGR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1020,
                            "src": "13786:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                              "typeString": "contract INonfungiblePositionManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                              "typeString": "contract INonfungiblePositionManager"
                            }
                          ],
                          "id": 2132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13778:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2131,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13778:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13778:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2135,
                        "name": "n1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1940,
                        "src": "13796:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 2126,
                          "name": "TOKEN1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 990,
                          "src": "13743:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ASSET_$984_storage",
                            "typeString": "struct TokenisableRange.ASSET storage ref"
                          }
                        },
                        "id": 2129,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13750:5:1",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 981,
                        "src": "13743:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13756:21:1",
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7363,
                      "src": "13743:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13743:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2137,
                  "nodeType": "ExpressionStatement",
                  "src": "13743:56:1"
                },
                {
                  "assignments": [
                    2139,
                    2141,
                    2143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2139,
                      "mutability": "mutable",
                      "name": "newLiquidity",
                      "nameLocation": "13937:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2319,
                      "src": "13929:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2138,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "13929:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2141,
                      "mutability": "mutable",
                      "name": "added0",
                      "nameLocation": "13959:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2319,
                      "src": "13951:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2140,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13951:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2143,
                      "mutability": "mutable",
                      "name": "added1",
                      "nameLocation": "13975:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2319,
                      "src": "13967:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2142,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13967:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2167,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2148,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 974,
                            "src": "14124:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2149,
                            "name": "n0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1938,
                            "src": "14169:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2150,
                            "name": "n1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1940,
                            "src": "14209:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2151,
                                    "name": "n0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1938,
                                    "src": "14246:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3935",
                                    "id": 2152,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14251:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_95_by_1",
                                      "typeString": "int_const 95"
                                    },
                                    "value": "95"
                                  },
                                  "src": "14246:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2154,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14245:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 2155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14257:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "14245:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2159,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2157,
                                    "name": "n1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1940,
                                    "src": "14295:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3935",
                                    "id": 2158,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14300:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_95_by_1",
                                      "typeString": "int_const 95"
                                    },
                                    "value": "95"
                                  },
                                  "src": "14295:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2160,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14294:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 2161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14306:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "14294:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 2163,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "14341:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14347:9:1",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "14341:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2146,
                            "name": "INonfungiblePositionManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10244,
                            "src": "14041:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$10244_$",
                              "typeString": "type(contract INonfungiblePositionManager)"
                            }
                          },
                          "id": 2147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14069:23:1",
                          "memberName": "IncreaseLiquidityParams",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10182,
                          "src": "14041:51:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_IncreaseLiquidityParams_$10182_storage_ptr_$",
                            "typeString": "type(struct INonfungiblePositionManager.IncreaseLiquidityParams storage pointer)"
                          }
                        },
                        "id": 2165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "14115:7:1",
                          "14153:14:1",
                          "14193:14:1",
                          "14233:10:1",
                          "14282:10:1",
                          "14331:8:1"
                        ],
                        "names": [
                          "tokenId",
                          "amount0Desired",
                          "amount1Desired",
                          "amount0Min",
                          "amount1Min",
                          "deadline"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "14041:334:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncreaseLiquidityParams_$10182_memory_ptr",
                          "typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_IncreaseLiquidityParams_$10182_memory_ptr",
                          "typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
                        }
                      ],
                      "expression": {
                        "id": 2144,
                        "name": "POS_MGR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "13985:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                          "typeString": "contract INonfungiblePositionManager"
                        }
                      },
                      "id": 2145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14006:17:1",
                      "memberName": "increaseLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10195,
                      "src": "13985:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_IncreaseLiquidityParams_$10182_memory_ptr_$returns$_t_uint128_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct INonfungiblePositionManager.IncreaseLiquidityParams memory) payable external returns (uint128,uint256,uint256)"
                      }
                    },
                    "id": 2166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13985:404:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint128,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13928:461:1"
                },
                {
                  "assignments": [
                    2169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2169,
                      "mutability": "mutable",
                      "name": "feeLiquidity",
                      "nameLocation": "14408:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2319,
                      "src": "14400:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2168,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14400:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2170,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14400:20:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2171,
                        "name": "newFee0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1987,
                        "src": "14626:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14637:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "14626:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2174,
                        "name": "newFee1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1990,
                        "src": "14642:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14653:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "14642:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14626:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2263,
                  "nodeType": "IfStatement",
                  "src": "14622:908:1",
                  "trueBody": {
                    "id": 2262,
                    "nodeType": "Block",
                    "src": "14656:874:1",
                    "statements": [
                      {
                        "assignments": [
                          2179
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2179,
                            "mutability": "mutable",
                            "name": "TOKEN0_PRICE",
                            "nameLocation": "14678:12:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2262,
                            "src": "14670:20:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2178,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14670:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2188,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2184,
                                    "name": "TOKEN0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 987,
                                    "src": "14722:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                      "typeString": "struct TokenisableRange.ASSET storage ref"
                                    }
                                  },
                                  "id": 2185,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14729:5:1",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 981,
                                  "src": "14722:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 2183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14714:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2182,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14714:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14714:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2180,
                              "name": "ORACLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 993,
                              "src": "14693:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                                "typeString": "contract IAaveOracle"
                              }
                            },
                            "id": 2181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14700:13:1",
                            "memberName": "getAssetPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9886,
                            "src": "14693:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14693:43:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14670:66:1"
                      },
                      {
                        "assignments": [
                          2190
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2190,
                            "mutability": "mutable",
                            "name": "TOKEN1_PRICE",
                            "nameLocation": "14758:12:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2262,
                            "src": "14750:20:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2189,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14750:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2199,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2195,
                                    "name": "TOKEN1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 990,
                                    "src": "14802:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                      "typeString": "struct TokenisableRange.ASSET storage ref"
                                    }
                                  },
                                  "id": 2196,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14809:5:1",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 981,
                                  "src": "14802:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 2194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14794:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2193,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14794:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14794:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2191,
                              "name": "ORACLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 993,
                              "src": "14773:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                                "typeString": "contract IAaveOracle"
                              }
                            },
                            "id": 2192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14780:13:1",
                            "memberName": "getAssetPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9886,
                            "src": "14773:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14773:43:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14750:66:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2201,
                                  "name": "TOKEN0_PRICE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2179,
                                  "src": "14855:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14870:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14855:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2204,
                                  "name": "TOKEN1_PRICE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2190,
                                  "src": "14875:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14890:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14875:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14855:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964204f7261636c65205072696365",
                              "id": 2208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14909:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1666edda430ce6c66d528a0169ba8e7209c9877da97ff7b7bd1b052c8a1b5767",
                                "typeString": "literal_string \"Invalid Oracle Price\""
                              },
                              "value": "Invalid Oracle Price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1666edda430ce6c66d528a0169ba8e7209c9877da97ff7b7bd1b052c8a1b5767",
                                "typeString": "literal_string \"Invalid Oracle Price\""
                              }
                            ],
                            "id": 2200,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14830:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14830:115:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2210,
                        "nodeType": "ExpressionStatement",
                        "src": "14830:115:1"
                      },
                      {
                        "expression": {
                          "id": 2260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2211,
                            "name": "feeLiquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2169,
                            "src": "15186:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2235,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2212,
                                    "name": "newLiquidity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2139,
                                    "src": "15218:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2233,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2221,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 2215,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 2213,
                                                      "name": "fee0",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 976,
                                                      "src": "15256:4:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "*",
                                                    "rightExpression": {
                                                      "id": 2214,
                                                      "name": "TOKEN0_PRICE",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2179,
                                                      "src": "15263:12:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "15256:19:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 2216,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "15255:21:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "/",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 2220,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "hexValue": "3130",
                                                  "id": 2217,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "15279:2:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                  },
                                                  "value": "10"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "**",
                                                "rightExpression": {
                                                  "expression": {
                                                    "id": 2218,
                                                    "name": "TOKEN0",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 987,
                                                    "src": "15285:6:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                                      "typeString": "struct TokenisableRange.ASSET storage ref"
                                                    }
                                                  },
                                                  "id": 2219,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberLocation": "15292:8:1",
                                                  "memberName": "decimals",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 983,
                                                  "src": "15285:15:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  }
                                                },
                                                "src": "15279:21:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "15255:45:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2222,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "15254:47:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2231,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 2225,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 2223,
                                                      "name": "fee1",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 978,
                                                      "src": "15330:4:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "*",
                                                    "rightExpression": {
                                                      "id": 2224,
                                                      "name": "TOKEN1_PRICE",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2190,
                                                      "src": "15337:12:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "15330:19:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 2226,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "15329:21:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "/",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 2230,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "hexValue": "3130",
                                                  "id": 2227,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "15353:2:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                  },
                                                  "value": "10"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "**",
                                                "rightExpression": {
                                                  "expression": {
                                                    "id": 2228,
                                                    "name": "TOKEN1",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 990,
                                                    "src": "15359:6:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                                      "typeString": "struct TokenisableRange.ASSET storage ref"
                                                    }
                                                  },
                                                  "id": 2229,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberLocation": "15366:8:1",
                                                  "memberName": "decimals",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 983,
                                                  "src": "15359:15:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  }
                                                },
                                                "src": "15353:21:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "15329:45:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2232,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "15328:47:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "15254:121:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2234,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "15253:123:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "15218:158:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2236,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15217:160:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2245,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2239,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2237,
                                                "name": "added0",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2141,
                                                "src": "15399:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 2238,
                                                "name": "TOKEN0_PRICE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2179,
                                                "src": "15408:12:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "15399:21:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2240,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "15398:23:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2244,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3130",
                                            "id": 2241,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "15424:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 2242,
                                              "name": "TOKEN0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 987,
                                              "src": "15430:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                                "typeString": "struct TokenisableRange.ASSET storage ref"
                                              }
                                            },
                                            "id": 2243,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "15437:8:1",
                                            "memberName": "decimals",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 983,
                                            "src": "15430:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "15424:21:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "15398:47:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2246,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "15397:49:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2255,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2249,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2247,
                                                "name": "added1",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2143,
                                                "src": "15471:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 2248,
                                                "name": "TOKEN1_PRICE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2190,
                                                "src": "15480:12:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "15471:21:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2250,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "15470:23:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2254,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3130",
                                            "id": 2251,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "15496:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 2252,
                                              "name": "TOKEN1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 990,
                                              "src": "15502:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                                "typeString": "struct TokenisableRange.ASSET storage ref"
                                              }
                                            },
                                            "id": 2253,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "15509:8:1",
                                            "memberName": "decimals",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 983,
                                            "src": "15502:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "15496:21:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "15470:47:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2256,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "15469:49:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "15397:121:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2258,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15396:123:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15217:302:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15186:333:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2261,
                        "nodeType": "ExpressionStatement",
                        "src": "15186:333:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2264,
                      "name": "lpAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1945,
                      "src": "15540:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2265,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4868,
                                "src": "15549:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 2266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15549:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2267,
                              "name": "newLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2139,
                              "src": "15565:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "15549:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2269,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15548:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2270,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1008,
                              "src": "15582:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 2271,
                              "name": "feeLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2169,
                              "src": "15594:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15582:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2273,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15581:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15548:59:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15540:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2276,
                  "nodeType": "ExpressionStatement",
                  "src": "15540:67:1"
                },
                {
                  "expression": {
                    "id": 2281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2277,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1008,
                      "src": "15617:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 2280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2278,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "15629:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 2279,
                        "name": "newLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2139,
                        "src": "15641:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "15629:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "15617:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 2282,
                  "nodeType": "ExpressionStatement",
                  "src": "15617:36:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2284,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15670:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15674:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15670:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2286,
                        "name": "lpAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1945,
                        "src": "15682:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2283,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5189,
                      "src": "15664:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15664:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2288,
                  "nodeType": "ExpressionStatement",
                  "src": "15664:24:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2294,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15724:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15728:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15724:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2296,
                          "name": "n0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1938,
                          "src": "15736:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 2297,
                          "name": "added0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2141,
                          "src": "15741:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15736:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 2289,
                          "name": "TOKEN0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "15698:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ASSET_$984_storage",
                            "typeString": "struct TokenisableRange.ASSET storage ref"
                          }
                        },
                        "id": 2292,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15705:5:1",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 981,
                        "src": "15698:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15711:12:1",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7257,
                      "src": "15698:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15698:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2300,
                  "nodeType": "ExpressionStatement",
                  "src": "15698:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2306,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15784:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15788:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15784:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2308,
                          "name": "n1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1940,
                          "src": "15796:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 2309,
                          "name": "added1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2143,
                          "src": "15801:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15796:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 2301,
                          "name": "TOKEN1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 990,
                          "src": "15758:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ASSET_$984_storage",
                            "typeString": "struct TokenisableRange.ASSET storage ref"
                          }
                        },
                        "id": 2304,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15765:5:1",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 981,
                        "src": "15758:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15771:12:1",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7257,
                      "src": "15758:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15758:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2312,
                  "nodeType": "ExpressionStatement",
                  "src": "15758:50:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2314,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15831:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15835:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15831:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2316,
                        "name": "lpAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1945,
                        "src": "15843:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2313,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 953,
                      "src": "15823:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15823:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2318,
                  "nodeType": "EmitStatement",
                  "src": "15818:31:1"
                }
              ]
            },
            "documentation": {
              "id": 1936,
              "nodeType": "StructuredDocumentation",
              "src": "11495:170:1",
              "text": "@notice Deposit assets into the range\n @param n0 Amount of quote asset\n @param n1 Amount of base asset\n @return lpAmt Amount of LP tokens created"
            },
            "functionSelector": "e2bbb158",
            "id": 2320,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1943,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1942,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "11742:12:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8963,
                  "src": "11742:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "11742:12:1"
              }
            ],
            "name": "deposit",
            "nameLocation": "11679:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1938,
                  "mutability": "mutable",
                  "name": "n0",
                  "nameLocation": "11704:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2320,
                  "src": "11696:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11696:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1940,
                  "mutability": "mutable",
                  "name": "n1",
                  "nameLocation": "11724:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2320,
                  "src": "11716:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11716:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11686:46:1"
            },
            "returnParameters": {
              "id": 1946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1945,
                  "mutability": "mutable",
                  "name": "lpAmt",
                  "nameLocation": "11772:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2320,
                  "src": "11764:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11764:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11763:15:1"
            },
            "scope": 2807,
            "src": "11670:4186:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2497,
              "nodeType": "Block",
              "src": "16250:1339:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2336,
                      "name": "claimFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1935,
                      "src": "16260:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16260:10:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2338,
                  "nodeType": "ExpressionStatement",
                  "src": "16260:10:1"
                },
                {
                  "assignments": [
                    2340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2340,
                      "mutability": "mutable",
                      "name": "removedLiquidity",
                      "nameLocation": "16285:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2497,
                      "src": "16280:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2339,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16280:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2351,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2343,
                                "name": "liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1008,
                                "src": "16310:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "id": 2342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16305:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2341,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "16305:4:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16305:15:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2345,
                            "name": "lp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2323,
                            "src": "16323:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16305:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2347,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16304:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2348,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4868,
                        "src": "16329:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 2349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16329:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16304:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16280:62:1"
                },
                {
                  "expression": {
                    "id": 2370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 2352,
                          "name": "removed0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2332,
                          "src": "16353:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2353,
                          "name": "removed1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2334,
                          "src": "16363:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2354,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16352:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2359,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 974,
                              "src": "16493:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2362,
                                  "name": "removedLiquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2340,
                                  "src": "16537:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16529:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                },
                                "typeName": {
                                  "id": 2360,
                                  "name": "uint128",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16529:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16529:25:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "id": 2364,
                              "name": "amount0Min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2325,
                              "src": "16584:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2365,
                              "name": "amount1Min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2327,
                              "src": "16624:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2366,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "16662:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16668:9:1",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "16662:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2357,
                              "name": "INonfungiblePositionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10244,
                              "src": "16414:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$10244_$",
                                "typeString": "type(contract INonfungiblePositionManager)"
                              }
                            },
                            "id": 2358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16442:23:1",
                            "memberName": "DecreaseLiquidityParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10206,
                            "src": "16414:51:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DecreaseLiquidityParams_$10206_storage_ptr_$",
                              "typeString": "type(struct INonfungiblePositionManager.DecreaseLiquidityParams storage pointer)"
                            }
                          },
                          "id": 2368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "16484:7:1",
                            "16518:9:1",
                            "16572:10:1",
                            "16612:10:1",
                            "16652:8:1"
                          ],
                          "names": [
                            "tokenId",
                            "liquidity",
                            "amount0Min",
                            "amount1Min",
                            "deadline"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "16414:278:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DecreaseLiquidityParams_$10206_memory_ptr",
                            "typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_DecreaseLiquidityParams_$10206_memory_ptr",
                            "typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams memory"
                          }
                        ],
                        "expression": {
                          "id": 2355,
                          "name": "POS_MGR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1020,
                          "src": "16375:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                            "typeString": "contract INonfungiblePositionManager"
                          }
                        },
                        "id": 2356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16383:17:1",
                        "memberName": "decreaseLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10217,
                        "src": "16375:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_DecreaseLiquidityParams_$10206_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (struct INonfungiblePositionManager.DecreaseLiquidityParams memory) payable external returns (uint256,uint256)"
                        }
                      },
                      "id": 2369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16375:327:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "16352:350:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2371,
                  "nodeType": "ExpressionStatement",
                  "src": "16352:350:1"
                },
                {
                  "expression": {
                    "id": 2382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2372,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1008,
                      "src": "16712:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2377,
                                "name": "liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1008,
                                "src": "16740:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "id": 2376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16732:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2375,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16732:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16732:18:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2379,
                            "name": "removedLiquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2340,
                            "src": "16753:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16732:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16724:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 2373,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "16724:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16724:46:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "16712:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 2383,
                  "nodeType": "ExpressionStatement",
                  "src": "16712:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2389,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 974,
                            "src": "16879:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 2390,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16915:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16919:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16915:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2394,
                                "name": "removed0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2332,
                                "src": "16963:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16955:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 2392,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "16955:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16955:17:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2398,
                                "name": "removed1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2334,
                                "src": "17010:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17002:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 2396,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "17002:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17002:17:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 2387,
                            "name": "INonfungiblePositionManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10244,
                            "src": "16810:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$10244_$",
                              "typeString": "type(contract INonfungiblePositionManager)"
                            }
                          },
                          "id": 2388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16838:13:1",
                          "memberName": "CollectParams",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10226,
                          "src": "16810:41:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_CollectParams_$10226_storage_ptr_$",
                            "typeString": "type(struct INonfungiblePositionManager.CollectParams storage pointer)"
                          }
                        },
                        "id": 2400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "16870:7:1",
                          "16904:9:1",
                          "16943:10:1",
                          "16990:10:1"
                        ],
                        "names": [
                          "tokenId",
                          "recipient",
                          "amount0Max",
                          "amount1Max"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "16810:224:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollectParams_$10226_memory_ptr",
                          "typeString": "struct INonfungiblePositionManager.CollectParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CollectParams_$10226_memory_ptr",
                          "typeString": "struct INonfungiblePositionManager.CollectParams memory"
                        }
                      ],
                      "expression": {
                        "id": 2384,
                        "name": "POS_MGR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "16781:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                          "typeString": "contract INonfungiblePositionManager"
                        }
                      },
                      "id": 2386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16789:7:1",
                      "memberName": "collect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10237,
                      "src": "16781:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_CollectParams_$10226_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct INonfungiblePositionManager.CollectParams memory) payable external returns (uint256,uint256)"
                      }
                    },
                    "id": 2401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16781:263:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 2402,
                  "nodeType": "ExpressionStatement",
                  "src": "16781:263:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2403,
                      "name": "fee0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 976,
                      "src": "17094:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17101:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17094:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2443,
                  "nodeType": "IfStatement",
                  "src": "17090:207:1",
                  "trueBody": {
                    "id": 2442,
                    "nodeType": "Block",
                    "src": "17104:193:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2411,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "17144:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17148:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "17144:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2415,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2413,
                                      "name": "fee0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 976,
                                      "src": "17157:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2414,
                                      "name": "lp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2323,
                                      "src": "17164:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "17157:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2416,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "17156:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2417,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4868,
                                  "src": "17170:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 2418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17170:13:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17156:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 2406,
                                "name": "TOKEN0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 987,
                                "src": "17118:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                  "typeString": "struct TokenisableRange.ASSET storage ref"
                                }
                              },
                              "id": 2409,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17125:5:1",
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 981,
                              "src": "17118:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$5329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 2410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17131:12:1",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7257,
                            "src": "17118:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17118:66:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2421,
                        "nodeType": "ExpressionStatement",
                        "src": "17118:66:1"
                      },
                      {
                        "expression": {
                          "id": 2430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2422,
                            "name": "removed0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2332,
                            "src": "17198:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2423,
                                    "name": "fee0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 976,
                                    "src": "17211:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2424,
                                    "name": "lp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2323,
                                    "src": "17218:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17211:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2426,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "17210:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2427,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4868,
                                "src": "17224:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 2428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17224:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17210:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17198:39:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2431,
                        "nodeType": "ExpressionStatement",
                        "src": "17198:39:1"
                      },
                      {
                        "expression": {
                          "id": 2440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2432,
                            "name": "fee0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 976,
                            "src": "17251:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2435,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2433,
                                    "name": "fee0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 976,
                                    "src": "17260:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2434,
                                    "name": "lp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2323,
                                    "src": "17267:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17260:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2436,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "17259:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2437,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4868,
                                "src": "17273:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 2438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17273:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17259:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17251:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2441,
                        "nodeType": "ExpressionStatement",
                        "src": "17251:35:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2444,
                      "name": "fee1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "17310:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17317:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17310:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2484,
                  "nodeType": "IfStatement",
                  "src": "17306:207:1",
                  "trueBody": {
                    "id": 2483,
                    "nodeType": "Block",
                    "src": "17320:193:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2452,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "17360:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17364:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "17360:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2456,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2454,
                                      "name": "fee1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 978,
                                      "src": "17373:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2455,
                                      "name": "lp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2323,
                                      "src": "17380:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "17373:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2457,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "17372:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2458,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4868,
                                  "src": "17386:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 2459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17386:13:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17372:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 2447,
                                "name": "TOKEN1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 990,
                                "src": "17334:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                  "typeString": "struct TokenisableRange.ASSET storage ref"
                                }
                              },
                              "id": 2450,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17341:5:1",
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 981,
                              "src": "17334:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$5329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 2451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17347:12:1",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7257,
                            "src": "17334:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17334:66:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2462,
                        "nodeType": "ExpressionStatement",
                        "src": "17334:66:1"
                      },
                      {
                        "expression": {
                          "id": 2471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2463,
                            "name": "removed1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2334,
                            "src": "17414:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2466,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2464,
                                    "name": "fee1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 978,
                                    "src": "17427:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2465,
                                    "name": "lp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2323,
                                    "src": "17434:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17427:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2467,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "17426:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2468,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4868,
                                "src": "17440:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 2469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17440:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17426:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17414:39:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2472,
                        "nodeType": "ExpressionStatement",
                        "src": "17414:39:1"
                      },
                      {
                        "expression": {
                          "id": 2481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2473,
                            "name": "fee1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "17467:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2476,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2474,
                                    "name": "fee1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 978,
                                    "src": "17476:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2475,
                                    "name": "lp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2323,
                                    "src": "17483:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17476:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2477,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "17475:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2478,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4868,
                                "src": "17489:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 2479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17489:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17475:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17467:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2482,
                        "nodeType": "ExpressionStatement",
                        "src": "17467:35:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2486,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17528:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17532:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17528:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2488,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2323,
                        "src": "17540:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2485,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5261,
                      "src": "17522:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17522:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2490,
                  "nodeType": "ExpressionStatement",
                  "src": "17522:21:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2492,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17567:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17571:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17567:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2494,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2323,
                        "src": "17579:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2491,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 959,
                      "src": "17558:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17558:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2496,
                  "nodeType": "EmitStatement",
                  "src": "17553:29:1"
                }
              ]
            },
            "documentation": {
              "id": 2321,
              "nodeType": "StructuredDocumentation",
              "src": "15862:216:1",
              "text": "@notice Withdraw assets from a range\n @param lp Amount of tokens withdrawn\n @param amount0Min Minimum amount of quote token withdrawn\n @param amount1Min Minimum amount of base token withdrawn"
            },
            "functionSelector": "a41fe49f",
            "id": 2498,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2330,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2329,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "16192:12:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8963,
                  "src": "16192:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "16192:12:1"
              }
            ],
            "name": "withdraw",
            "nameLocation": "16092:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2323,
                  "mutability": "mutable",
                  "name": "lp",
                  "nameLocation": "16118:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2498,
                  "src": "16110:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16110:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2325,
                  "mutability": "mutable",
                  "name": "amount0Min",
                  "nameLocation": "16138:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2498,
                  "src": "16130:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16130:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2327,
                  "mutability": "mutable",
                  "name": "amount1Min",
                  "nameLocation": "16166:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2498,
                  "src": "16158:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16158:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16100:82:1"
            },
            "returnParameters": {
              "id": 2335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2332,
                  "mutability": "mutable",
                  "name": "removed0",
                  "nameLocation": "16222:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2498,
                  "src": "16214:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16214:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2334,
                  "mutability": "mutable",
                  "name": "removed1",
                  "nameLocation": "16240:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2498,
                  "src": "16232:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16232:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16213:36:1"
            },
            "scope": 2807,
            "src": "16083:1506:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2583,
              "nodeType": "Block",
              "src": "17924:696:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2510,
                      "name": "TOKEN0_PRICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2501,
                      "src": "17976:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17992:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17976:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2524,
                  "nodeType": "IfStatement",
                  "src": "17972:93:1",
                  "trueBody": {
                    "expression": {
                      "id": 2522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2513,
                        "name": "TOKEN0_PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "18007:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2518,
                                  "name": "TOKEN0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 987,
                                  "src": "18051:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                    "typeString": "struct TokenisableRange.ASSET storage ref"
                                  }
                                },
                                "id": 2519,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "18058:5:1",
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 981,
                                "src": "18051:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$5329",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$5329",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 2517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18043:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2516,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18043:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18043:21:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2514,
                            "name": "ORACLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 993,
                            "src": "18022:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                              "typeString": "contract IAaveOracle"
                            }
                          },
                          "id": 2515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18029:13:1",
                          "memberName": "getAssetPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9886,
                          "src": "18022:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18022:43:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18007:58:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2523,
                    "nodeType": "ExpressionStatement",
                    "src": "18007:58:1"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2525,
                      "name": "TOKEN1_PRICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2503,
                      "src": "18079:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18095:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18079:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2539,
                  "nodeType": "IfStatement",
                  "src": "18075:93:1",
                  "trueBody": {
                    "expression": {
                      "id": 2537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2528,
                        "name": "TOKEN1_PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2503,
                        "src": "18110:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2533,
                                  "name": "TOKEN1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 990,
                                  "src": "18154:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                    "typeString": "struct TokenisableRange.ASSET storage ref"
                                  }
                                },
                                "id": 2534,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "18161:5:1",
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 981,
                                "src": "18154:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$5329",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$5329",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 2532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18146:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2531,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18146:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18146:21:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2529,
                            "name": "ORACLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 993,
                            "src": "18125:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                              "typeString": "contract IAaveOracle"
                            }
                          },
                          "id": 2530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18132:13:1",
                          "memberName": "getAssetPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9886,
                          "src": "18125:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18125:43:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18110:58:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2538,
                    "nodeType": "ExpressionStatement",
                    "src": "18110:58:1"
                  }
                },
                {
                  "expression": {
                    "id": 2581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 2540,
                          "name": "amt0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2506,
                          "src": "18180:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2541,
                          "name": "amt1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2508,
                          "src": "18186:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2542,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18179:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2568,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2561,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
                                            "typeString": "int_const 6277...(50 digits omitted)...2896"
                                          },
                                          "id": 2550,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "32",
                                            "id": 2548,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "18299:1:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "hexValue": "313932",
                                            "id": 2549,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "18304:3:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_192_by_1",
                                              "typeString": "int_const 192"
                                            },
                                            "value": "192"
                                          },
                                          "src": "18299:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
                                            "typeString": "int_const 6277...(50 digits omitted)...2896"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2559,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 2556,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 2551,
                                                      "name": "TOKEN0_PRICE",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2501,
                                                      "src": "18336:12:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "*",
                                                    "rightExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 2555,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "hexValue": "3130",
                                                        "id": 2552,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "18351:2:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_10_by_1",
                                                          "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "**",
                                                      "rightExpression": {
                                                        "expression": {
                                                          "id": 2553,
                                                          "name": "TOKEN1",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 990,
                                                          "src": "18357:6:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                                            "typeString": "struct TokenisableRange.ASSET storage ref"
                                                          }
                                                        },
                                                        "id": 2554,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "18364:8:1",
                                                        "memberName": "decimals",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 983,
                                                        "src": "18357:15:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint8",
                                                          "typeString": "uint8"
                                                        }
                                                      },
                                                      "src": "18351:21:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "18336:36:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 2557,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "18335:38:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "/",
                                              "rightExpression": {
                                                "id": 2558,
                                                "name": "TOKEN1_PRICE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2503,
                                                "src": "18404:12:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "18335:81:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2560,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "18334:83:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "18299:118:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2562,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18298:120:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2566,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3130",
                                          "id": 2563,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "18422:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2564,
                                            "name": "TOKEN0",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 987,
                                            "src": "18428:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                              "typeString": "struct TokenisableRange.ASSET storage ref"
                                            }
                                          },
                                          "id": 2565,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "18435:8:1",
                                          "memberName": "decimals",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 983,
                                          "src": "18428:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "src": "18422:21:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2567,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18421:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18298:146:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2547,
                                "name": "sqrt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1074,
                                "src": "18272:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18272:190:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18247:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 2545,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "18247:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18247:229:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2573,
                              "name": "lowerTick",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 968,
                              "src": "18518:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "expression": {
                              "id": 2571,
                              "name": "TickMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11852,
                              "src": "18490:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TickMath_$11852_$",
                                "typeString": "type(library TickMath)"
                              }
                            },
                            "id": 2572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18499:18:1",
                            "memberName": "getSqrtRatioAtTick",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11712,
                            "src": "18490:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_pure$_t_int24_$returns$_t_uint160_$",
                              "typeString": "function (int24) pure returns (uint160)"
                            }
                          },
                          "id": 2574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18490:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2577,
                              "name": "upperTick",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 970,
                              "src": "18570:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "expression": {
                              "id": 2575,
                              "name": "TickMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11852,
                              "src": "18542:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TickMath_$11852_$",
                                "typeString": "type(library TickMath)"
                              }
                            },
                            "id": 2576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18551:18:1",
                            "memberName": "getSqrtRatioAtTick",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11712,
                            "src": "18542:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_pure$_t_int24_$returns$_t_uint160_$",
                              "typeString": "function (int24) pure returns (uint160)"
                            }
                          },
                          "id": 2578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18542:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "id": 2579,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1008,
                          "src": "18594:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 2543,
                          "name": "LiquidityAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11314,
                          "src": "18194:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LiquidityAmounts_$11314_$",
                            "typeString": "type(library LiquidityAmounts)"
                          }
                        },
                        "id": 2544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18211:22:1",
                        "memberName": "getAmountsForLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11313,
                        "src": "18194:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint160,uint160,uint160,uint128) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 2580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18194:419:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "18179:434:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2582,
                  "nodeType": "ExpressionStatement",
                  "src": "18179:434:1"
                }
              ]
            },
            "documentation": {
              "id": 2499,
              "nodeType": "StructuredDocumentation",
              "src": "17595:171:1",
              "text": "@notice Calculate the balance of underlying assets based on the assets price\n @param TOKEN0_PRICE Base token price\n @param TOKEN1_PRICE Quote token price"
            },
            "id": 2584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnExpectedBalanceWithoutFees",
            "nameLocation": "17780:32:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2501,
                  "mutability": "mutable",
                  "name": "TOKEN0_PRICE",
                  "nameLocation": "17827:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2584,
                  "src": "17822:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2500,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17822:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2503,
                  "mutability": "mutable",
                  "name": "TOKEN1_PRICE",
                  "nameLocation": "17854:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2584,
                  "src": "17849:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2502,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17849:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17812:60:1"
            },
            "returnParameters": {
              "id": 2509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2506,
                  "mutability": "mutable",
                  "name": "amt0",
                  "nameLocation": "17904:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2584,
                  "src": "17896:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17896:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2508,
                  "mutability": "mutable",
                  "name": "amt1",
                  "nameLocation": "17918:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2584,
                  "src": "17910:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17910:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17895:28:1"
            },
            "scope": 2807,
            "src": "17771:849:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2613,
              "nodeType": "Block",
              "src": "18867:170:1",
              "statements": [
                {
                  "expression": {
                    "id": 2603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 2596,
                          "name": "amt0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2592,
                          "src": "18878:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2597,
                          "name": "amt1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2594,
                          "src": "18884:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2598,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18877:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2600,
                          "name": "TOKEN0_PRICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2587,
                          "src": "18938:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2601,
                          "name": "TOKEN1_PRICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2589,
                          "src": "18964:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2599,
                        "name": "returnExpectedBalanceWithoutFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2584,
                        "src": "18892:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view returns (uint256,uint256)"
                        }
                      },
                      "id": 2602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18892:94:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "18877:109:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2604,
                  "nodeType": "ExpressionStatement",
                  "src": "18877:109:1"
                },
                {
                  "expression": {
                    "id": 2607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2605,
                      "name": "amt0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2592,
                      "src": "18996:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2606,
                      "name": "fee0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 976,
                      "src": "19004:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18996:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2608,
                  "nodeType": "ExpressionStatement",
                  "src": "18996:12:1"
                },
                {
                  "expression": {
                    "id": 2611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2609,
                      "name": "amt1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2594,
                      "src": "19018:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2610,
                      "name": "fee1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "19026:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19018:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2612,
                  "nodeType": "ExpressionStatement",
                  "src": "19018:12:1"
                }
              ]
            },
            "documentation": {
              "id": 2585,
              "nodeType": "StructuredDocumentation",
              "src": "18626:96:1",
              "text": "@notice Calculate the balance of underlying assets based on the assets price, excluding fees"
            },
            "functionSelector": "70409194",
            "id": 2614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnExpectedBalance",
            "nameLocation": "18736:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2587,
                  "mutability": "mutable",
                  "name": "TOKEN0_PRICE",
                  "nameLocation": "18772:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2614,
                  "src": "18767:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2586,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18767:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2589,
                  "mutability": "mutable",
                  "name": "TOKEN1_PRICE",
                  "nameLocation": "18799:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2614,
                  "src": "18794:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2588,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18794:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18757:60:1"
            },
            "returnParameters": {
              "id": 2595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2592,
                  "mutability": "mutable",
                  "name": "amt0",
                  "nameLocation": "18847:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2614,
                  "src": "18839:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18839:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2594,
                  "mutability": "mutable",
                  "name": "amt1",
                  "nameLocation": "18861:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2614,
                  "src": "18853:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18853:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18838:28:1"
            },
            "scope": 2807,
            "src": "18727:310:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2672,
              "nodeType": "Block",
              "src": "19347:386:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2624,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4868,
                        "src": "19361:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 2625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19361:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19378:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19361:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2630,
                  "nodeType": "IfStatement",
                  "src": "19357:32:1",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 2628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19388:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 2623,
                    "id": 2629,
                    "nodeType": "Return",
                    "src": "19381:8:1"
                  }
                },
                {
                  "assignments": [
                    2632,
                    2634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2632,
                      "mutability": "mutable",
                      "name": "amt0",
                      "nameLocation": "19408:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2672,
                      "src": "19400:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2631,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19400:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2634,
                      "mutability": "mutable",
                      "name": "amt1",
                      "nameLocation": "19422:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2672,
                      "src": "19414:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2633,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19414:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2639,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2636,
                        "name": "TOKEN0_PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2617,
                        "src": "19465:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2637,
                        "name": "TOKEN1_PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2619,
                        "src": "19491:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2635,
                      "name": "returnExpectedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2614,
                      "src": "19430:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 2638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19430:83:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19399:114:1"
                },
                {
                  "assignments": [
                    2641
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2641,
                      "mutability": "mutable",
                      "name": "totalValue",
                      "nameLocation": "19528:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2672,
                      "src": "19523:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2640,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19523:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2663,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2642,
                              "name": "TOKEN0_PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2617,
                              "src": "19542:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2643,
                              "name": "amt0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2632,
                              "src": "19557:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "19542:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2645,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "19541:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 2646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19578:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "expression": {
                                "id": 2647,
                                "name": "TOKEN0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 987,
                                "src": "19584:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                  "typeString": "struct TokenisableRange.ASSET storage ref"
                                }
                              },
                              "id": 2648,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19591:8:1",
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 983,
                              "src": "19584:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "19578:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2650,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "19577:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19541:59:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2652,
                              "name": "amt1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2634,
                              "src": "19616:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2653,
                              "name": "TOKEN1_PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2619,
                              "src": "19623:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "19616:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2655,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "19615:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 2656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19652:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "expression": {
                                "id": 2657,
                                "name": "TOKEN1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 990,
                                "src": "19658:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                  "typeString": "struct TokenisableRange.ASSET storage ref"
                                }
                              },
                              "id": 2658,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19665:8:1",
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 983,
                              "src": "19658:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "19652:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2660,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "19651:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19615:59:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19541:133:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19523:151:1"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2664,
                            "name": "totalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2641,
                            "src": "19692:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 2665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19705:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "19692:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2667,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "19691:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2668,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4868,
                        "src": "19713:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 2669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19713:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19691:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2623,
                  "id": 2671,
                  "nodeType": "Return",
                  "src": "19684:42:1"
                }
              ]
            },
            "documentation": {
              "id": 2615,
              "nodeType": "StructuredDocumentation",
              "src": "19043:169:1",
              "text": "@notice Return the price of LP tokens based on the underlying assets price\n @param TOKEN0_PRICE Base token price\n @param TOKEN1_PRICE Quote token price"
            },
            "functionSelector": "44919d7b",
            "id": 2673,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValuePerLPAtPrice",
            "nameLocation": "19226:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2617,
                  "mutability": "mutable",
                  "name": "TOKEN0_PRICE",
                  "nameLocation": "19261:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2673,
                  "src": "19256:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2616,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19256:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2619,
                  "mutability": "mutable",
                  "name": "TOKEN1_PRICE",
                  "nameLocation": "19288:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2673,
                  "src": "19283:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2618,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19283:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19246:60:1"
            },
            "returnParameters": {
              "id": 2623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2622,
                  "mutability": "mutable",
                  "name": "priceX1e8",
                  "nameLocation": "19336:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2673,
                  "src": "19328:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19328:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19327:19:1"
            },
            "scope": 2807,
            "src": "19217:516:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2698,
              "nodeType": "Block",
              "src": "19852:192:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2684,
                                  "name": "TOKEN0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 987,
                                  "src": "19948:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                    "typeString": "struct TokenisableRange.ASSET storage ref"
                                  }
                                },
                                "id": 2685,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "19955:5:1",
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 981,
                                "src": "19948:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$5329",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$5329",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 2683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19940:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2682,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19940:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19940:21:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2680,
                            "name": "ORACLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 993,
                            "src": "19919:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                              "typeString": "contract IAaveOracle"
                            }
                          },
                          "id": 2681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19926:13:1",
                          "memberName": "getAssetPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9886,
                          "src": "19919:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19919:43:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2692,
                                  "name": "TOKEN1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 990,
                                  "src": "20009:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                    "typeString": "struct TokenisableRange.ASSET storage ref"
                                  }
                                },
                                "id": 2693,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "20016:5:1",
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 981,
                                "src": "20009:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$5329",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$5329",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 2691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20001:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2690,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20001:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20001:21:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2688,
                            "name": "ORACLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 993,
                            "src": "19980:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                              "typeString": "contract IAaveOracle"
                            }
                          },
                          "id": 2689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19987:13:1",
                          "memberName": "getAssetPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9886,
                          "src": "19980:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19980:43:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2679,
                      "name": "getValuePerLPAtPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2673,
                      "src": "19881:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 2696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19881:156:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2678,
                  "id": 2697,
                  "nodeType": "Return",
                  "src": "19862:175:1"
                }
              ]
            },
            "documentation": {
              "id": 2674,
              "nodeType": "StructuredDocumentation",
              "src": "19739:44:1",
              "text": "@notice Return the price of the LP token"
            },
            "functionSelector": "50d25bcd",
            "id": 2699,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "latestAnswer",
            "nameLocation": "19797:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19809:2:1"
            },
            "returnParameters": {
              "id": 2678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2677,
                  "mutability": "mutable",
                  "name": "priceX1e8",
                  "nameLocation": "19841:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "19833:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19833:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19832:19:1"
            },
            "scope": 2807,
            "src": "19788:256:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2766,
              "nodeType": "Block",
              "src": "20343:517:1",
              "statements": [
                {
                  "assignments": [
                    2710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2710,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "20361:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2766,
                      "src": "20353:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2709,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "20353:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2727,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2715,
                              "name": "TOKEN0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 987,
                              "src": "20408:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                "typeString": "struct TokenisableRange.ASSET storage ref"
                              }
                            },
                            "id": 2716,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20415:5:1",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 981,
                            "src": "20408:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$5329",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$5329",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 2714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20400:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2713,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20400:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20400:21:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2720,
                              "name": "TOKEN1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 990,
                              "src": "20443:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ASSET_$984_storage",
                                "typeString": "struct TokenisableRange.ASSET storage ref"
                              }
                            },
                            "id": 2721,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20450:5:1",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 981,
                            "src": "20443:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$5329",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$5329",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 2719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20435:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2718,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20435:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20435:21:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "id": 2725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2723,
                          "name": "feeTier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 972,
                          "src": "20470:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 2724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20480:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "20470:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 2711,
                        "name": "V3_FACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1026,
                        "src": "20368:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Factory_$12138",
                          "typeString": "contract IUniswapV3Factory"
                        }
                      },
                      "id": 2712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20379:7:1",
                      "memberName": "getPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12111,
                      "src": "20368:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                        "typeString": "function (address,address,uint24) view external returns (address)"
                      }
                    },
                    "id": 2726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20368:125:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20353:140:1"
                },
                {
                  "assignments": [
                    2729,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2729,
                      "mutability": "mutable",
                      "name": "sqrtPriceX96",
                      "nameLocation": "20512:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2766,
                      "src": "20504:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 2728,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "20504:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 2735,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2731,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2710,
                            "src": "20555:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2730,
                          "name": "IUniswapV3Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12176,
                          "src": "20540:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$12176_$",
                            "typeString": "type(contract IUniswapV3Pool)"
                          }
                        },
                        "id": 2732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20540:20:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$12176",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 2733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20561:5:1",
                      "memberName": "slot0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12158,
                      "src": "20540:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 2734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20540:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20503:65:1"
                },
                {
                  "expression": {
                    "id": 2764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 2736,
                          "name": "token0Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2705,
                          "src": "20579:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2737,
                          "name": "token1Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2707,
                          "src": "20593:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2738,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "20578:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2741,
                          "name": "sqrtPriceX96",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2729,
                          "src": "20662:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2744,
                              "name": "lowerTick",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 968,
                              "src": "20716:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "expression": {
                              "id": 2742,
                              "name": "TickMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11852,
                              "src": "20688:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TickMath_$11852_$",
                                "typeString": "type(library TickMath)"
                              }
                            },
                            "id": 2743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20697:18:1",
                            "memberName": "getSqrtRatioAtTick",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11712,
                            "src": "20688:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_pure$_t_int24_$returns$_t_uint160_$",
                              "typeString": "function (int24) pure returns (uint160)"
                            }
                          },
                          "id": 2745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20688:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2748,
                              "name": "upperTick",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 970,
                              "src": "20768:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "expression": {
                              "id": 2746,
                              "name": "TickMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11852,
                              "src": "20740:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TickMath_$11852_$",
                                "typeString": "type(library TickMath)"
                              }
                            },
                            "id": 2747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20749:18:1",
                            "memberName": "getSqrtRatioAtTick",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11712,
                            "src": "20740:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_pure$_t_int24_$returns$_t_uint160_$",
                              "typeString": "function (int24) pure returns (uint160)"
                            }
                          },
                          "id": 2749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20740:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2757,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "id": 2754,
                                          "name": "liquidity",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1008,
                                          "src": "20806:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        ],
                                        "id": 2753,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "20801:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 2752,
                                          "name": "uint",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "20801:4:1",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2755,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "20801:15:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2756,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2702,
                                      "src": "20819:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "20801:24:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2758,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "20800:26:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2759,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4868,
                                  "src": "20829:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 2760,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20829:13:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "20800:42:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "20792:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint128_$",
                              "typeString": "type(uint128)"
                            },
                            "typeName": {
                              "id": 2750,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "20792:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20792:51:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 2739,
                          "name": "LiquidityAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11314,
                          "src": "20609:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LiquidityAmounts_$11314_$",
                            "typeString": "type(library LiquidityAmounts)"
                          }
                        },
                        "id": 2740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20626:22:1",
                        "memberName": "getAmountsForLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11313,
                        "src": "20609:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint160,uint160,uint160,uint128) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 2763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20609:244:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "20578:275:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2765,
                  "nodeType": "ExpressionStatement",
                  "src": "20578:275:1"
                }
              ]
            },
            "documentation": {
              "id": 2700,
              "nodeType": "StructuredDocumentation",
              "src": "20050:164:1",
              "text": "@notice Return the underlying tokens amounts for a given TR balance excluding the fees\n @param amount Amount of tokens we want the underlying amounts for"
            },
            "functionSelector": "d1f7e92b",
            "id": 2767,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenAmountsExcludingFees",
            "nameLocation": "20228:28:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2702,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "20271:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2767,
                  "src": "20266:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2701,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20266:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20256:27:1"
            },
            "returnParameters": {
              "id": 2708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2705,
                  "mutability": "mutable",
                  "name": "token0Amount",
                  "nameLocation": "20310:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2767,
                  "src": "20305:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2704,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20305:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2707,
                  "mutability": "mutable",
                  "name": "token1Amount",
                  "nameLocation": "20329:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2767,
                  "src": "20324:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2706,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20324:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20304:38:1"
            },
            "scope": 2807,
            "src": "20219:641:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2805,
              "nodeType": "Block",
              "src": "21129:198:1",
              "statements": [
                {
                  "expression": {
                    "id": 2783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 2777,
                          "name": "token0Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2773,
                          "src": "21140:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2778,
                          "name": "token1Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2775,
                          "src": "21154:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2779,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "21139:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2781,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2770,
                          "src": "21199:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2780,
                        "name": "getTokenAmountsExcludingFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2767,
                        "src": "21170:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256,uint256)"
                        }
                      },
                      "id": 2782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21170:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "21139:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2784,
                  "nodeType": "ExpressionStatement",
                  "src": "21139:67:1"
                },
                {
                  "expression": {
                    "id": 2793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2785,
                      "name": "token0Amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2773,
                      "src": "21216:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2786,
                              "name": "fee0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 976,
                              "src": "21233:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2787,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2770,
                              "src": "21240:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21233:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2789,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "21232:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2790,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4868,
                          "src": "21250:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 2791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21250:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "21232:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21216:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2794,
                  "nodeType": "ExpressionStatement",
                  "src": "21216:47:1"
                },
                {
                  "expression": {
                    "id": 2803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2795,
                      "name": "token1Amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2775,
                      "src": "21273:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2796,
                              "name": "fee1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "21290:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2797,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2770,
                              "src": "21297:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21290:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2799,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "21289:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2800,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4868,
                          "src": "21307:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 2801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21307:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "21289:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21273:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2804,
                  "nodeType": "ExpressionStatement",
                  "src": "21273:47:1"
                }
              ]
            },
            "documentation": {
              "id": 2768,
              "nodeType": "StructuredDocumentation",
              "src": "20866:145:1",
              "text": "@notice Return the underlying tokens amounts for a given TR balance\n @param amount Amount of tokens we want the underlying amounts for"
            },
            "functionSelector": "3b4e06e6",
            "id": 2806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenAmounts",
            "nameLocation": "21025:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2770,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "21055:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2806,
                  "src": "21050:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2769,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "21050:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21040:27:1"
            },
            "returnParameters": {
              "id": 2776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2773,
                  "mutability": "mutable",
                  "name": "token0Amount",
                  "nameLocation": "21096:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2806,
                  "src": "21091:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2772,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "21091:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2775,
                  "mutability": "mutable",
                  "name": "token1Amount",
                  "nameLocation": "21115:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2806,
                  "src": "21110:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2774,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "21110:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21090:38:1"
            },
            "scope": 2807,
            "src": "21016:311:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2808,
        "src": "677:20652:1",
        "usedErrors": [],
        "usedEvents": [
          947,
          953,
          959,
          965,
          5397,
          5406
        ]
      }
    ],
    "src": "39:21291:1"
  },
  "bytecode": "6080604052601180546001600160a01b0319167322cc3f665ba4c898226353b672c5123c5875169217905560146012553480156200003c57600080fd5b5060408051602080820183526000808352835191820190935291825290600362000067838262000129565b50600462000076828262000129565b5050600160055550620001f5565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000af57607f821691505b602082108103620000d057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012457600081815260208120601f850160051c81016020861015620000ff5750805b601f850160051c820191505b8181101562000120578281556001016200010b565b5050505b505050565b81516001600160401b0381111562000145576200014562000084565b6200015d816200015684546200009a565b84620000d6565b602080601f8311600181146200019557600084156200017c5750858301515b600019600386901b1c1916600185901b17855562000120565b600085815260208120601f198616915b82811015620001c657888601518255948401946001909101908401620001a5565b5085821015620001e55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61459a80620002056000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80637040919411610130578063a5843f08116100b8578063d1f7e92b1161007c578063d1f7e92b1461054e578063d351887714610561578063dd62ed3e14610574578063e2bbb158146105ad578063e3526af4146105c057600080fd5b8063a5843f0814610502578063a9059cbb14610515578063bd865cba14610528578063c60982561461053d578063cc32d1761461054657600080fd5b806395d89b41116100ff57806395d89b41146104bd57806399d32fc4146104c55780639b1344ac146104cf578063a41fe49f146104dc578063a457c2d7146104ef57600080fd5b8063704091941461043057806370a0823114610443578063727dd2281461046c57806372f5d98a1461049357600080fd5b806338013f02116101be578063449247aa11610182578063449247aa146103d2578063470f6e1d146103e557806350d25bcd146103ee5780635ee04d78146103f657806361d027b31461041557600080fd5b806338013f021461033157806339509351146103445780633b4e06e614610357578063443ec74d1461037f57806344919d7b146103bf57600080fd5b806318160ddd1161020557806318160ddd146102c25780631a686502146102ca578063200d2ed2146102f557806323b872dd1461030f578063313ce5671461032257600080fd5b806306fdde031461023757806308bd1a8514610255578063095ea7b31461028857806317d70f7c146102ab575b600080fd5b61023f6105c9565b60405161024c91906138e6565b60405180910390f35b610270731f98431c8ad98523631ae4a59f267346ea31f98481565b6040516001600160a01b03909116815260200161024c565b61029b610296366004613931565b61065b565b604051901515815260200161024c565b6102b460075481565b60405190815260200161024c565b6002546102b4565b6010546102dd906001600160801b031681565b6040516001600160801b03909116815260200161024c565b600f546103029060ff1681565b60405161024c9190613973565b61029b61031d36600461399b565b610672565b6040516012815260200161024c565b600c54610270906001600160a01b031681565b61029b610352366004613931565b610721565b61036a6103653660046139dc565b61075d565b6040805192835260208301919091520161024c565b600a5461039e906001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b03909316835260ff90911660208301520161024c565b6102b46103cd3660046139f5565b6107c7565b601154610270906001600160a01b031681565b6102b460125481565b6102b461088a565b600b5461039e906001600160a01b03811690600160a01b900460ff1682565b6102707322cc3f665ba4c898226353b672c5123c5875169281565b61036a61043e3660046139f5565b610975565b6102b4610451366004613a17565b6001600160a01b031660009081526020819052604090205490565b600654610480906301000000900460020b81565b60405160029190910b815260200161024c565b6006546104a990600160301b900462ffffff1681565b60405162ffffff909116815260200161024c565b61023f6109ad565b6104cd6109bc565b005b6006546104809060020b81565b61036a6104ea366004613a34565b610fa7565b61029b6104fd366004613931565b611359565b6104cd6105103660046139f5565b6113f2565b61029b610523366004613931565b6117a9565b61027060008051602061454583398151915281565b6102b460095481565b6102b4601481565b61036a61055c3660046139dc565b6117b6565b6104cd61056f366004613b58565b611a29565b6102b4610582366004613c2a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102b46105bb3660046139f5565b6121cf565b6102b460085481565b6060600d80546105d890613c63565b80601f016020809104026020016040519081016040528092919081815260200182805461060490613c63565b80156106515780601f1061062657610100808354040283529160200191610651565b820191906000526020600020905b81548152906001019060200180831161063457829003601f168201915b5050505050905090565b6000610668338484612b2c565b5060015b92915050565b6001600160a01b0383166000908152600160209081526040808320338452909152812054828110156106fc5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6107098533858403612b2c565b610714858585612c50565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610668918590610758908690613cad565b612b2c565b600080610769836117b6565b60025491935091508360085461077f9190613cc0565b6107899190613ced565b6107939083613cad565b915061079e60025490565b836009546107ac9190613cc0565b6107b69190613ced565b6107c09082613cad565b9050915091565b60006107d260025490565b6000036107e15750600061066c565b6000806107ee8585610975565b600b54919350915060009061080e90600160a01b900460ff16600a613de5565b6108188684613cc0565b6108229190613ced565b600a805461083b91600160a01b90910460ff1690613de5565b6108458589613cc0565b61084f9190613ced565b6108599190613cad565b905061086460025490565b61087682670de0b6b3a7640000613cc0565b6108809190613ced565b9695505050505050565b600c54600a5460405163b3596f0760e01b81526001600160a01b03918216600482015260009261097092169063b3596f0790602401602060405180830381865afa1580156108dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109009190613df4565b600c54600b5460405163b3596f0760e01b81526001600160a01b03918216600482015291169063b3596f0790602401602060405180830381865afa15801561094c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cd9190613df4565b905090565b6000806109828484612e20565b60085491935091506109949083613cad565b9150600954816109a49190613cad565b90509250929050565b6060600e80546105d890613c63565b6040805160808101825260075481523060208201526001600160801b038183018190526060820152905163fc6f786560e01b815260009182916000805160206145458339815191529163fc6f786591610a189190600401613e0d565b60408051808303816000875af1158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190613e50565b91509150816000148015610a6c575080155b15610a75575050565b60006064610a84601485613cc0565b610a8e9190613ced565b905060006064610a9f601485613cc0565b610aa99190613ced565b90508115610adc57600a54610adc906001600160a01b03167322cc3f665ba4c898226353b672c5123c5875169284612fc4565b8015610b0d57600b54610b0d906001600160a01b03167322cc3f665ba4c898226353b672c5123c5875169283612fc4565b8184600854610b1c9190613cad565b610b269190613e74565b6008556009548190610b39908590613cad565b610b439190613e74565b600955600080610b538180612e20565b91509150816008546064610b679190613cc0565b118015610b815750806009546064610b7f9190613cc0565b115b15610f6657600854600a54610bb1916001600160a01b03909116906000805160206145458339815191529061302c565b600954600b54610bdc916001600160a01b03909116906000805160206145458339815191529061302c565b6040805160c0810182526007548152600854602082015260095481830152600060608201819052608082018190524260a0830152915163219f5d1760e01b8152829182916000805160206145458339815191529163219f5d1791610c439190600401613e87565b6060604051808303816000875af1158015610c62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c869190613ecb565b600c54600a5460405163b3596f0760e01b81526001600160a01b03918216600482015294975092955090935060009291169063b3596f0790602401602060405180830381865afa158015610cde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d029190613df4565b600c54600b5460405163b3596f0760e01b81526001600160a01b03918216600482015292935060009291169063b3596f0790602401602060405180830381865afa158015610d54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d789190613df4565b600b54909150600090610d9690600160a01b900460ff16600a613de5565b610da08386613cc0565b610daa9190613ced565b600a8054610dc391600160a01b90910460ff1690613de5565b610dcd8588613cc0565b610dd79190613ced565b610de19190613cad565b600b54909150600090610dff90600160a01b900460ff16600a613de5565b610e09848a613cc0565b610e139190613ced565b600a8054610e2c91600160a01b90910460ff1690613de5565b610e36868c613cc0565b610e409190613ced565b610e4a9190613cad565b6010549091506000906001600160801b0390811690610e6b908a1684613cc0565b610e759190613ced565b90506064610e8482605f613cc0565b610e8e9190613ced565b83118015610eb157506064610ea484605f613cc0565b610eae9190613ced565b81115b610ef65760405162461bcd60e51b815260206004820152601660248201527554523a20436c61696d2046656520536c69707061676560501b60448201526064016106f3565b8660086000828254610f089190613e74565b925050819055508560096000828254610f219190613e74565b9091555050601054610f3d9089906001600160801b0316613f02565b601080546001600160801b0319166001600160801b039290921691909117905550505050505050505b60408051878152602081018790527fcbf6196d7bebcbaaf53f321eecb5b4f39479879f3996f828f10012708a9442d7910160405180910390a1505050505050565b600080600260055403610ffc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106f3565b60026005556110096109bc565b600061101460025490565b60105461102b9088906001600160801b0316613cc0565b6110359190613ced565b6040805160a08101825260075481526001600160801b03838116602083019081528284018a8152606084018a815242608086019081529551630624e65f60e11b81529451600486015291519092166024840152905160448301525160648201529051608482015290915060008051602061454583398151915290630c49ccbe9060a40160408051808303816000875af11580156110d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fa9190613e50565b60105491945092506111169082906001600160801b0316613e74565b601080546001600160801b0319166001600160801b039283161790556040805160808101825260075481523360208201528583168183015291841660608301525163fc6f786560e01b81526000805160206145458339815191529163fc6f7865916111849190600401613e0d565b60408051808303816000875af11580156111a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c69190613e50565b50506008541561126757611208336111dd60025490565b886008546111eb9190613cc0565b6111f59190613ced565b600a546001600160a01b03169190612fc4565b600254866008546112199190613cc0565b6112239190613ced565b61122d9084613cad565b925061123860025490565b866008546112469190613cc0565b6112509190613ced565b600860008282546112619190613e74565b90915550505b60095415611306576112a73361127c60025490565b8860095461128a9190613cc0565b6112949190613ced565b600b546001600160a01b03169190612fc4565b600254866009546112b89190613cc0565b6112c29190613ced565b6112cc9083613cad565b91506112d760025490565b866009546112e59190613cc0565b6112ef9190613ced565b600960008282546113009190613e74565b90915550505b61131033876130de565b60408051338152602081018890527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a15060016005559094909350915050565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156113db5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106f3565b6113e83385858403612b2c565b5060019392505050565b6001600f5460ff16600281111561140b5761140b61395d565b146114425760405162461bcd60e51b8152602060048201526007602482015266021496e69744c560cc1b60448201526064016106f3565b600f5461010090046001600160a01b031633146114925760405162461bcd60e51b815260206004820152600e60248201526d155b985b1b1bddd9590818d85b1b60921b60448201526064016106f3565b600f805460ff19166002179055600a546114b7906001600160a01b031633308561322c565b600b546114cf906001600160a01b031633308461322c565b600a546114f4906001600160a01b03166000805160206145458339815191528461302c565b600b54611519906001600160a01b03166000805160206145458339815191528361302c565b6040805161016081018252600a546001600160a01b039081168252600b5416602082015260065460008051602061454583398151915292638831645692919082019061157290600160301b900462ffffff166064613f29565b62ffffff168152600654600281810b60208401526301000000909104900b6040820152606081018690526080810185905260a00160646115b387605f613cc0565b6115bd9190613ced565b815260200160646115cf86605f613cc0565b6115d99190613ced565b815230602082015242604091820152516001600160e01b031960e084901b1681526116079190600401613f50565b6080604051808303816000875af1158015611626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164a9190614014565b5050601080546001600160801b0319166001600160801b0392909216919091179055600755600a546040516370a0823160e01b81523060048201526116e19133916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156116bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f59190613df4565b600b546040516370a0823160e01b81523060048201526117539133916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561172f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112949190613df4565b61176533670de0b6b3a7640000613264565b60408051338152670de0b6b3a764000060208201527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c910160405180910390a15050565b6000610668338484612c50565b600a54600b5460065460009283928392731f98431c8ad98523631ae4a59f267346ea31f98492631698ee82926001600160a01b039182169291169061180890600160301b900462ffffff166064613f29565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa15801561185f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118839190614052565b90506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156118c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e991906140a4565b505060065460405163986cfba360e01b815260029190910b6004820152949550611a1d9486945073__TickMath______________________________935063986cfba392506024019050602060405180830381865af4158015611950573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119749190614052565b60065460405163986cfba360e01b8152630100000090910460020b600482015273__TickMath______________________________9063986cfba390602401602060405180830381865af41580156119d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f49190614052565b600254601054611a0e908b906001600160801b0316613cc0565b611a189190613ced565b613343565b90969095509350505050565b6001600160a01b038816611a705760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964206f7261636c6560901b60448201526064016106f3565b6000600f5460ff166002811115611a8957611a8961395d565b14611ac35760405162461bcd60e51b815260206004820152600a60248201526921496e697450726f787960b01b60448201526064016106f3565b600f805460016001600160a81b0319909116336101000260ff191617179055600c80546001600160a01b038a81166001600160a01b031992831617909255600a8054928a1692909116821790556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015611b4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6f9190614130565b600a805460ff92909216600160a01b0260ff60a01b19909216919091179055600b80546001600160a01b0388166001600160a01b031990911681179091556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015611be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0c9190614130565b600b60000160146101000a81548160ff021916908360ff1602179055506000876001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611c69573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c91919081019061414b565b90506000876001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611cd3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611cfb919081019061414b565b9050600073__TickMath______________________________634f76c058611d92600a60000160149054906101000a900460ff16600a611d3b9190613de5565b611d4e906001600160801b038d16613cc0565b600b54611d6690600160a01b900460ff16600a613de5565b611d7490600160601b613cc0565b611d83906402540be400613cc0565b611d8d9190613ced565b6133e0565b611da090600160301b613cc0565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865af4158015611de4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0891906141c2565b9050600073__TickMath______________________________634f76c058611e48600a60000160149054906101000a900460ff16600a611d3b9190613de5565b611e5690600160301b613cc0565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865af4158015611e9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ebe91906141c2565b90508415611ff4576006805468ffffff0000000000001916660500000000000017905560006002611eef83856141dd565b611ef99190614202565b600654909150611f1690600160301b900462ffffff166002613f29565b600654611f2f90600160301b900462ffffff16836141dd565b611f39919061423c565b600654611f5290600160301b900462ffffff16836141dd565b611f5c919061425e565b600654909350600160301b900462ffffff16611f78818561425e565b611f82919061425e565b915083858989604051602001611f9b9493929190614283565b604051602081830303815290604052600d9081611fb89190614361565b5087878587604051602001611fd09493929190614421565b604051602081830303815290604052600e9081611fed9190614361565b505061213f565b6006805468ffffff0000000000001916660500000000000017908190556120299062ffffff600160301b909104166002613f29565b60065461204290600160301b900462ffffff16836141dd565b61204c919061423c565b60065461206590600160301b900462ffffff16836141dd565b61206f919061425e565b60065490915061208c90600160301b900462ffffff166002613f29565b6006546120a590600160301b900462ffffff16846141dd565b6120af919061423c565b6006546120c890600160301b900462ffffff16846141dd565b6120d2919061425e565b9150828488886040516020016120eb94939291906144ac565b604051602081830303815290604052600d90816121089190614361565b508686848660405160200161212094939291906144ce565b604051602081830303815290604052600e908161213d9190614361565b505b6006805462ffffff84811663010000000265ffffffffffff1990921690841617179055604080516001600160a01b038d811682528c1660208201526001600160801b038b81169282019290925290891660608201527feb71465d71f7b18c376ba29f6edb7953dc29c7afb4fcaa4e1335c8827a8dd96e9060800160405180910390a1505050505050505050505050565b60006002600554036122235760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106f3565b6002600555600061223360025490565b1161226c5760405162461bcd60e51b815260206004820152600960248201526815148810db1bdcd95960ba1b60448201526064016106f3565b6122746109bc565b600a546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156122cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ef91906144eb565b50600b546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015612347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236b91906144eb565b5060008060006009546008546123819190613cad565b118015612398575060008511806123985750600854155b80156123ae575060008411806123ae5750600954155b156126d057600a54600b54600654600092731f98431c8ad98523631ae4a59f267346ea31f98492631698ee82926001600160a01b03928316929091169061240290600160301b900462ffffff166064613f29565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa158015612459573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061247d9190614052565b90506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156124bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e391906140a4565b505060065460405163986cfba360e01b815260029190910b6004820152949550600094859450612604935086925073__TickMath______________________________915063986cfba3906024015b602060405180830381865af415801561254f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125739190614052565b60065460405163986cfba360e01b8152630100000090910460020b600482015273__TickMath______________________________9063986cfba390602401602060405180830381865af41580156125cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f39190614052565b6010546001600160801b0316613343565b915091506000600854836126189190613cad565b11156126455760085461262b9083613cad565b600854612638908b613cc0565b6126429190613ced565b95505b6000600954826126559190613cad565b1115612682576009546126689082613cad565b600954612675908a613cc0565b61267f9190613ced565b94505b85600860008282546126949190613cad565b9250508190555084600960008282546126ad9190613cad565b909155506126bd9050868a613e74565b98506126c98589613e74565b9750505050505b600a546126f5906001600160a01b03166000805160206145458339815191528761302c565b600b5461271a906001600160a01b03166000805160206145458339815191528661302c565b60008060006000805160206145458339815191526001600160a01b031663219f5d176040518060c0016040528060075481526020018b81526020018a815260200160648c605f61276a9190613cc0565b6127749190613ced565b815260200160646127868c605f613cc0565b6127909190613ced565b8152602001428152506040518263ffffffff1660e01b81526004016127b59190613e87565b6060604051808303816000875af11580156127d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127f89190613ecb565b925092509250600085600014801561280e575084155b15612a4357600c54600a5460405163b3596f0760e01b81526001600160a01b039182166004820152600092919091169063b3596f0790602401602060405180830381865afa158015612864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128889190613df4565b600c54600b5460405163b3596f0760e01b81526001600160a01b03918216600482015292935060009291169063b3596f0790602401602060405180830381865afa1580156128da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128fe9190613df4565b90506000821180156129105750600081115b6129535760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964204f7261636c6520507269636560601b60448201526064016106f3565b600b5461296b90600160a01b900460ff16600a613de5565b6129758286613cc0565b61297f9190613ced565b600a805461299891600160a01b90910460ff1690613de5565b6129a28488613cc0565b6129ac9190613ced565b6129b69190613cad565b600b546129ce90600160a01b900460ff16600a613de5565b826009546129dc9190613cc0565b6129e69190613ced565b600a80546129ff91600160a01b90910460ff1690613de5565b84600854612a0d9190613cc0565b612a179190613ced565b612a219190613cad565b612a34906001600160801b038916613cc0565b612a3e9190613ced565b925050505b601054612a5a9082906001600160801b0316613cad565b846001600160801b0316612a6d60025490565b612a779190613cc0565b612a819190613ced565b601054909750612a9b9085906001600160801b0316613f02565b601080546001600160801b0319166001600160801b0392909216919091179055612ac53388613264565b612ad3336111f5858c613e74565b612ae133611294848b613e74565b60408051338152602081018990527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c910160405180910390a150506001600555509295945050505050565b6001600160a01b038316612b8e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106f3565b6001600160a01b038216612bef5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106f3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316612cb45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106f3565b6001600160a01b038216612d165760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106f3565b6001600160a01b03831660009081526020819052604090205481811015612d8e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106f3565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290612dc5908490613cad565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051612e1191815260200190565b60405180910390a35b50505050565b60008083600003612e9e57600c54600a5460405163b3596f0760e01b81526001600160a01b03918216600482015291169063b3596f0790602401602060405180830381865afa158015612e77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e9b9190613df4565b93505b82600003612f1957600c54600b5460405163b3596f0760e01b81526001600160a01b03918216600482015291169063b3596f0790602401602060405180830381865afa158015612ef2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f169190613df4565b92505b612fb9612f7a600a60000160149054906101000a900460ff16600a612f3e9190613de5565b600b548690612f5890600160a01b900460ff16600a613de5565b612f629089613cc0565b612f6c9190613ced565b611d8390600160c01b613cc0565b60065460405163986cfba360e01b815260029190910b600482015273__TickMath______________________________9063986cfba390602401612532565b909590945092505050565b6040516001600160a01b03831660248201526044810182905261302790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613439565b505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561307d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130a19190613df4565b6130ab9190613cad565b6040516001600160a01b038516602482015260448101829052909150612e1a90859063095ea7b360e01b90606401612ff0565b6001600160a01b03821661313e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106f3565b6001600160a01b038216600090815260208190526040902054818110156131b25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106f3565b6001600160a01b03831660009081526020819052604081208383039055600280548492906131e1908490613e74565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b0380851660248301528316604482015260648101829052612e1a9085906323b872dd60e01b90608401612ff0565b6001600160a01b0382166132ba5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106f3565b80600260008282546132cc9190613cad565b90915550506001600160a01b038216600090815260208190526040812080548392906132f9908490613cad565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600080836001600160a01b0316856001600160a01b03161115613364579293925b846001600160a01b0316866001600160a01b031610156133905761338985858561350b565b91506133d7565b836001600160a01b0316866001600160a01b031610156133c9576133b586858561350b565b91506133c2858785613586565b90506133d7565b6133d4858585613586565b90505b94509492505050565b60008060026133f0846001613cad565b6133fa9190613ced565b90508291505b81811015613433579050806002816134188186613ced565b6134229190613cad565b61342c9190613ced565b9050613400565b50919050565b600061348e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166135d09092919063ffffffff16565b80519091501561302757808060200190518101906134ac91906144eb565b6130275760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106f3565b6000826001600160a01b0316846001600160a01b0316111561352b579192915b6001600160a01b0384166135746fffffffffffffffffffffffffffffffff60601b606085901b1661355c8787614508565b6001600160a01b0316866001600160a01b03166135df565b61357e9190613ced565b949350505050565b6000826001600160a01b0316846001600160a01b031611156135a6579192915b61357e6001600160801b0383166135bd8686614508565b6001600160a01b0316600160601b6135df565b606061357e8484600085613758565b6000808060001985870985870292508281108382030391505080600003613618576000841161360d57600080fd5b50829004905061071a565b80841161362457600080fd5b600084868809808403938111909203919050600061364486196001613cad565b86169586900495938490049360008190030460010190506136658184613cc0565b909317926000613676876003613cc0565b60021890506136858188613cc0565b613690906002613e74565b61369a9082613cc0565b90506136a68188613cc0565b6136b1906002613e74565b6136bb9082613cc0565b90506136c78188613cc0565b6136d2906002613e74565b6136dc9082613cc0565b90506136e88188613cc0565b6136f3906002613e74565b6136fd9082613cc0565b90506137098188613cc0565b613714906002613e74565b61371e9082613cc0565b905061372a8188613cc0565b613735906002613e74565b61373f9082613cc0565b905061374b8186613cc0565b9998505050505050505050565b6060824710156137b95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106f3565b6001600160a01b0385163b6138105760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106f3565b600080866001600160a01b0316858760405161382c9190614528565b60006040518083038185875af1925050503d8060008114613869576040519150601f19603f3d011682016040523d82523d6000602084013e61386e565b606091505b509150915061387e828286613889565b979650505050505050565b6060831561389857508161071a565b8251156138a85782518084602001fd5b8160405162461bcd60e51b81526004016106f391906138e6565b60005b838110156138dd5781810151838201526020016138c5565b50506000910152565b60208152600082518060208401526139058160408501602087016138c2565b601f01601f19169190910160400192915050565b6001600160a01b038116811461392e57600080fd5b50565b6000806040838503121561394457600080fd5b823561394f81613919565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061399557634e487b7160e01b600052602160045260246000fd5b91905290565b6000806000606084860312156139b057600080fd5b83356139bb81613919565b925060208401356139cb81613919565b929592945050506040919091013590565b6000602082840312156139ee57600080fd5b5035919050565b60008060408385031215613a0857600080fd5b50508035926020909101359150565b600060208284031215613a2957600080fd5b813561071a81613919565b600080600060608486031215613a4957600080fd5b505081359360208301359350604090920135919050565b6001600160801b038116811461392e57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715613ab457613ab4613a75565b604052919050565b600067ffffffffffffffff821115613ad657613ad6613a75565b50601f01601f191660200190565b600082601f830112613af557600080fd5b8135613b08613b0382613abc565b613a8b565b818152846020838601011115613b1d57600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461392e57600080fd5b8035613b5381613b3a565b919050565b600080600080600080600080610100898b031215613b7557600080fd5b8835613b8081613919565b97506020890135613b9081613919565b96506040890135613ba081613919565b95506060890135613bb081613a60565b94506080890135613bc081613a60565b935060a089013567ffffffffffffffff80821115613bdd57600080fd5b613be98c838d01613ae4565b945060c08b0135915080821115613bff57600080fd5b50613c0c8b828c01613ae4565b925050613c1b60e08a01613b48565b90509295985092959890939650565b60008060408385031215613c3d57600080fd5b8235613c4881613919565b91506020830135613c5881613919565b809150509250929050565b600181811c90821680613c7757607f821691505b60208210810361343357634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561066c5761066c613c97565b808202811582820484141761066c5761066c613c97565b634e487b7160e01b600052601260045260246000fd5b600082613cfc57613cfc613cd7565b500490565b600181815b80851115613d3c578160001904821115613d2257613d22613c97565b80851615613d2f57918102915b93841c9390800290613d06565b509250929050565b600082613d535750600161066c565b81613d605750600061066c565b8160018114613d765760028114613d8057613d9c565b600191505061066c565b60ff841115613d9157613d91613c97565b50506001821b61066c565b5060208310610133831016604e8410600b8410161715613dbf575081810a61066c565b613dc98383613d01565b8060001904821115613ddd57613ddd613c97565b029392505050565b600061071a60ff841683613d44565b600060208284031215613e0657600080fd5b5051919050565b815181526020808301516001600160a01b0316908201526040808301516001600160801b0390811691830191909152606092830151169181019190915260800190565b60008060408385031215613e6357600080fd5b505080516020909101519092909150565b8181038181111561066c5761066c613c97565b600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b600080600060608486031215613ee057600080fd5b8351613eeb81613a60565b602085015160409095015190969495509392505050565b6001600160801b03818116838216019080821115613f2257613f22613c97565b5092915050565b62ffffff818116838216028082169190828114613f4857613f48613c97565b505092915050565b81516001600160a01b0316815261016081016020830151613f7c60208401826001600160a01b03169052565b506040830151613f93604084018262ffffff169052565b506060830151613fa8606084018260020b9052565b506080830151613fbd608084018260020b9052565b5060a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151614003828501826001600160a01b03169052565b505061014092830151919092015290565b6000806000806080858703121561402a57600080fd5b84519350602085015161403c81613a60565b6040860151606090960151949790965092505050565b60006020828403121561406457600080fd5b815161071a81613919565b8051600281900b8114613b5357600080fd5b805161ffff81168114613b5357600080fd5b805160ff81168114613b5357600080fd5b600080600080600080600060e0888a0312156140bf57600080fd5b87516140ca81613919565b96506140d86020890161406f565b95506140e660408901614081565b94506140f460608901614081565b935061410260808901614081565b925061411060a08901614093565b915060c088015161412081613b3a565b8091505092959891949750929550565b60006020828403121561414257600080fd5b61071a82614093565b60006020828403121561415d57600080fd5b815167ffffffffffffffff81111561417457600080fd5b8201601f8101841361418557600080fd5b8051614193613b0382613abc565b8181528560208385010111156141a857600080fd5b6141b98260208301602086016138c2565b95945050505050565b6000602082840312156141d457600080fd5b61071a8261406f565b600281810b9083900b01627fffff8113627fffff198212171561066c5761066c613c97565b60008160020b8360020b8061421957614219613cd7565b627fffff1982146000198214161561423357614233613c97565b90059392505050565b60008260020b8061424f5761424f613cd7565b808360020b0791505092915050565b600282810b9082900b03627fffff198112627fffff8213171561066c5761066c613c97565b6602a34b1b5b2b9160cd1b8152600085516142a5816007850160208a016138c2565b8083019050600160fd1b80600783015286516142c8816008850160208b016138c2565b600892019182015284516142e38160098401602089016138c2565b602d60f81b60099290910191820152835161430581600a8401602088016138c2565b01600a019695505050505050565b601f82111561302757600081815260208120601f850160051c8101602086101561433a5750805b601f850160051c820191505b8181101561435957828155600101614346565b505050505050565b815167ffffffffffffffff81111561437b5761437b613a75565b61438f816143898454613c63565b84614313565b602080601f8311600181146143c457600084156143ac5750858301515b600019600386901b1c1916600185901b178555614359565b600085815260208120601f198616915b828110156143f3578886015182559484019460019091019084016143d4565b50858210156144115787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61542d60f01b81526000855161443e816002850160208a016138c2565b605f60f81b600291840191820152855161445f816003840160208a016138c2565b808201915050602d60f81b8060038301528551614483816004850160208a016138c2565b6004920191820152835161449e8160058401602088016138c2565b016005019695505050505050565b6602930b733b2b9160cd1b8152600085516142a5816007850160208a016138c2565b61522d60f01b81526000855161443e816002850160208a016138c2565b6000602082840312156144fd57600080fd5b815161071a81613b3a565b6001600160a01b03828116828216039080821115613f2257613f22613c97565b6000825161453a8184602087016138c2565b919091019291505056fe000000000000000000000000c36442b4a4522e871399cd717abdd847ab11fe88a2646970667358221220afd0984448d19f5484d4a62ca09b51957e4858d8fb22109859465bebd27a6c8b64736f6c63430008150033",
  "bytecodeSha1": "986bc07922f419ad523999cc8d3b36be03734a6d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "TokenisableRange",
  "coverageMap": {
    "branches": {
      "1": {
        "TokenisableRange.claimFee": {
          "165": [
            9364,
            9371,
            false
          ],
          "166": [
            9427,
            9434,
            false
          ],
          "167": [
            11164,
            11204,
            false
          ],
          "168": [
            11228,
            11268,
            true
          ]
        },
        "TokenisableRange.deposit": {
          "176": [
            11992,
            12009,
            true
          ],
          "177": [
            12700,
            12715,
            false
          ],
          "178": [
            12720,
            12726,
            true
          ],
          "179": [
            12730,
            12739,
            false
          ],
          "180": [
            12745,
            12751,
            true
          ],
          "181": [
            12755,
            12764,
            false
          ],
          "182": [
            13354,
            13377,
            false
          ],
          "183": [
            13458,
            13481,
            false
          ],
          "184": [
            14626,
            14638,
            false
          ],
          "185": [
            14642,
            14654,
            false
          ],
          "186": [
            14855,
            14871,
            false
          ],
          "187": [
            14875,
            14891,
            true
          ]
        },
        "TokenisableRange.getValuePerLPAtPrice": {
          "164": [
            19361,
            19379,
            false
          ]
        },
        "TokenisableRange.init": {
          "171": [
            7363,
            7391,
            true
          ],
          "172": [
            7421,
            7442,
            true
          ]
        },
        "TokenisableRange.initProxy": {
          "173": [
            3393,
            3425,
            true
          ],
          "174": [
            3462,
            3493,
            true
          ],
          "175": [
            4511,
            4519,
            false
          ]
        },
        "TokenisableRange.returnExpectedBalanceWithoutFees": {
          "188": [
            17976,
            17993,
            false
          ],
          "189": [
            18079,
            18096,
            false
          ]
        },
        "TokenisableRange.withdraw": {
          "169": [
            17094,
            17102,
            false
          ],
          "170": [
            17310,
            17318,
            false
          ]
        }
      },
      "2": {},
      "3": {
        "FullMath.mulDiv": {
          "203": [
            1543,
            1553,
            false
          ],
          "204": [
            1577,
            1592,
            true
          ],
          "205": [
            1831,
            1850,
            true
          ]
        }
      },
      "4": {
        "LiquidityAmounts.getAmount0ForLiquidity": {
          "209": [
            4018,
            4047,
            false
          ]
        },
        "LiquidityAmounts.getAmount1ForLiquidity": {
          "210": [
            4808,
            4837,
            false
          ]
        },
        "LiquidityAmounts.getAmountsForLiquidity": {
          "206": [
            5478,
            5507,
            false
          ],
          "207": [
            5599,
            5627,
            false
          ],
          "208": [
            5799,
            5827,
            false
          ]
        }
      },
      "42": {},
      "43": {
        "ERC20._approve": {
          "195": [
            10150,
            10169,
            true
          ],
          "196": [
            10228,
            10249,
            true
          ]
        },
        "ERC20._burn": {
          "200": [
            9103,
            9124,
            true
          ],
          "201": [
            9294,
            9318,
            true
          ]
        },
        "ERC20._mint": {
          "202": [
            8394,
            8415,
            true
          ]
        },
        "ERC20._transfer": {
          "197": [
            7457,
            7477,
            true
          ],
          "198": [
            7537,
            7560,
            true
          ],
          "199": [
            7728,
            7751,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "194": [
            6631,
            6666,
            true
          ]
        },
        "ERC20.transferFrom": {
          "193": [
            5101,
            5127,
            true
          ]
        }
      },
      "44": {},
      "5": {},
      "53": {},
      "58": {
        "SafeERC20._callOptionalReturn": {
          "211": [
            3735,
            3756,
            false
          ],
          "212": [
            3819,
            3849,
            true
          ]
        }
      },
      "68": {
        "Address.functionCallWithValue": {
          "190": [
            5130,
            5160,
            true
          ]
        },
        "Address.verifyCallResult": {
          "191": [
            7720,
            7727,
            false
          ],
          "192": [
            7861,
            7882,
            false
          ]
        }
      },
      "70": {},
      "86": {},
      "89": {},
      "98": {},
      "99": {}
    },
    "statements": {
      "1": {
        "TokenisableRange.claimFee": {
          "23": [
            9244,
            9251
          ],
          "24": [
            9373,
            9413
          ],
          "25": [
            9436,
            9476
          ],
          "26": [
            9487,
            9514
          ],
          "27": [
            9524,
            9551
          ],
          "28": [
            9841,
            9899
          ],
          "29": [
            9913,
            9971
          ],
          "30": [
            11139,
            11324
          ],
          "31": [
            11338,
            11352
          ],
          "32": [
            11366,
            11380
          ],
          "33": [
            11394,
            11430
          ],
          "34": [
            11450,
            11482
          ]
        },
        "TokenisableRange.deposit": {
          "87": [
            11984,
            12023
          ],
          "88": [
            12034,
            12044
          ],
          "89": [
            12054,
            12110
          ],
          "90": [
            12120,
            12176
          ],
          "91": [
            13395,
            13440
          ],
          "92": [
            13499,
            13544
          ],
          "93": [
            13558,
            13573
          ],
          "94": [
            13587,
            13602
          ],
          "95": [
            13616,
            13629
          ],
          "96": [
            13643,
            13656
          ],
          "97": [
            13677,
            13733
          ],
          "98": [
            13743,
            13799
          ],
          "99": [
            14830,
            14945
          ],
          "100": [
            15186,
            15519
          ],
          "101": [
            15540,
            15607
          ],
          "102": [
            15617,
            15653
          ],
          "103": [
            15664,
            15688
          ],
          "104": [
            15698,
            15748
          ],
          "105": [
            15758,
            15808
          ],
          "106": [
            15818,
            15849
          ]
        },
        "TokenisableRange.getTokenAmounts": {
          "13": [
            21139,
            21206
          ],
          "14": [
            21216,
            21263
          ],
          "15": [
            21273,
            21320
          ]
        },
        "TokenisableRange.getTokenAmountsExcludingFees": {
          "63": [
            20578,
            20853
          ]
        },
        "TokenisableRange.getValuePerLPAtPrice": {
          "16": [
            19381,
            19389
          ],
          "17": [
            19684,
            19726
          ]
        },
        "TokenisableRange.init": {
          "50": [
            7355,
            7403
          ],
          "51": [
            7413,
            7461
          ],
          "52": [
            7471,
            7496
          ],
          "53": [
            7506,
            7566
          ],
          "54": [
            7576,
            7636
          ],
          "55": [
            7646,
            7702
          ],
          "56": [
            7712,
            7768
          ],
          "57": [
            7778,
            8348
          ],
          "58": [
            8409,
            8519
          ],
          "59": [
            8529,
            8639
          ],
          "60": [
            8649,
            8672
          ],
          "61": [
            8682,
            8712
          ]
        },
        "TokenisableRange.initProxy": {
          "64": [
            3385,
            3444
          ],
          "65": [
            3454,
            3508
          ],
          "66": [
            3518,
            3538
          ],
          "67": [
            3548,
            3575
          ],
          "68": [
            3585,
            3601
          ],
          "69": [
            3612,
            3633
          ],
          "70": [
            3643,
            3678
          ],
          "71": [
            3688,
            3709
          ],
          "72": [
            3719,
            3754
          ],
          "73": [
            4535,
            4546
          ],
          "74": [
            4589,
            4630
          ],
          "75": [
            4644,
            4771
          ],
          "76": [
            4785,
            4842
          ],
          "77": [
            4856,
            5167
          ],
          "78": [
            5181,
            5489
          ],
          "79": [
            5520,
            5531
          ],
          "80": [
            5545,
            5674
          ],
          "81": [
            5688,
            5817
          ],
          "82": [
            5831,
            6142
          ],
          "83": [
            6156,
            6464
          ],
          "84": [
            6484,
            6506
          ],
          "85": [
            6516,
            6538
          ],
          "86": [
            6548,
            6611
          ]
        },
        "TokenisableRange.latestAnswer": {
          "18": [
            19862,
            20037
          ]
        },
        "TokenisableRange.name": {
          "4": [
            6826,
            6838
          ]
        },
        "TokenisableRange.returnExpectedBalance": {
          "19": [
            18877,
            18986
          ],
          "20": [
            18996,
            19008
          ],
          "21": [
            19018,
            19030
          ]
        },
        "TokenisableRange.returnExpectedBalanceWithoutFees": {
          "118": [
            18007,
            18065
          ],
          "119": [
            18110,
            18168
          ],
          "120": [
            18179,
            18613
          ]
        },
        "TokenisableRange.sqrt": {
          "138": [
            2510,
            2515
          ],
          "139": [
            2553,
            2558
          ],
          "140": [
            2572,
            2591
          ]
        },
        "TokenisableRange.symbol": {
          "22": [
            6986,
            7000
          ]
        },
        "TokenisableRange.withdraw": {
          "35": [
            16260,
            16270
          ],
          "36": [
            16352,
            16702
          ],
          "37": [
            16712,
            16770
          ],
          "38": [
            16781,
            17044
          ],
          "39": [
            17118,
            17184
          ],
          "40": [
            17198,
            17237
          ],
          "41": [
            17251,
            17286
          ],
          "42": [
            17334,
            17400
          ],
          "43": [
            17414,
            17453
          ],
          "44": [
            17467,
            17502
          ],
          "45": [
            17522,
            17543
          ],
          "46": [
            17553,
            17582
          ]
        }
      },
      "2": {},
      "3": {
        "FullMath.mulDiv": {
          "147": [
            1569,
            1593
          ],
          "148": [
            1694,
            1707
          ],
          "149": [
            1823,
            1851
          ],
          "150": [
            3266,
            3287
          ],
          "151": [
            3871,
            3899
          ],
          "152": [
            3929,
            3957
          ],
          "153": [
            3988,
            4016
          ],
          "154": [
            4047,
            4075
          ],
          "155": [
            4106,
            4134
          ],
          "156": [
            4166,
            4194
          ],
          "157": [
            4632,
            4652
          ]
        }
      },
      "4": {
        "LiquidityAmounts.getAmount0ForLiquidity": {
          "142": [
            4061,
            4124
          ],
          "143": [
            4135,
            4340
          ]
        },
        "LiquidityAmounts.getAmount1ForLiquidity": {
          "144": [
            4851,
            4914
          ],
          "145": [
            4925,
            5081
          ]
        },
        "LiquidityAmounts.getAmountsForLiquidity": {
          "133": [
            5521,
            5584
          ],
          "134": [
            5643,
            5778
          ],
          "135": [
            5843,
            5977
          ],
          "136": [
            5991,
            6125
          ],
          "137": [
            6156,
            6291
          ]
        }
      },
      "42": {},
      "43": {
        "ERC20._approve": {
          "107": [
            10142,
            10210
          ],
          "108": [
            10220,
            10288
          ],
          "109": [
            10299,
            10335
          ],
          "110": [
            10345,
            10382
          ]
        },
        "ERC20._burn": {
          "123": [
            9095,
            9162
          ],
          "124": [
            9286,
            9357
          ],
          "125": [
            9391,
            9435
          ],
          "126": [
            9455,
            9477
          ],
          "127": [
            9488,
            9530
          ]
        },
        "ERC20._mint": {
          "129": [
            8386,
            8451
          ],
          "130": [
            8522,
            8544
          ],
          "131": [
            8554,
            8582
          ],
          "132": [
            8592,
            8634
          ]
        },
        "ERC20._transfer": {
          "111": [
            7449,
            7519
          ],
          "112": [
            7529,
            7600
          ],
          "113": [
            7720,
            7794
          ],
          "114": [
            7828,
            7870
          ],
          "115": [
            7890,
            7920
          ],
          "116": [
            7931,
            7971
          ],
          "117": [
            7982,
            8028
          ]
        },
        "ERC20.allowance": {
          "3": [
            4059,
            4093
          ]
        },
        "ERC20.approve": {
          "5": [
            4337,
            4376
          ],
          "7": [
            4386,
            4397
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3486,
            3511
          ]
        },
        "ERC20.decimals": {
          "1": [
            3153,
            3162
          ]
        },
        "ERC20.decreaseAllowance": {
          "47": [
            6623,
            6708
          ],
          "48": [
            6742,
            6809
          ],
          "49": [
            6830,
            6841
          ]
        },
        "ERC20.increaseAllowance": {
          "12": [
            5848,
            5928
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3309,
            3328
          ]
        },
        "ERC20.transfer": {
          "62": [
            3823,
            3865
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            5093,
            5172
          ],
          "9": [
            5206,
            5263
          ],
          "10": [
            5284,
            5320
          ],
          "11": [
            5331,
            5342
          ]
        }
      },
      "44": {},
      "5": {},
      "53": {},
      "58": {
        "SafeERC20._callOptionalReturn": {
          "141": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeIncreaseAllowance": {
          "122": [
            2228,
            2325
          ]
        },
        "SafeERC20.safeTransfer": {
          "121": [
            813,
            899
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "128": [
            1050,
            1146
          ]
        }
      },
      "68": {
        "Address.functionCall": {
          "146": [
            4003,
            4062
          ]
        },
        "Address.functionCallWithValue": {
          "158": [
            5122,
            5203
          ],
          "160": [
            5213,
            5273
          ],
          "161": [
            5367,
            5425
          ]
        },
        "Address.isContract": {
          "159": [
            1443,
            1473
          ]
        },
        "Address.verifyCallResult": {
          "162": [
            7743,
            7760
          ],
          "163": [
            8187,
            8207
          ]
        }
      },
      "70": {
        "Context._msgSender": {
          "6": [
            712,
            729
          ]
        }
      },
      "86": {},
      "89": {},
      "98": {},
      "99": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC20",
    "FixedPoint96",
    "FullMath",
    "IAaveOracle",
    "IERC20",
    "IERC20Metadata",
    "INonfungiblePositionManager",
    "IUniswapV3Factory",
    "IUniswapV3Pool",
    "LiquidityAmounts",
    "ReentrancyGuard",
    "SafeERC20",
    "TickMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102325760003560e01c80637040919411610130578063a5843f08116100b8578063d1f7e92b1161007c578063d1f7e92b1461054e578063d351887714610561578063dd62ed3e14610574578063e2bbb158146105ad578063e3526af4146105c057600080fd5b8063a5843f0814610502578063a9059cbb14610515578063bd865cba14610528578063c60982561461053d578063cc32d1761461054657600080fd5b806395d89b41116100ff57806395d89b41146104bd57806399d32fc4146104c55780639b1344ac146104cf578063a41fe49f146104dc578063a457c2d7146104ef57600080fd5b8063704091941461043057806370a0823114610443578063727dd2281461046c57806372f5d98a1461049357600080fd5b806338013f02116101be578063449247aa11610182578063449247aa146103d2578063470f6e1d146103e557806350d25bcd146103ee5780635ee04d78146103f657806361d027b31461041557600080fd5b806338013f021461033157806339509351146103445780633b4e06e614610357578063443ec74d1461037f57806344919d7b146103bf57600080fd5b806318160ddd1161020557806318160ddd146102c25780631a686502146102ca578063200d2ed2146102f557806323b872dd1461030f578063313ce5671461032257600080fd5b806306fdde031461023757806308bd1a8514610255578063095ea7b31461028857806317d70f7c146102ab575b600080fd5b61023f6105c9565b60405161024c91906138e6565b60405180910390f35b610270731f98431c8ad98523631ae4a59f267346ea31f98481565b6040516001600160a01b03909116815260200161024c565b61029b610296366004613931565b61065b565b604051901515815260200161024c565b6102b460075481565b60405190815260200161024c565b6002546102b4565b6010546102dd906001600160801b031681565b6040516001600160801b03909116815260200161024c565b600f546103029060ff1681565b60405161024c9190613973565b61029b61031d36600461399b565b610672565b6040516012815260200161024c565b600c54610270906001600160a01b031681565b61029b610352366004613931565b610721565b61036a6103653660046139dc565b61075d565b6040805192835260208301919091520161024c565b600a5461039e906001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b03909316835260ff90911660208301520161024c565b6102b46103cd3660046139f5565b6107c7565b601154610270906001600160a01b031681565b6102b460125481565b6102b461088a565b600b5461039e906001600160a01b03811690600160a01b900460ff1682565b6102707322cc3f665ba4c898226353b672c5123c5875169281565b61036a61043e3660046139f5565b610975565b6102b4610451366004613a17565b6001600160a01b031660009081526020819052604090205490565b600654610480906301000000900460020b81565b60405160029190910b815260200161024c565b6006546104a990600160301b900462ffffff1681565b60405162ffffff909116815260200161024c565b61023f6109ad565b6104cd6109bc565b005b6006546104809060020b81565b61036a6104ea366004613a34565b610fa7565b61029b6104fd366004613931565b611359565b6104cd6105103660046139f5565b6113f2565b61029b610523366004613931565b6117a9565b61027060008051602061454583398151915281565b6102b460095481565b6102b4601481565b61036a61055c3660046139dc565b6117b6565b6104cd61056f366004613b58565b611a29565b6102b4610582366004613c2a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102b46105bb3660046139f5565b6121cf565b6102b460085481565b6060600d80546105d890613c63565b80601f016020809104026020016040519081016040528092919081815260200182805461060490613c63565b80156106515780601f1061062657610100808354040283529160200191610651565b820191906000526020600020905b81548152906001019060200180831161063457829003601f168201915b5050505050905090565b6000610668338484612b2c565b5060015b92915050565b6001600160a01b0383166000908152600160209081526040808320338452909152812054828110156106fc5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6107098533858403612b2c565b610714858585612c50565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610668918590610758908690613cad565b612b2c565b600080610769836117b6565b60025491935091508360085461077f9190613cc0565b6107899190613ced565b6107939083613cad565b915061079e60025490565b836009546107ac9190613cc0565b6107b69190613ced565b6107c09082613cad565b9050915091565b60006107d260025490565b6000036107e15750600061066c565b6000806107ee8585610975565b600b54919350915060009061080e90600160a01b900460ff16600a613de5565b6108188684613cc0565b6108229190613ced565b600a805461083b91600160a01b90910460ff1690613de5565b6108458589613cc0565b61084f9190613ced565b6108599190613cad565b905061086460025490565b61087682670de0b6b3a7640000613cc0565b6108809190613ced565b9695505050505050565b600c54600a5460405163b3596f0760e01b81526001600160a01b03918216600482015260009261097092169063b3596f0790602401602060405180830381865afa1580156108dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109009190613df4565b600c54600b5460405163b3596f0760e01b81526001600160a01b03918216600482015291169063b3596f0790602401602060405180830381865afa15801561094c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cd9190613df4565b905090565b6000806109828484612e20565b60085491935091506109949083613cad565b9150600954816109a49190613cad565b90509250929050565b6060600e80546105d890613c63565b6040805160808101825260075481523060208201526001600160801b038183018190526060820152905163fc6f786560e01b815260009182916000805160206145458339815191529163fc6f786591610a189190600401613e0d565b60408051808303816000875af1158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190613e50565b91509150816000148015610a6c575080155b15610a75575050565b60006064610a84601485613cc0565b610a8e9190613ced565b905060006064610a9f601485613cc0565b610aa99190613ced565b90508115610adc57600a54610adc906001600160a01b03167322cc3f665ba4c898226353b672c5123c5875169284612fc4565b8015610b0d57600b54610b0d906001600160a01b03167322cc3f665ba4c898226353b672c5123c5875169283612fc4565b8184600854610b1c9190613cad565b610b269190613e74565b6008556009548190610b39908590613cad565b610b439190613e74565b600955600080610b538180612e20565b91509150816008546064610b679190613cc0565b118015610b815750806009546064610b7f9190613cc0565b115b15610f6657600854600a54610bb1916001600160a01b03909116906000805160206145458339815191529061302c565b600954600b54610bdc916001600160a01b03909116906000805160206145458339815191529061302c565b6040805160c0810182526007548152600854602082015260095481830152600060608201819052608082018190524260a0830152915163219f5d1760e01b8152829182916000805160206145458339815191529163219f5d1791610c439190600401613e87565b6060604051808303816000875af1158015610c62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c869190613ecb565b600c54600a5460405163b3596f0760e01b81526001600160a01b03918216600482015294975092955090935060009291169063b3596f0790602401602060405180830381865afa158015610cde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d029190613df4565b600c54600b5460405163b3596f0760e01b81526001600160a01b03918216600482015292935060009291169063b3596f0790602401602060405180830381865afa158015610d54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d789190613df4565b600b54909150600090610d9690600160a01b900460ff16600a613de5565b610da08386613cc0565b610daa9190613ced565b600a8054610dc391600160a01b90910460ff1690613de5565b610dcd8588613cc0565b610dd79190613ced565b610de19190613cad565b600b54909150600090610dff90600160a01b900460ff16600a613de5565b610e09848a613cc0565b610e139190613ced565b600a8054610e2c91600160a01b90910460ff1690613de5565b610e36868c613cc0565b610e409190613ced565b610e4a9190613cad565b6010549091506000906001600160801b0390811690610e6b908a1684613cc0565b610e759190613ced565b90506064610e8482605f613cc0565b610e8e9190613ced565b83118015610eb157506064610ea484605f613cc0565b610eae9190613ced565b81115b610ef65760405162461bcd60e51b815260206004820152601660248201527554523a20436c61696d2046656520536c69707061676560501b60448201526064016106f3565b8660086000828254610f089190613e74565b925050819055508560096000828254610f219190613e74565b9091555050601054610f3d9089906001600160801b0316613f02565b601080546001600160801b0319166001600160801b039290921691909117905550505050505050505b60408051878152602081018790527fcbf6196d7bebcbaaf53f321eecb5b4f39479879f3996f828f10012708a9442d7910160405180910390a1505050505050565b600080600260055403610ffc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106f3565b60026005556110096109bc565b600061101460025490565b60105461102b9088906001600160801b0316613cc0565b6110359190613ced565b6040805160a08101825260075481526001600160801b03838116602083019081528284018a8152606084018a815242608086019081529551630624e65f60e11b81529451600486015291519092166024840152905160448301525160648201529051608482015290915060008051602061454583398151915290630c49ccbe9060a40160408051808303816000875af11580156110d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fa9190613e50565b60105491945092506111169082906001600160801b0316613e74565b601080546001600160801b0319166001600160801b039283161790556040805160808101825260075481523360208201528583168183015291841660608301525163fc6f786560e01b81526000805160206145458339815191529163fc6f7865916111849190600401613e0d565b60408051808303816000875af11580156111a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c69190613e50565b50506008541561126757611208336111dd60025490565b886008546111eb9190613cc0565b6111f59190613ced565b600a546001600160a01b03169190612fc4565b600254866008546112199190613cc0565b6112239190613ced565b61122d9084613cad565b925061123860025490565b866008546112469190613cc0565b6112509190613ced565b600860008282546112619190613e74565b90915550505b60095415611306576112a73361127c60025490565b8860095461128a9190613cc0565b6112949190613ced565b600b546001600160a01b03169190612fc4565b600254866009546112b89190613cc0565b6112c29190613ced565b6112cc9083613cad565b91506112d760025490565b866009546112e59190613cc0565b6112ef9190613ced565b600960008282546113009190613e74565b90915550505b61131033876130de565b60408051338152602081018890527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a15060016005559094909350915050565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156113db5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106f3565b6113e83385858403612b2c565b5060019392505050565b6001600f5460ff16600281111561140b5761140b61395d565b146114425760405162461bcd60e51b8152602060048201526007602482015266021496e69744c560cc1b60448201526064016106f3565b600f5461010090046001600160a01b031633146114925760405162461bcd60e51b815260206004820152600e60248201526d155b985b1b1bddd9590818d85b1b60921b60448201526064016106f3565b600f805460ff19166002179055600a546114b7906001600160a01b031633308561322c565b600b546114cf906001600160a01b031633308461322c565b600a546114f4906001600160a01b03166000805160206145458339815191528461302c565b600b54611519906001600160a01b03166000805160206145458339815191528361302c565b6040805161016081018252600a546001600160a01b039081168252600b5416602082015260065460008051602061454583398151915292638831645692919082019061157290600160301b900462ffffff166064613f29565b62ffffff168152600654600281810b60208401526301000000909104900b6040820152606081018690526080810185905260a00160646115b387605f613cc0565b6115bd9190613ced565b815260200160646115cf86605f613cc0565b6115d99190613ced565b815230602082015242604091820152516001600160e01b031960e084901b1681526116079190600401613f50565b6080604051808303816000875af1158015611626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164a9190614014565b5050601080546001600160801b0319166001600160801b0392909216919091179055600755600a546040516370a0823160e01b81523060048201526116e19133916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156116bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f59190613df4565b600b546040516370a0823160e01b81523060048201526117539133916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561172f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112949190613df4565b61176533670de0b6b3a7640000613264565b60408051338152670de0b6b3a764000060208201527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c910160405180910390a15050565b6000610668338484612c50565b600a54600b5460065460009283928392731f98431c8ad98523631ae4a59f267346ea31f98492631698ee82926001600160a01b039182169291169061180890600160301b900462ffffff166064613f29565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa15801561185f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118839190614052565b90506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156118c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e991906140a4565b505060065460405163986cfba360e01b815260029190910b6004820152949550611a1d9486945073__$09c5a29259139f1547af36d068cffd1c2f$__935063986cfba392506024019050602060405180830381865af4158015611950573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119749190614052565b60065460405163986cfba360e01b8152630100000090910460020b600482015273__$09c5a29259139f1547af36d068cffd1c2f$__9063986cfba390602401602060405180830381865af41580156119d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f49190614052565b600254601054611a0e908b906001600160801b0316613cc0565b611a189190613ced565b613343565b90969095509350505050565b6001600160a01b038816611a705760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964206f7261636c6560901b60448201526064016106f3565b6000600f5460ff166002811115611a8957611a8961395d565b14611ac35760405162461bcd60e51b815260206004820152600a60248201526921496e697450726f787960b01b60448201526064016106f3565b600f805460016001600160a81b0319909116336101000260ff191617179055600c80546001600160a01b038a81166001600160a01b031992831617909255600a8054928a1692909116821790556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015611b4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6f9190614130565b600a805460ff92909216600160a01b0260ff60a01b19909216919091179055600b80546001600160a01b0388166001600160a01b031990911681179091556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015611be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0c9190614130565b600b60000160146101000a81548160ff021916908360ff1602179055506000876001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611c69573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c91919081019061414b565b90506000876001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611cd3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611cfb919081019061414b565b9050600073__$09c5a29259139f1547af36d068cffd1c2f$__634f76c058611d92600a60000160149054906101000a900460ff16600a611d3b9190613de5565b611d4e906001600160801b038d16613cc0565b600b54611d6690600160a01b900460ff16600a613de5565b611d7490600160601b613cc0565b611d83906402540be400613cc0565b611d8d9190613ced565b6133e0565b611da090600160301b613cc0565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865af4158015611de4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0891906141c2565b9050600073__$09c5a29259139f1547af36d068cffd1c2f$__634f76c058611e48600a60000160149054906101000a900460ff16600a611d3b9190613de5565b611e5690600160301b613cc0565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865af4158015611e9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ebe91906141c2565b90508415611ff4576006805468ffffff0000000000001916660500000000000017905560006002611eef83856141dd565b611ef99190614202565b600654909150611f1690600160301b900462ffffff166002613f29565b600654611f2f90600160301b900462ffffff16836141dd565b611f39919061423c565b600654611f5290600160301b900462ffffff16836141dd565b611f5c919061425e565b600654909350600160301b900462ffffff16611f78818561425e565b611f82919061425e565b915083858989604051602001611f9b9493929190614283565b604051602081830303815290604052600d9081611fb89190614361565b5087878587604051602001611fd09493929190614421565b604051602081830303815290604052600e9081611fed9190614361565b505061213f565b6006805468ffffff0000000000001916660500000000000017908190556120299062ffffff600160301b909104166002613f29565b60065461204290600160301b900462ffffff16836141dd565b61204c919061423c565b60065461206590600160301b900462ffffff16836141dd565b61206f919061425e565b60065490915061208c90600160301b900462ffffff166002613f29565b6006546120a590600160301b900462ffffff16846141dd565b6120af919061423c565b6006546120c890600160301b900462ffffff16846141dd565b6120d2919061425e565b9150828488886040516020016120eb94939291906144ac565b604051602081830303815290604052600d90816121089190614361565b508686848660405160200161212094939291906144ce565b604051602081830303815290604052600e908161213d9190614361565b505b6006805462ffffff84811663010000000265ffffffffffff1990921690841617179055604080516001600160a01b038d811682528c1660208201526001600160801b038b81169282019290925290891660608201527feb71465d71f7b18c376ba29f6edb7953dc29c7afb4fcaa4e1335c8827a8dd96e9060800160405180910390a1505050505050505050505050565b60006002600554036122235760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106f3565b6002600555600061223360025490565b1161226c5760405162461bcd60e51b815260206004820152600960248201526815148810db1bdcd95960ba1b60448201526064016106f3565b6122746109bc565b600a546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156122cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ef91906144eb565b50600b546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015612347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236b91906144eb565b5060008060006009546008546123819190613cad565b118015612398575060008511806123985750600854155b80156123ae575060008411806123ae5750600954155b156126d057600a54600b54600654600092731f98431c8ad98523631ae4a59f267346ea31f98492631698ee82926001600160a01b03928316929091169061240290600160301b900462ffffff166064613f29565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa158015612459573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061247d9190614052565b90506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156124bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e391906140a4565b505060065460405163986cfba360e01b815260029190910b6004820152949550600094859450612604935086925073__$09c5a29259139f1547af36d068cffd1c2f$__915063986cfba3906024015b602060405180830381865af415801561254f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125739190614052565b60065460405163986cfba360e01b8152630100000090910460020b600482015273__$09c5a29259139f1547af36d068cffd1c2f$__9063986cfba390602401602060405180830381865af41580156125cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f39190614052565b6010546001600160801b0316613343565b915091506000600854836126189190613cad565b11156126455760085461262b9083613cad565b600854612638908b613cc0565b6126429190613ced565b95505b6000600954826126559190613cad565b1115612682576009546126689082613cad565b600954612675908a613cc0565b61267f9190613ced565b94505b85600860008282546126949190613cad565b9250508190555084600960008282546126ad9190613cad565b909155506126bd9050868a613e74565b98506126c98589613e74565b9750505050505b600a546126f5906001600160a01b03166000805160206145458339815191528761302c565b600b5461271a906001600160a01b03166000805160206145458339815191528661302c565b60008060006000805160206145458339815191526001600160a01b031663219f5d176040518060c0016040528060075481526020018b81526020018a815260200160648c605f61276a9190613cc0565b6127749190613ced565b815260200160646127868c605f613cc0565b6127909190613ced565b8152602001428152506040518263ffffffff1660e01b81526004016127b59190613e87565b6060604051808303816000875af11580156127d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127f89190613ecb565b925092509250600085600014801561280e575084155b15612a4357600c54600a5460405163b3596f0760e01b81526001600160a01b039182166004820152600092919091169063b3596f0790602401602060405180830381865afa158015612864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128889190613df4565b600c54600b5460405163b3596f0760e01b81526001600160a01b03918216600482015292935060009291169063b3596f0790602401602060405180830381865afa1580156128da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128fe9190613df4565b90506000821180156129105750600081115b6129535760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964204f7261636c6520507269636560601b60448201526064016106f3565b600b5461296b90600160a01b900460ff16600a613de5565b6129758286613cc0565b61297f9190613ced565b600a805461299891600160a01b90910460ff1690613de5565b6129a28488613cc0565b6129ac9190613ced565b6129b69190613cad565b600b546129ce90600160a01b900460ff16600a613de5565b826009546129dc9190613cc0565b6129e69190613ced565b600a80546129ff91600160a01b90910460ff1690613de5565b84600854612a0d9190613cc0565b612a179190613ced565b612a219190613cad565b612a34906001600160801b038916613cc0565b612a3e9190613ced565b925050505b601054612a5a9082906001600160801b0316613cad565b846001600160801b0316612a6d60025490565b612a779190613cc0565b612a819190613ced565b601054909750612a9b9085906001600160801b0316613f02565b601080546001600160801b0319166001600160801b0392909216919091179055612ac53388613264565b612ad3336111f5858c613e74565b612ae133611294848b613e74565b60408051338152602081018990527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c910160405180910390a150506001600555509295945050505050565b6001600160a01b038316612b8e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106f3565b6001600160a01b038216612bef5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106f3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316612cb45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106f3565b6001600160a01b038216612d165760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106f3565b6001600160a01b03831660009081526020819052604090205481811015612d8e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106f3565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290612dc5908490613cad565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051612e1191815260200190565b60405180910390a35b50505050565b60008083600003612e9e57600c54600a5460405163b3596f0760e01b81526001600160a01b03918216600482015291169063b3596f0790602401602060405180830381865afa158015612e77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e9b9190613df4565b93505b82600003612f1957600c54600b5460405163b3596f0760e01b81526001600160a01b03918216600482015291169063b3596f0790602401602060405180830381865afa158015612ef2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f169190613df4565b92505b612fb9612f7a600a60000160149054906101000a900460ff16600a612f3e9190613de5565b600b548690612f5890600160a01b900460ff16600a613de5565b612f629089613cc0565b612f6c9190613ced565b611d8390600160c01b613cc0565b60065460405163986cfba360e01b815260029190910b600482015273__$09c5a29259139f1547af36d068cffd1c2f$__9063986cfba390602401612532565b909590945092505050565b6040516001600160a01b03831660248201526044810182905261302790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613439565b505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561307d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130a19190613df4565b6130ab9190613cad565b6040516001600160a01b038516602482015260448101829052909150612e1a90859063095ea7b360e01b90606401612ff0565b6001600160a01b03821661313e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106f3565b6001600160a01b038216600090815260208190526040902054818110156131b25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106f3565b6001600160a01b03831660009081526020819052604081208383039055600280548492906131e1908490613e74565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b0380851660248301528316604482015260648101829052612e1a9085906323b872dd60e01b90608401612ff0565b6001600160a01b0382166132ba5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106f3565b80600260008282546132cc9190613cad565b90915550506001600160a01b038216600090815260208190526040812080548392906132f9908490613cad565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600080836001600160a01b0316856001600160a01b03161115613364579293925b846001600160a01b0316866001600160a01b031610156133905761338985858561350b565b91506133d7565b836001600160a01b0316866001600160a01b031610156133c9576133b586858561350b565b91506133c2858785613586565b90506133d7565b6133d4858585613586565b90505b94509492505050565b60008060026133f0846001613cad565b6133fa9190613ced565b90508291505b81811015613433579050806002816134188186613ced565b6134229190613cad565b61342c9190613ced565b9050613400565b50919050565b600061348e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166135d09092919063ffffffff16565b80519091501561302757808060200190518101906134ac91906144eb565b6130275760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106f3565b6000826001600160a01b0316846001600160a01b0316111561352b579192915b6001600160a01b0384166135746fffffffffffffffffffffffffffffffff60601b606085901b1661355c8787614508565b6001600160a01b0316866001600160a01b03166135df565b61357e9190613ced565b949350505050565b6000826001600160a01b0316846001600160a01b031611156135a6579192915b61357e6001600160801b0383166135bd8686614508565b6001600160a01b0316600160601b6135df565b606061357e8484600085613758565b6000808060001985870985870292508281108382030391505080600003613618576000841161360d57600080fd5b50829004905061071a565b80841161362457600080fd5b600084868809808403938111909203919050600061364486196001613cad565b86169586900495938490049360008190030460010190506136658184613cc0565b909317926000613676876003613cc0565b60021890506136858188613cc0565b613690906002613e74565b61369a9082613cc0565b90506136a68188613cc0565b6136b1906002613e74565b6136bb9082613cc0565b90506136c78188613cc0565b6136d2906002613e74565b6136dc9082613cc0565b90506136e88188613cc0565b6136f3906002613e74565b6136fd9082613cc0565b90506137098188613cc0565b613714906002613e74565b61371e9082613cc0565b905061372a8188613cc0565b613735906002613e74565b61373f9082613cc0565b905061374b8186613cc0565b9998505050505050505050565b6060824710156137b95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106f3565b6001600160a01b0385163b6138105760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106f3565b600080866001600160a01b0316858760405161382c9190614528565b60006040518083038185875af1925050503d8060008114613869576040519150601f19603f3d011682016040523d82523d6000602084013e61386e565b606091505b509150915061387e828286613889565b979650505050505050565b6060831561389857508161071a565b8251156138a85782518084602001fd5b8160405162461bcd60e51b81526004016106f391906138e6565b60005b838110156138dd5781810151838201526020016138c5565b50506000910152565b60208152600082518060208401526139058160408501602087016138c2565b601f01601f19169190910160400192915050565b6001600160a01b038116811461392e57600080fd5b50565b6000806040838503121561394457600080fd5b823561394f81613919565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061399557634e487b7160e01b600052602160045260246000fd5b91905290565b6000806000606084860312156139b057600080fd5b83356139bb81613919565b925060208401356139cb81613919565b929592945050506040919091013590565b6000602082840312156139ee57600080fd5b5035919050565b60008060408385031215613a0857600080fd5b50508035926020909101359150565b600060208284031215613a2957600080fd5b813561071a81613919565b600080600060608486031215613a4957600080fd5b505081359360208301359350604090920135919050565b6001600160801b038116811461392e57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715613ab457613ab4613a75565b604052919050565b600067ffffffffffffffff821115613ad657613ad6613a75565b50601f01601f191660200190565b600082601f830112613af557600080fd5b8135613b08613b0382613abc565b613a8b565b818152846020838601011115613b1d57600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461392e57600080fd5b8035613b5381613b3a565b919050565b600080600080600080600080610100898b031215613b7557600080fd5b8835613b8081613919565b97506020890135613b9081613919565b96506040890135613ba081613919565b95506060890135613bb081613a60565b94506080890135613bc081613a60565b935060a089013567ffffffffffffffff80821115613bdd57600080fd5b613be98c838d01613ae4565b945060c08b0135915080821115613bff57600080fd5b50613c0c8b828c01613ae4565b925050613c1b60e08a01613b48565b90509295985092959890939650565b60008060408385031215613c3d57600080fd5b8235613c4881613919565b91506020830135613c5881613919565b809150509250929050565b600181811c90821680613c7757607f821691505b60208210810361343357634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561066c5761066c613c97565b808202811582820484141761066c5761066c613c97565b634e487b7160e01b600052601260045260246000fd5b600082613cfc57613cfc613cd7565b500490565b600181815b80851115613d3c578160001904821115613d2257613d22613c97565b80851615613d2f57918102915b93841c9390800290613d06565b509250929050565b600082613d535750600161066c565b81613d605750600061066c565b8160018114613d765760028114613d8057613d9c565b600191505061066c565b60ff841115613d9157613d91613c97565b50506001821b61066c565b5060208310610133831016604e8410600b8410161715613dbf575081810a61066c565b613dc98383613d01565b8060001904821115613ddd57613ddd613c97565b029392505050565b600061071a60ff841683613d44565b600060208284031215613e0657600080fd5b5051919050565b815181526020808301516001600160a01b0316908201526040808301516001600160801b0390811691830191909152606092830151169181019190915260800190565b60008060408385031215613e6357600080fd5b505080516020909101519092909150565b8181038181111561066c5761066c613c97565b600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b600080600060608486031215613ee057600080fd5b8351613eeb81613a60565b602085015160409095015190969495509392505050565b6001600160801b03818116838216019080821115613f2257613f22613c97565b5092915050565b62ffffff818116838216028082169190828114613f4857613f48613c97565b505092915050565b81516001600160a01b0316815261016081016020830151613f7c60208401826001600160a01b03169052565b506040830151613f93604084018262ffffff169052565b506060830151613fa8606084018260020b9052565b506080830151613fbd608084018260020b9052565b5060a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151614003828501826001600160a01b03169052565b505061014092830151919092015290565b6000806000806080858703121561402a57600080fd5b84519350602085015161403c81613a60565b6040860151606090960151949790965092505050565b60006020828403121561406457600080fd5b815161071a81613919565b8051600281900b8114613b5357600080fd5b805161ffff81168114613b5357600080fd5b805160ff81168114613b5357600080fd5b600080600080600080600060e0888a0312156140bf57600080fd5b87516140ca81613919565b96506140d86020890161406f565b95506140e660408901614081565b94506140f460608901614081565b935061410260808901614081565b925061411060a08901614093565b915060c088015161412081613b3a565b8091505092959891949750929550565b60006020828403121561414257600080fd5b61071a82614093565b60006020828403121561415d57600080fd5b815167ffffffffffffffff81111561417457600080fd5b8201601f8101841361418557600080fd5b8051614193613b0382613abc565b8181528560208385010111156141a857600080fd5b6141b98260208301602086016138c2565b95945050505050565b6000602082840312156141d457600080fd5b61071a8261406f565b600281810b9083900b01627fffff8113627fffff198212171561066c5761066c613c97565b60008160020b8360020b8061421957614219613cd7565b627fffff1982146000198214161561423357614233613c97565b90059392505050565b60008260020b8061424f5761424f613cd7565b808360020b0791505092915050565b600282810b9082900b03627fffff198112627fffff8213171561066c5761066c613c97565b6602a34b1b5b2b9160cd1b8152600085516142a5816007850160208a016138c2565b8083019050600160fd1b80600783015286516142c8816008850160208b016138c2565b600892019182015284516142e38160098401602089016138c2565b602d60f81b60099290910191820152835161430581600a8401602088016138c2565b01600a019695505050505050565b601f82111561302757600081815260208120601f850160051c8101602086101561433a5750805b601f850160051c820191505b8181101561435957828155600101614346565b505050505050565b815167ffffffffffffffff81111561437b5761437b613a75565b61438f816143898454613c63565b84614313565b602080601f8311600181146143c457600084156143ac5750858301515b600019600386901b1c1916600185901b178555614359565b600085815260208120601f198616915b828110156143f3578886015182559484019460019091019084016143d4565b50858210156144115787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61542d60f01b81526000855161443e816002850160208a016138c2565b605f60f81b600291840191820152855161445f816003840160208a016138c2565b808201915050602d60f81b8060038301528551614483816004850160208a016138c2565b6004920191820152835161449e8160058401602088016138c2565b016005019695505050505050565b6602930b733b2b9160cd1b8152600085516142a5816007850160208a016138c2565b61522d60f01b81526000855161443e816002850160208a016138c2565b6000602082840312156144fd57600080fd5b815161071a81613b3a565b6001600160a01b03828116828216039080821115613f2257613f22613c97565b6000825161453a8184602087016138c2565b919091019291505056fe000000000000000000000000c36442b4a4522e871399cd717abdd847ab11fe88a2646970667358221220afd0984448d19f5484d4a62ca09b51957e4858d8fb22109859465bebd27a6c8b64736f6c63430008150033",
  "deployedSourceMap": "677:20652:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6747:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2055:116;;2128:42;2055:116;;;;;-1:-1:-1;;;;;861:32:102;;;843:51;;831:2;816:18;2055:116:1;670:230:102;4238:166:43;;;;;;:::i;:::-;;:::i;:::-;;;1526:14:102;;1519:22;1501:41;;1489:2;1474:18;4238:166:43;1361:187:102;1159:22:1;;;;;;;;;1699:25:102;;;1687:2;1672:18;1159:22:1;1553:177:102;3229:106:43;3316:12;;3229:106;;1569:24:1;;;;;-1:-1:-1;;;;;1569:24:1;;;;;;-1:-1:-1;;;;;1899:47:102;;;1881:66;;1869:2;1854:18;1569:24:1;1735:218:102;1509:24:1;;;;;;;;;;;;;;;;:::i;4871:478:43:-;;;;;;:::i;:::-;;:::i;3078:91::-;;;3160:2;3041:36:102;;3029:2;3014:18;3078:91:43;2899:184:102;1359:25:1;;;;;-1:-1:-1;;;;;1359:25:1;;;5744:212:43;;;;;;:::i;:::-;;:::i;21016:311:1:-;;;;;;:::i;:::-;;:::i;:::-;;;;3675:25:102;;;3731:2;3716:18;;3709:34;;;;3648:18;21016:311:1;3501:248:102;1309:19:1;;;;;-1:-1:-1;;;;;1309:19:1;;;-1:-1:-1;;;1309:19:1;;;;;;;;;;-1:-1:-1;;;;;3956:32:102;;;3938:51;;4037:4;4025:17;;;4020:2;4005:18;;3998:45;3911:18;1309:19:1;3754:295:102;19217:516:1;;;;;;:::i;:::-;;:::i;1679:87::-;;;;;-1:-1:-1;;;;;1679:87:1;;;1772:39;;;;;;19788:256;;;:::i;1334:19::-;;;;;-1:-1:-1;;;;;1334:19:1;;;-1:-1:-1;;;1334:19:1;;;;;;2177:85;;2220:42;2177:85;;18727:310;;;;;;:::i;:::-;;:::i;3393:125:43:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3493:18:43;3467:7;3493:18;;;;;;;;;;;;3393:125;1103:22:1;;;;;;;;;;;;;;;5143:1:102;5132:21;;;;5114:40;;5102:2;5087:18;1103:22:1;4972:188:102;1131:21:1;;;;;-1:-1:-1;;;1131:21:1;;;;;;;;;5436:8:102;5424:21;;;5406:40;;5394:2;5379:18;1131:21:1;5262:190:102;6905:102:1;;;:::i;8787:2702::-;;;:::i;:::-;;1075:22;;;;;;;;;16083:1506;;;;;;:::i;:::-;;:::i;6443:405:43:-;;;;;;:::i;:::-;;:::i;7304:1415:1:-;;;;;;:::i;:::-;;:::i;3721:172:43:-;;;;;;:::i;:::-;;:::i;1916:133:1:-;;-1:-1:-1;;;;;;;;;;;1916:133:1;;1212:19;;;;;;2268:37;;2303:2;2268:37;;20219:641;;;;;;:::i;:::-;;:::i;3131:3487::-;;;;;;:::i;:::-;;:::i;3951:149:43:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4066:18:43;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149;11670:4186:1;;;;;;:::i;:::-;;:::i;1187:19::-;;;;;;6747:98;6801:13;6833:5;6826:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6747:98;:::o;4238:166:43:-;4321:4;4337:39;719:10:70;4360:7:43;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:43;4238:166;;;;;:::o;4871:478::-;-1:-1:-1;;;;;5050:19:43;;5007:4;5050:19;;;:11;:19;;;;;;;;719:10:70;5050:33:43;;;;;;;;5101:26;;;;5093:79;;;;-1:-1:-1;;;5093:79:43;;9851:2:102;5093:79:43;;;9833:21:102;9890:2;9870:18;;;9863:30;9929:34;9909:18;;;9902:62;-1:-1:-1;;;9980:18:102;;;9973:38;10028:19;;5093:79:43;;;;;;;;;5206:57;5215:6;719:10:70;5256:6:43;5237:16;:25;5206:8;:57::i;:::-;5284:36;5294:6;5302:9;5313:6;5284:9;:36::i;:::-;5338:4;5331:11;;;4871:478;;;;;;:::o;5744:212::-;719:10:70;5832:4:43;5880:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5880:34:43;;;;;;;;;;5832:4;;5848:80;;5871:7;;5880:47;;5917:10;;5880:47;:::i;:::-;5848:8;:80::i;21016:311:1:-;21091:17;21110;21170:36;21199:6;21170:28;:36::i;:::-;3316:12:43;;21139:67:1;;-1:-1:-1;21139:67:1;-1:-1:-1;21240:6:1;21233:4;;:13;;;;:::i;:::-;21232:31;;;;:::i;:::-;21216:47;;;;:::i;:::-;;;21307:13;3316:12:43;;;3229:106;21307:13:1;21297:6;21290:4;;:13;;;;:::i;:::-;21289:31;;;;:::i;:::-;21273:47;;;;:::i;:::-;;;21016:311;;;:::o;19217:516::-;19328:17;19361:13;3316:12:43;;;3229:106;19361:13:1;19378:1;19361:18;19357:32;;-1:-1:-1;19388:1:1;19381:8;;19357:32;19400:12;19414;19430:83;19465:12;19491;19430:21;:83::i;:::-;19658:6;:15;19399:114;;-1:-1:-1;19399:114:1;-1:-1:-1;19523:15:1;;19652:21;;-1:-1:-1;;;19658:15:1;;;;19652:2;:21;:::i;:::-;19616:19;19623:12;19616:4;:19;:::i;:::-;19615:59;;;;:::i;:::-;19584:6;:15;;19578:21;;-1:-1:-1;;;19584:15:1;;;;;;19578:21;:::i;:::-;19542:19;19557:4;19542:12;:19;:::i;:::-;19541:59;;;;:::i;:::-;:133;;;;:::i;:::-;19523:151;;19713:13;3316:12:43;;;3229:106;19713:13:1;19692:17;:10;19705:4;19692:17;:::i;:::-;19691:35;;;;:::i;:::-;19684:42;19217:516;-1:-1:-1;;;;;;19217:516:1:o;19788:256::-;19919:6;;19948;:12;19919:43;;-1:-1:-1;;;19919:43:1;;-1:-1:-1;;;;;19948:12:1;;;19919:43;;;843:51:102;19833:17:1;;19881:156;;19919:6;;:20;;816:18:102;;19919:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19980:6;;20009;:12;19980:43;;-1:-1:-1;;;19980:43:1;;-1:-1:-1;;;;;20009:12:1;;;19980:43;;;843:51:102;19980:6:1;;;:20;;816:18:102;;19980:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;19881:156::-;19862:175;;19788:256;:::o;18727:310::-;18839:12;18853;18892:94;18938:12;18964;18892:32;:94::i;:::-;19004:4;;18877:109;;-1:-1:-1;18877:109:1;-1:-1:-1;18996:12:1;;18877:109;18996:12;:::i;:::-;;;19026:4;;19018:12;;;;;:::i;:::-;;;18727:310;;;;;:::o;6905:102::-;6961:13;6993:7;6986:14;;;;;:::i;8787:2702::-;8890:227;;;;;;;;8959:7;;8890:227;;9003:4;8890:227;;;;-1:-1:-1;;;;;8890:227:1;;;;;;;;;;8861:266;;-1:-1:-1;;;8861:266:1;;8825:15;;;;-1:-1:-1;;;;;;;;;;;2006:42:1;8861:15;;:266;;8890:227;8861:266;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8824:303;;;;9211:7;9222:1;9211:12;9210:32;;;;-1:-1:-1;9229:12:1;;9210:32;9206:45;;;9244:7;;8787:2702::o;9206:45::-;9260:8;9297:3;9272:21;2303:2;9272:7;:21;:::i;:::-;9271:29;;;;:::i;:::-;9260:40;-1:-1:-1;9310:8:1;9347:3;9322:21;2303:2;9322:7;:21;:::i;:::-;9321:29;;;;:::i;:::-;9310:40;-1:-1:-1;9364:7:1;;9360:53;;9373:6;:12;:40;;-1:-1:-1;;;;;9373:12:1;2220:42;9409:3;9373:25;:40::i;:::-;9427:7;;9423:53;;9436:6;:12;:40;;-1:-1:-1;;;;;9436:12:1;2220:42;9472:3;9436:25;:40::i;:::-;9511:3;9501:7;9494:4;;:14;;;;:::i;:::-;:20;;;;:::i;:::-;9487:4;:27;9531:4;;9548:3;;9531:14;;9538:7;;9531:14;:::i;:::-;:20;;;;:::i;:::-;9524:4;:27;9602:12;;9632:38;9602:12;;9632:32;:38::i;:::-;9601:69;;;;9797:4;9784;;9791:3;9784:10;;;;:::i;:::-;:17;9783:42;;;;;9820:4;9807;;9814:3;9807:10;;;;:::i;:::-;:17;9783:42;9779:1662;;;9894:4;;9841:6;:12;:58;;-1:-1:-1;;;;;9841:12:1;;;;-1:-1:-1;;;;;;;;;;;2006:42:1;9841:34;:58::i;:::-;9966:4;;9913:6;:12;:58;;-1:-1:-1;;;;;9913:12:1;;;;-1:-1:-1;;;;;;;;;;;2006:42:1;9913:34;:58::i;:::-;10106:338;;;;;;;;10193:7;;10106:338;;10242:4;;10106:338;;;;10288:4;;10106:338;;;;9986:20;10106:338;;;;;;;;;;;;10406:15;10106:338;;;;10042:420;;-1:-1:-1;;;10042:420:1;;9986:20;;;;-1:-1:-1;;;;;;;;;;;2006:42:1;10042;;:420;;10106:338;10042:420;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10585:6;;10614;:12;10585:43;;-1:-1:-1;;;10585:43:1;;-1:-1:-1;;;;;10614:12:1;;;10585:43;;;843:51:102;9985:477:1;;-1:-1:-1;9985:477:1;;-1:-1:-1;9985:477:1;;-1:-1:-1;10566:16:1;;10585:6;;;:20;;816:18:102;;10585:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10661:6;;10690;:12;10661:43;;-1:-1:-1;;;10661:43:1;;-1:-1:-1;;;;;10690:12:1;;;10661:43;;;843:51:102;10566:62:1;;-1:-1:-1;10642:16:1;;10661:6;;;:20;;816:18:102;;10661:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10864:6;:15;10642:62;;-1:-1:-1;10718:15:1;;10858:21;;-1:-1:-1;;;10864:15:1;;;;10858:2;:21;:::i;:::-;10818:20;10827:11;10818:6;:20;:::i;:::-;10817:62;;;;:::i;:::-;10783:6;:15;;10777:21;;-1:-1:-1;;;10783:15:1;;;;;;10777:21;:::i;:::-;10737:20;10746:11;10737:6;:20;:::i;:::-;10736:62;;;;:::i;:::-;:143;;;;:::i;:::-;11035:6;:15;10718:161;;-1:-1:-1;10893:15:1;;11029:21;;-1:-1:-1;;;11035:15:1;;;;11029:2;:21;:::i;:::-;10991:18;10998:11;10991:4;:18;:::i;:::-;10990:60;;;;:::i;:::-;10956:6;:15;;10950:21;;-1:-1:-1;;;10956:15:1;;;;;;10950:21;:::i;:::-;10912:18;10919:11;10912:4;:18;:::i;:::-;10911:60;;;;:::i;:::-;:139;;;;:::i;:::-;11116:9;;10893:157;;-1:-1:-1;11064:19:1;;-1:-1:-1;;;;;11116:9:1;;;;11087:25;;;;10893:157;11087:25;:::i;:::-;11086:39;;;;:::i;:::-;11064:61;-1:-1:-1;11201:3:1;11178:19;11064:61;11195:2;11178:19;:::i;:::-;11177:27;;;;:::i;:::-;11164:10;:40;:104;;;;-1:-1:-1;11265:3:1;11246:15;:10;11259:2;11246:15;:::i;:::-;11245:23;;;;:::i;:::-;11228:14;:40;11164:104;11139:185;;;;-1:-1:-1;;;11139:185:1;;14455:2:102;11139:185:1;;;14437:21:102;14494:2;14474:18;;;14467:30;-1:-1:-1;;;14513:18:102;;;14506:52;14575:18;;11139:185:1;14253:346:102;11139:185:1;11346:6;11338:4;;:14;;;;;;;:::i;:::-;;;;;;;;11374:6;11366:4;;:14;;;;;;;:::i;:::-;;;;-1:-1:-1;;11406:9:1;;:24;;11418:12;;-1:-1:-1;;;;;11406:9:1;:24;:::i;:::-;11394:9;:36;;-1:-1:-1;;;;;;11394:36:1;-1:-1:-1;;;;;11394:36:1;;;;;;;;;;-1:-1:-1;;;;;;;;9779:1662:1;11455:27;;;3675:25:102;;;3731:2;3716:18;;3709:34;;;11455:27:1;;3648:18:102;11455:27:1;;;;;;;8814:2675;;;;;;8787:2702::o;16083:1506::-;16214:16;16232;1744:1:42;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:42;;15008:2:102;2317:63:42;;;14990:21:102;15047:2;15027:18;;;15020:30;15086:33;15066:18;;;15059:61;15137:18;;2317:63:42;14806:355:102;2317:63:42;1744:1;2455:7;:18;16260:10:1::1;:8;:10::i;:::-;16280:21;16329:13;3316:12:43::0;;;3229:106;16329:13:1::1;16310:9;::::0;16305:20:::1;::::0;16323:2;;-1:-1:-1;;;;;16310:9:1::1;16305:20;:::i;:::-;16304:38;;;;:::i;:::-;16414:278;::::0;;::::1;::::0;::::1;::::0;;16493:7:::1;::::0;16414:278;;-1:-1:-1;;;;;16414:278:1;;::::1;;::::0;::::1;::::0;;;;;;;;;;;;;;;16662:15:::1;16414:278:::0;;;;;;16375:327;;-1:-1:-1;;;16375:327:1;;15415:13:102;;16375:327:1::1;::::0;::::1;15397:32:102::0;15471:24;;15467:65;;;15445:20;;;15438:95;15571:24;;15549:20;;;15542:54;15634:24;15612:20;;;15605:54;15697:24;;15675:20;;;15668:54;16414:278:1;;-1:-1:-1;;;;;;;;;;;;2006:42:1;16375:25:::1;::::0;15369:19:102;;16375:327:1::1;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16740:9;::::0;16352:350;;-1:-1:-1;16352:350:1;-1:-1:-1;16732:37:1::1;::::0;16753:16;;-1:-1:-1;;;;;16740:9:1::1;16732:37;:::i;:::-;16712:9;:58:::0;;-1:-1:-1;;;;;;16712:58:1::1;-1:-1:-1::0;;;;;16712:58:1;;::::1;;::::0;;16810:224:::1;::::0;;::::1;::::0;::::1;::::0;;16879:7:::1;::::0;16810:224;;16915:10:::1;16810:224;::::0;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;16781:263;-1:-1:-1;;;16781:263:1;;-1:-1:-1;;;;;;;;;;;2006:42:1;16781:15:::1;::::0;:263:::1;::::0;16810:224;16781:263:::1;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;17094:4:1::1;::::0;:8;17090:207:::1;;17118:66;17144:10;17170:13;3316:12:43::0;;;3229:106;17170:13:1::1;17164:2;17157:4;;:9;;;;:::i;:::-;17156:27;;;;:::i;:::-;17118:6;:12:::0;-1:-1:-1;;;;;17118:12:1::1;::::0;:66;:25:::1;:66::i;:::-;3316:12:43::0;;17218:2:1::1;17211:4;;:9;;;;:::i;:::-;17210:27;;;;:::i;:::-;17198:39;::::0;;::::1;:::i;:::-;;;17273:13;3316:12:43::0;;;3229:106;17273:13:1::1;17267:2;17260:4;;:9;;;;:::i;:::-;17259:27;;;;:::i;:::-;17251:4;;:35;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;17090:207:1::1;17310:4;::::0;:8;17306:207:::1;;17334:66;17360:10;17386:13;3316:12:43::0;;;3229:106;17386:13:1::1;17380:2;17373:4;;:9;;;;:::i;:::-;17372:27;;;;:::i;:::-;17334:6;:12:::0;-1:-1:-1;;;;;17334:12:1::1;::::0;:66;:25:::1;:66::i;:::-;3316:12:43::0;;17434:2:1::1;17427:4;;:9;;;;:::i;:::-;17426:27;;;;:::i;:::-;17414:39;::::0;;::::1;:::i;:::-;;;17489:13;3316:12:43::0;;;3229:106;17489:13:1::1;17483:2;17476:4;;:9;;;;:::i;:::-;17475:27;;;;:::i;:::-;17467:4;;:35;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;17306:207:1::1;17522:21;17528:10;17540:2;17522:5;:21::i;:::-;17558:24;::::0;;17567:10:::1;15907:51:102::0;;15989:2;15974:18;;15967:34;;;17558:24:1::1;::::0;15880:18:102;17558:24:1::1;;;;;;;-1:-1:-1::0;1701:1:42;2628:7;:22;16083:1506:1;;;;-1:-1:-1;16083:1506:1;-1:-1:-1;;16083:1506:1:o;6443:405:43:-;719:10:70;6536:4:43;6579:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6579:34:43;;;;;;;;;;6631:35;;;;6623:85;;;;-1:-1:-1;;;6623:85:43;;16214:2:102;6623:85:43;;;16196:21:102;16253:2;16233:18;;;16226:30;16292:34;16272:18;;;16265:62;-1:-1:-1;;;16343:18:102;;;16336:35;16388:19;;6623:85:43;16012:401:102;6623:85:43;6742:67;719:10:70;6765:7:43;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:43;;6443:405;-1:-1:-1;;;6443:405:43:o;7304:1415:1:-;7373:18;7363:6;;;;:28;;;;;;;;:::i;:::-;;7355:48;;;;-1:-1:-1;;;7355:48:1;;16620:2:102;7355:48:1;;;16602:21:102;16659:1;16639:18;;;16632:29;-1:-1:-1;;;16677:18:102;;;16670:37;16724:18;;7355:48:1;16418:330:102;7355:48:1;7435:7;;;;;-1:-1:-1;;;;;7435:7:1;7421:10;:21;7413:48;;;;-1:-1:-1;;;7413:48:1;;16955:2:102;7413:48:1;;;16937:21:102;16994:2;16974:18;;;16967:30;-1:-1:-1;;;17013:18:102;;;17006:44;17067:18;;7413:48:1;16753:338:102;7413:48:1;7471:6;:25;;-1:-1:-1;;7471:25:1;7480:16;7471:25;;;7506:6;:12;:60;;-1:-1:-1;;;;;7506:12:1;7536:10;7556:4;7563:2;7506:29;:60::i;:::-;7576:6;:12;:60;;-1:-1:-1;;;;;7576:12:1;7606:10;7626:4;7633:2;7576:29;:60::i;:::-;7646:6;:12;:56;;-1:-1:-1;;;;;7646:12:1;-1:-1:-1;;;;;;;;;;;7699:2:1;7646:34;:56::i;:::-;7712:6;:12;:56;;-1:-1:-1;;;;;7712:12:1;-1:-1:-1;;;;;;;;;;;7765:2:1;7712:34;:56::i;:::-;7831:507;;;;;;;;7904:6;:12;-1:-1:-1;;;;;7904:12:1;;;7831:507;;7951:6;:12;;7831:507;;;;7987:7;;-1:-1:-1;;;;;;;;;;;2006:42:1;7805:12;;7831:507;;;;;7987:13;;-1:-1:-1;;;7987:7:1;;;;7997:3;7987:13;:::i;:::-;7831:507;;;;8029:9;;;;;;7831:507;;;;8067:9;;;;;;7831:507;;;;;;;;;;;;;;;;;;8190:3;8179:7;8110:2;8184;8179:7;:::i;:::-;8178:15;;;;:::i;:::-;7831:507;;;;8235:3;8224:7;:2;8229;8224:7;:::i;:::-;8223:15;;;;:::i;:::-;7831:507;;8275:4;7831:507;;;;8308:15;7831:507;;;;;7805:543;-1:-1:-1;;;;;;7805:543:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;7788:9:1;7778:570;;-1:-1:-1;;;;;;7778:570:1;-1:-1:-1;;;;;7778:570:1;;;;;;;;;;7779:7;7778:570;8472:6;:12;:37;;-1:-1:-1;;;8472:37:1;;8503:4;8472:37;;;843:51:102;8409:110:1;;8448:10;;-1:-1:-1;;;;;8472:12:1;;;;:22;;816:18:102;;8472:37:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8409:110::-;8592:6;:12;:37;;-1:-1:-1;;;8592:37:1;;8623:4;8592:37;;;843:51:102;8529:110:1;;8568:10;;-1:-1:-1;;;;;8592:12:1;;;;:22;;816:18:102;;8592:37:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8529:110::-;8649:23;8655:10;8667:4;8649:5;:23::i;:::-;8687:25;;;8695:10;15907:51:102;;8707:4:1;15989:2:102;15974:18;;15967:34;8687:25:1;;15880:18:102;8687:25:1;;;;;;;7304:1415;;:::o;3721:172:43:-;3807:4;3823:42;719:10:70;3847:9:43;3858:6;3823:9;:42::i;20219:641:1:-;20408:6;:12;20443:6;:12;20470:7;;20305:17;;;;;;2128:42;;20368:18;;-1:-1:-1;;;;;20408:12:1;;;;20443;;;20470:13;;-1:-1:-1;;;20470:7:1;;;;20480:3;20470:13;:::i;:::-;20368:125;;-1:-1:-1;;;;;;20368:125:1;;;;;;;-1:-1:-1;;;;;19578:15:102;;;20368:125:1;;;19560:34:102;19630:15;;;;19610:18;;;19603:43;19694:8;19682:21;19662:18;;;19655:49;19495:18;;20368:125:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20353:140;;20504:20;20555:4;-1:-1:-1;;;;;20540:26:1;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;20716:9:1;;20688:38;;-1:-1:-1;;;20688:38:1;;20716:9;;;;;20688:38;;;5114:40:102;20503:65:1;;-1:-1:-1;20609:244:1;;20503:65;;-1:-1:-1;20688:8:1;;-1:-1:-1;20688:27:1;;-1:-1:-1;5087:18:102;;;-1:-1:-1;20688:38:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20768:9;;20740:38;;-1:-1:-1;;;20740:38:1;;20768:9;;;;;;20740:38;;;5114:40:102;20740:8:1;;:27;;5087:18:102;;20740:38:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3316:12:43;;20806:9:1;;20801:24;;20819:6;;-1:-1:-1;;;;;20806:9:1;20801:24;:::i;:::-;20800:42;;;;:::i;:::-;20609:39;:244::i;:::-;20578:275;;;;-1:-1:-1;20219:641:1;-1:-1:-1;;;;20219:641:1:o;3131:3487::-;-1:-1:-1;;;;;3393:32:1;;3385:59;;;;-1:-1:-1;;;3385:59:1;;21931:2:102;3385:59:1;;;21913:21:102;21970:2;21950:18;;;21943:30;-1:-1:-1;;;21989:18:102;;;21982:44;22043:18;;3385:59:1;21729:338:102;3385:59:1;3472:21;3462:6;;;;:31;;;;;;;;:::i;:::-;;3454:54;;;;-1:-1:-1;;;3454:54:1;;22274:2:102;3454:54:1;;;22256:21:102;22313:2;22293:18;;;22286:30;-1:-1:-1;;;22332:18:102;;;22325:40;22382:18;;3454:54:1;22072:334:102;3454:54:1;3518:7;:20;;-1:-1:-1;;;;;;;3548:27:1;;;3528:10;3518:20;;-1:-1:-1;;3548:27:1;;;;;3585:6;:16;;-1:-1:-1;;;;;3585:16:1;;;-1:-1:-1;;;;;;3585:16:1;;;;;;;3612:6;:21;;;;;;;;;;;;;3661:17;;;-1:-1:-1;;;3661:17:1;;;;:15;;:17;;;;;;;;;;;;;;;3612:21;3661:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3643:6;:35;;;;;;;-1:-1:-1;;;3643:35:1;-1:-1:-1;;;;3643:35:1;;;;;;;;;3688:6;:21;;-1:-1:-1;;;;;3688:21:1;;-1:-1:-1;;;;;;3688:21:1;;;;;;;;3737:17;;;-1:-1:-1;;;3737:17:1;;;;:15;;:17;;;;;;;;;;;;;;;3688:21;3737:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3719:6;:15;;;:35;;;;;;;;;;;;;;;;;;3764:25;3792:6;-1:-1:-1;;;;;3792:13:1;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3792:15:1;;;;;;;;;;;;:::i;:::-;3764:43;;3817:24;3844:6;-1:-1:-1;;;;;3844:13:1;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3844:15:1;;;;;;;;;;;;:::i;:::-;3817:42;;3870:16;3889:8;:27;3985:170;4117:6;:15;;;;;;;;;;;;4111:2;:21;;;;:::i;:::-;4091:41;;-1:-1:-1;;;;;4091:17:1;;:41;:::i;:::-;4034:6;:15;4028:21;;-1:-1:-1;;;4034:15:1;;;;4028:2;:21;:::i;:::-;4017:33;;-1:-1:-1;;;4017:33:1;:::i;:::-;4016:42;;4054:4;4016:42;:::i;:::-;4015:118;;;;:::i;:::-;3985:4;:170::i;:::-;3955:200;;-1:-1:-1;;;3955:200:1;:::i;:::-;3889:290;;-1:-1:-1;;;;;;3889:290:1;;;;;;;-1:-1:-1;;;;;861:32:102;;;3889:290:1;;;843:51:102;816:18;;3889:290:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3870:309;;4189:16;4208:8;:27;4304:168;4434:6;:15;;;;;;;;;;;;4428:2;:21;;;;:::i;4304:168::-;4274:198;;-1:-1:-1;;;4274:198:1;:::i;:::-;4208:288;;-1:-1:-1;;;;;;4208:288:1;;;;;;;-1:-1:-1;;;;;861:32:102;;;4208:288:1;;;843:51:102;816:18;;4208:288:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4189:307;;4511:8;4507:1968;;;4535:7;:11;;-1:-1:-1;;4535:11:1;;;;;-1:-1:-1;4629:1:1;4602:23;4615:10;4602;:23;:::i;:::-;4601:29;;;;:::i;:::-;4758:7;;4589:41;;-1:-1:-1;4758:11:1;;-1:-1:-1;;;4758:7:1;;;;4768:1;4758:11;:::i;:::-;4740:7;;4722:26;;-1:-1:-1;;;4740:7:1;;;;4722:9;:26;:::i;:::-;4721:49;;;;:::i;:::-;4692:7;;4674:26;;-1:-1:-1;;;4692:7:1;;;;4674:9;:26;:::i;:::-;4673:98;;;;:::i;:::-;4834:7;;4644:127;;-1:-1:-1;;;;4834:7:1;;;;4798:27;4834:7;4644:127;4798:27;:::i;:::-;:44;;;;:::i;:::-;4785:57;;4957:10;5014:11;5072:9;5128:7;4888:265;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4856:5;:311;;;;;;:::i;:::-;;5279:9;5335:7;5389:10;5446:11;5215:260;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5181:7;:308;;;;;;:::i;:::-;;4521:979;4507:1968;;;5520:7;:11;;-1:-1:-1;;5520:11:1;;;;;;;5661;;5520;-1:-1:-1;;;5661:7:1;;;;5671:1;5661:11;:::i;:::-;5643:7;;5624:27;;-1:-1:-1;;;5643:7:1;;;;5624:10;:27;:::i;:::-;5623:50;;;;:::i;:::-;5594:7;;5575:27;;-1:-1:-1;;;5594:7:1;;;;5575:10;:27;:::i;:::-;5574:100;;;;:::i;:::-;5804:7;;5545:129;;-1:-1:-1;5804:11:1;;-1:-1:-1;;;5804:7:1;;;;5814:1;5804:11;:::i;:::-;5786:7;;5767:27;;-1:-1:-1;;;5786:7:1;;;;5767:10;:27;:::i;:::-;5766:50;;;;:::i;:::-;5737:7;;5718:27;;-1:-1:-1;;;5737:7:1;;;;5718:10;:27;:::i;:::-;5717:100;;;;:::i;:::-;5688:129;;5932:10;5989:11;6047:9;6103:7;5863:265;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5831:5;:311;;;;;;:::i;:::-;;6254:9;6310:7;6364:10;6421:11;6190:260;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6156:7;:308;;;;;;:::i;:::-;;4507:1968;6484:9;:22;;;6516;;;;;-1:-1:-1;;6516:22:1;;;6484;;;6516;;;;6553:58;;;-1:-1:-1;;;;;32943:15:102;;;32925:34;;32995:15;;32990:2;32975:18;;32968:43;-1:-1:-1;;;;;33100:15:102;;;33080:18;;;33073:43;;;;33152:15;;;33147:2;33132:18;;33125:43;6553:58:1;;32874:3:102;32859:19;6553:58:1;;;;;;;3375:3243;;;;3131:3487;;;;;;;;:::o;11670:4186::-;11764:13;1744:1:42;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:42;;15008:2:102;2317:63:42;;;14990:21:102;15047:2;15027:18;;;15020:30;15086:33;15066:18;;;15059:61;15137:18;;2317:63:42;14806:355:102;2317:63:42;1744:1;2455:7;:18;12008:1:1::1;11992:13;3316:12:43::0;;;3229:106;11992:13:1::1;:17;11984:39;;;::::0;-1:-1:-1;;;11984:39:1;;33381:2:102;11984:39:1::1;::::0;::::1;33363:21:102::0;33420:1;33400:18;;;33393:29;-1:-1:-1;;;33438:18:102;;;33431:39;33487:18;;11984:39:1::1;33179:332:102::0;11984:39:1::1;12034:10;:8;:10::i;:::-;12054:6;:12:::0;:56:::1;::::0;-1:-1:-1;;;12054:56:1;;12080:10:::1;12054:56;::::0;::::1;33756:34:102::0;12100:4:1::1;33806:18:102::0;;;33799:43;33858:18;;;33851:34;;;-1:-1:-1;;;;;12054:12:1;;::::1;::::0;:25:::1;::::0;33691:18:102;;12054:56:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;12120:6:1::1;:12:::0;:56:::1;::::0;-1:-1:-1;;;12120:56:1;;12146:10:::1;12120:56;::::0;::::1;33756:34:102::0;12166:4:1::1;33806:18:102::0;;;33799:43;33858:18;;;33851:34;;;-1:-1:-1;;;;;12120:12:1;;::::1;::::0;:25:::1;::::0;33691:18:102;;12120:56:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12187:12;12209::::0;12714:1:::1;12707:4;;12700;;:11;;;;:::i;:::-;:15;:40;;;;;12725:1;12720:2;:6;:19;;;-1:-1:-1::0;12730:4:1::1;::::0;:9;12720:19:::1;12700:65;;;;;12750:1;12745:2;:6;:19;;;-1:-1:-1::0;12755:4:1::1;::::0;:9;12745:19:::1;12696:971;;;12840:6;:12:::0;12879:6:::1;:12:::0;12910:7:::1;::::0;12781:12:::1;::::0;2128:42:::1;::::0;12796:18:::1;::::0;-1:-1:-1;;;;;12840:12:1;;::::1;::::0;12879;;::::1;::::0;12910:13:::1;::::0;-1:-1:-1;;;12910:7:1;::::1;;;12920:3;12910:13;:::i;:::-;12796:141;::::0;-1:-1:-1;;;;;;12796:141:1::1;::::0;;;;;;-1:-1:-1;;;;;19578:15:102;;;12796:141:1::1;::::0;::::1;19560:34:102::0;19630:15;;;;19610:18;;;19603:43;19694:8;19682:21;19662:18;;;19655:49;19495:18;;12796:141:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12781:156;;12952:20;13003:4;-1:-1:-1::0;;;;;12988:26:1::1;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;13217:9:1::1;::::0;13189:38:::1;::::0;-1:-1:-1;;;13189:38:1;;13217:9:::1;::::0;;;::::1;13189:38;::::0;::::1;5114:40:102::0;12951:65:1;;-1:-1:-1;13031:20:1::1;::::0;;;-1:-1:-1;13077:259:1::1;::::0;-1:-1:-1;12951:65:1;;-1:-1:-1;13189:8:1::1;::::0;-1:-1:-1;13189:27:1::1;::::0;5087:18:102;;13189:38:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13277:9;::::0;13249:38:::1;::::0;-1:-1:-1;;;13249:38:1;;13277:9;;;::::1;;;13249:38;::::0;::::1;5114:40:102::0;13249:8:1::1;::::0;:27:::1;::::0;5087:18:102;;13249:38:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13309:9;::::0;-1:-1:-1;;;;;13309:9:1::1;13077:56;:259::i;:::-;13030:306;;;;13376:1;13369:4;;13354:12;:19;;;;:::i;:::-;:23;13350:90;;;13435:4;::::0;13420:19:::1;::::0;:12;:19:::1;:::i;:::-;13411:4;::::0;13406:9:::1;::::0;:2;:9:::1;:::i;:::-;13405:35;;;;:::i;:::-;13395:45;;13350:90;13480:1;13473:4;;13458:12;:19;;;;:::i;:::-;:23;13454:90;;;13539:4;::::0;13524:19:::1;::::0;:12;:19:::1;:::i;:::-;13515:4;::::0;13510:9:::1;::::0;:2;:9:::1;:::i;:::-;13509:35;;;;:::i;:::-;13499:45;;13454:90;13566:7;13558:4;;:15;;;;;;;:::i;:::-;;;;;;;;13595:7;13587:4;;:15;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;13616:13:1::1;::::0;-1:-1:-1;13622:7:1;13616:13;::::1;:::i;:::-;::::0;-1:-1:-1;13643:13:1::1;13649:7:::0;13643:13;::::1;:::i;:::-;;;12767:900;;;;12696:971;13677:6;:12:::0;:56:::1;::::0;-1:-1:-1;;;;;13677:12:1::1;-1:-1:-1::0;;;;;;;;;;;13730:2:1;13677:34:::1;:56::i;:::-;13743:6;:12:::0;:56:::1;::::0;-1:-1:-1;;;;;13743:12:1::1;-1:-1:-1::0;;;;;;;;;;;13796:2:1;13743:34:::1;:56::i;:::-;13929:20;13951:14:::0;13967::::1;-1:-1:-1::0;;;;;;;;;;;;;;;;13985:38:1::1;;14041:334;;;;;;;;14124:7;;14041:334;;;;14169:2;14041:334;;;;14209:2;14041:334;;;;14257:3;14246:2;14251;14246:7;;;;:::i;:::-;14245:15;;;;:::i;:::-;14041:334:::0;;::::1;;14306:3;14295:7;:2:::0;14300::::1;14295:7;:::i;:::-;14294:15;;;;:::i;:::-;14041:334;;;;14341:15;14041:334;;::::0;13985:404:::1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13928:461;;;;;;14400:20;14626:7;14637:1;14626:12;:28;;;;-1:-1:-1::0;14642:12:1;;14626:28:::1;14622:908;;;14693:6;::::0;14722::::1;:12:::0;14693:43:::1;::::0;-1:-1:-1;;;14693:43:1;;-1:-1:-1;;;;;14722:12:1;;::::1;14693:43;::::0;::::1;843:51:102::0;14670:20:1::1;::::0;14693:6;;;::::1;::::0;:20:::1;::::0;816:18:102;;14693:43:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14773:6;::::0;14802::::1;:12:::0;14773:43:::1;::::0;-1:-1:-1;;;14773:43:1;;-1:-1:-1;;;;;14802:12:1;;::::1;14773:43;::::0;::::1;843:51:102::0;14670:66:1;;-1:-1:-1;14750:20:1::1;::::0;14773:6;::::1;::::0;:20:::1;::::0;816:18:102;;14773:43:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14750:66;;14870:1;14855:12;:16;:36;;;;;14890:1;14875:12;:16;14855:36;14830:115;;;::::0;-1:-1:-1;;;14830:115:1;;34348:2:102;14830:115:1::1;::::0;::::1;34330:21:102::0;34387:2;34367:18;;;34360:30;-1:-1:-1;;;34406:18:102;;;34399:50;34466:18;;14830:115:1::1;34146:344:102::0;14830:115:1::1;15502:6;:15:::0;15496:21:::1;::::0;-1:-1:-1;;;15502:15:1;::::1;;;15496:2;:21;:::i;:::-;15471;15480:12:::0;15471:6;:21:::1;:::i;:::-;15470:47;;;;:::i;:::-;15430:6;:15:::0;;15424:21:::1;::::0;-1:-1:-1;;;15430:15:1;;::::1;;;::::0;15424:21:::1;:::i;:::-;15399;15408:12:::0;15399:6;:21:::1;:::i;:::-;15398:47;;;;:::i;:::-;15397:121;;;;:::i;:::-;15359:6;:15:::0;15353:21:::1;::::0;-1:-1:-1;;;15359:15:1;::::1;;;15353:2;:21;:::i;:::-;15337:12;15330:4;;:19;;;;:::i;:::-;15329:45;;;;:::i;:::-;15285:6;:15:::0;;15279:21:::1;::::0;-1:-1:-1;;;15285:15:1;;::::1;;;::::0;15279:21:::1;:::i;:::-;15263:12;15256:4;;:19;;;;:::i;:::-;15255:45;;;;:::i;:::-;15254:121;;;;:::i;:::-;15218:158;::::0;-1:-1:-1;;;;;15218:158:1;::::1;;:::i;:::-;15217:302;;;;:::i;:::-;15186:333;;14656:874;;14622:908;15582:9;::::0;:24:::1;::::0;15594:12;;-1:-1:-1;;;;;15582:9:1::1;:24;:::i;:::-;15565:12;-1:-1:-1::0;;;;;15549:28:1::1;:13;3316:12:43::0;;;3229:106;15549:13:1::1;:28;;;;:::i;:::-;15548:59;;;;:::i;:::-;15629:9;::::0;15540:67;;-1:-1:-1;15629:24:1::1;::::0;15641:12;;-1:-1:-1;;;;;15629:9:1::1;:24;:::i;:::-;15617:9;:36:::0;;-1:-1:-1;;;;;;15617:36:1::1;-1:-1:-1::0;;;;;15617:36:1;;;::::1;::::0;;;::::1;::::0;;15664:24:::1;15670:10;15682:5:::0;15664::::1;:24::i;:::-;15698:50;15724:10;15736:11;15741:6:::0;15736:2;:11:::1;:::i;15698:50::-;15758;15784:10;15796:11;15801:6:::0;15796:2;:11:::1;:::i;15758:50::-;15823:26;::::0;;15831:10:::1;15907:51:102::0;;15989:2;15974:18;;15967:34;;;15823:26:1::1;::::0;15880:18:102;15823:26:1::1;;;;;;;-1:-1:-1::0;;1701:1:42;2628:7;:22;-1:-1:-1;11670:4186:1;;;-1:-1:-1;;;;;11670:4186:1:o;10019:370:43:-;-1:-1:-1;;;;;10150:19:43;;10142:68;;;;-1:-1:-1;;;10142:68:43;;34697:2:102;10142:68:43;;;34679:21:102;34736:2;34716:18;;;34709:30;34775:34;34755:18;;;34748:62;-1:-1:-1;;;34826:18:102;;;34819:34;34870:19;;10142:68:43;34495:400:102;10142:68:43;-1:-1:-1;;;;;10228:21:43;;10220:68;;;;-1:-1:-1;;;10220:68:43;;35102:2:102;10220:68:43;;;35084:21:102;35141:2;35121:18;;;35114:30;35180:34;35160:18;;;35153:62;-1:-1:-1;;;35231:18:102;;;35224:32;35273:19;;10220:68:43;34900:398:102;10220:68:43;-1:-1:-1;;;;;10299:18:43;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10350:32;;1699:25:102;;;10350:32:43;;1672:18:102;10350:32:43;;;;;;;10019:370;;;:::o;7322:713::-;-1:-1:-1;;;;;7457:20:43;;7449:70;;;;-1:-1:-1;;;7449:70:43;;35505:2:102;7449:70:43;;;35487:21:102;35544:2;35524:18;;;35517:30;35583:34;35563:18;;;35556:62;-1:-1:-1;;;35634:18:102;;;35627:35;35679:19;;7449:70:43;35303:401:102;7449:70:43;-1:-1:-1;;;;;7537:23:43;;7529:71;;;;-1:-1:-1;;;7529:71:43;;35911:2:102;7529:71:43;;;35893:21:102;35950:2;35930:18;;;35923:30;35989:34;35969:18;;;35962:62;-1:-1:-1;;;36040:18:102;;;36033:33;36083:19;;7529:71:43;35709:399:102;7529:71:43;-1:-1:-1;;;;;7693:17:43;;7669:21;7693:17;;;;;;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:43;;36315:2:102;7720:74:43;;;36297:21:102;36354:2;36334:18;;;36327:30;36393:34;36373:18;;;36366:62;-1:-1:-1;;;36444:18:102;;;36437:36;36490:19;;7720:74:43;36113:402:102;7720:74:43;-1:-1:-1;;;;;7828:17:43;;;:9;:17;;;;;;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:9;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:43;7945:6;-1:-1:-1;;;;;7936:35:43;;7964:6;7936:35;;;;1699:25:102;;1687:2;1672:18;;1553:177;7936:35:43;;;;;;;;7982:46;7439:596;7322:713;;;:::o;17771:849:1:-;17896:12;17910;17976;17992:1;17976:17;17972:93;;18022:6;;18051;:12;18022:43;;-1:-1:-1;;;18022:43:1;;-1:-1:-1;;;;;18051:12:1;;;18022:43;;;843:51:102;18022:6:1;;;:20;;816:18:102;;18022:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18007:58;;17972:93;18079:12;18095:1;18079:17;18075:93;;18125:6;;18154;:12;18125:43;;-1:-1:-1;;;18125:43:1;;-1:-1:-1;;;;;18154:12:1;;;18125:43;;;843:51:102;18125:6:1;;;:20;;816:18:102;;18125:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18110:58;;18075:93;18194:419;18272:190;18428:6;:15;;;;;;;;;;;;18422:2;:21;;;;:::i;:::-;18357:6;:15;18404:12;;18351:21;;-1:-1:-1;;;18357:15:1;;;;18351:2;:21;:::i;:::-;18336:36;;:12;:36;:::i;:::-;18335:81;;;;:::i;:::-;18299:118;;-1:-1:-1;;;18299:118:1;:::i;18272:190::-;18518:9;;18490:38;;-1:-1:-1;;;18490:38:1;;18518:9;;;;;18490:38;;;5114:40:102;18490:8:1;;:27;;5087:18:102;;18490:38:1;4972:188:102;18194:419:1;18179:434;;;;-1:-1:-1;17771:849:1;-1:-1:-1;;;17771:849:1:o;701:205:58:-;840:58;;-1:-1:-1;;;;;15925:32:102;;840:58:58;;;15907:51:102;15974:18;;;15967:34;;;813:86:58;;833:5;;-1:-1:-1;;;863:23:58;15880:18:102;;840:58:58;;;;-1:-1:-1;;840:58:58;;;;;;;;;;;;;;-1:-1:-1;;;;;840:58:58;-1:-1:-1;;;;;;840:58:58;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;2022:310::-;2171:39;;-1:-1:-1;;;2171:39:58;;2195:4;2171:39;;;36732:34:102;-1:-1:-1;;;;;36802:15:102;;;36782:18;;;36775:43;2148:20:58;;2213:5;;2171:15;;;;;36667:18:102;;2171:39:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2255:69;;-1:-1:-1;;;;;15925:32:102;;2255:69:58;;;15907:51:102;15974:18;;;15967:34;;;2148:70:58;;-1:-1:-1;2228:97:58;;2248:5;;-1:-1:-1;;;2278:22:58;15880:18:102;;2255:69:58;15733:274:102;9020:576:43;-1:-1:-1;;;;;9103:21:43;;9095:67;;;;-1:-1:-1;;;9095:67:43;;37031:2:102;9095:67:43;;;37013:21:102;37070:2;37050:18;;;37043:30;37109:34;37089:18;;;37082:62;-1:-1:-1;;;37160:18:102;;;37153:31;37201:19;;9095:67:43;36829:397:102;9095:67:43;-1:-1:-1;;;;;9258:18:43;;9233:22;9258:18;;;;;;;;;;;9294:24;;;;9286:71;;;;-1:-1:-1;;;9286:71:43;;37433:2:102;9286:71:43;;;37415:21:102;37472:2;37452:18;;;37445:30;37511:34;37491:18;;;37484:62;-1:-1:-1;;;37562:18:102;;;37555:32;37604:19;;9286:71:43;37231:398:102;9286:71:43;-1:-1:-1;;;;;9391:18:43;;:9;:18;;;;;;;;;;9412:23;;;9391:44;;9455:12;:22;;9429:6;;9391:9;9455:22;;9429:6;;9455:22;:::i;:::-;;;;-1:-1:-1;;9493:37:43;;1699:25:102;;;9519:1:43;;-1:-1:-1;;;;;9493:37:43;;;;;1687:2:102;1672:18;9493:37:43;;;;;;;701:205:58;;;:::o;912:241::-;1077:68;;-1:-1:-1;;;;;33774:15:102;;;1077:68:58;;;33756:34:102;33826:15;;33806:18;;;33799:43;33858:18;;;33851:34;;;1050:96:58;;1070:5;;-1:-1:-1;;;1100:27:58;33691:18:102;;1077:68:58;33516:375:102;8311:389:43;-1:-1:-1;;;;;8394:21:43;;8386:65;;;;-1:-1:-1;;;8386:65:43;;37836:2:102;8386:65:43;;;37818:21:102;37875:2;37855:18;;;37848:30;37914:33;37894:18;;;37887:61;37965:18;;8386:65:43;37634:355:102;8386:65:43;8538:6;8522:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8554:18:43;;:9;:18;;;;;;;;;;:28;;8576:6;;8554:9;:28;;8576:6;;8554:28;:::i;:::-;;;;-1:-1:-1;;8597:37:43;;1699:25:102;;;-1:-1:-1;;;;;8597:37:43;;;8614:1;;8597:37;;1687:2:102;1672:18;8597:37:43;;;;;;;8311:389;;:::o;5250:1058:4:-;5430:15;5447;5494:13;-1:-1:-1;;;;;5478:29:4;:13;-1:-1:-1;;;;;5478:29:4;;5474:110;;;5555:13;;5570;5474:110;5614:13;-1:-1:-1;;;;;5599:28:4;:12;-1:-1:-1;;;;;5599:28:4;;5595:707;;;5653:125;5693:13;5724;5755:9;5653:22;:125::i;:::-;5643:135;;5595:707;;;5814:13;-1:-1:-1;;;;;5799:28:4;:12;-1:-1:-1;;;;;5799:28:4;;5795:507;;;5853:124;5893:12;5923:13;5954:9;5853:22;:124::i;:::-;5843:134;;6001:124;6041:13;6072:12;6102:9;6001:22;:124::i;:::-;5991:134;;5795:507;;;6166:125;6206:13;6237;6268:9;6166:22;:125::i;:::-;6156:135;;5795:507;5250:1058;;;;;;;:::o;2417:191:1:-;2462:6;;2499:1;2490:5;:1;2494;2490:5;:::i;:::-;2489:11;;;;:::i;:::-;2480:20;;2514:1;2510:5;;2525:77;2536:1;2532;:5;2525:77;;;2557:1;-1:-1:-1;2557:1:1;2590;2557;2577:5;2557:1;2577;:5;:::i;:::-;:9;;;;:::i;:::-;2576:15;;;;:::i;:::-;2572:19;;2525:77;;;2470:138;2417:191;;;:::o;3207:706:58:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:58;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:58;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:58;;38196:2:102;3811:85:58;;;38178:21:102;38235:2;38215:18;;;38208:30;38274:34;38254:18;;;38247:62;-1:-1:-1;;;38325:18:102;;;38318:40;38375:19;;3811:85:58;37994:406:102;3837:510:4;3987:15;4034:13;-1:-1:-1;;;;;4018:29:4;:13;-1:-1:-1;;;;;4018:29:4;;4014:110;;;4095:13;;4110;4014:110;-1:-1:-1;;;;;4154:186:4;;:170;-1:-1:-1;;;309:2:2;4187:45:4;;;;4250:29;4327:13;4250;:29;:::i;:::-;-1:-1:-1;;;;;4154:170:4;4297:13;-1:-1:-1;;;;;4154:170:4;:15;:170::i;:::-;:186;;;;:::i;:::-;4135:205;3837:510;-1:-1:-1;;;;3837:510:4:o;4627:461::-;4777:15;4824:13;-1:-1:-1;;;;;4808:29:4;:13;-1:-1:-1;;;;;4808:29:4;;4804:110;;;4885:13;;4900;4804:110;4944:137;-1:-1:-1;;;;;4944:137:4;;5004:29;5020:13;5004;:29;:::i;:::-;-1:-1:-1;;;;;4944:137:4;-1:-1:-1;;;4944:15:4;:137::i;3846:223:68:-;3979:12;4010:52;4032:6;4040:4;4046:1;4049:12;4010:21;:52::i;745:3937:3:-;857:14;;;-1:-1:-1;;1364:1:3;1361;1354:20;1403:1;1400;1396:9;1387:18;;1454:5;1450:2;1447:13;1439:5;1435:2;1431:14;1427:34;1418:43;;;1543:5;1552:1;1543:10;1539:179;;1591:1;1577:11;:15;1569:24;;;;;;-1:-1:-1;1644:23:3;;;;-1:-1:-1;1694:13:3;;1539:179;1845:5;1831:11;:19;1823:28;;;;;;2128:17;2204:11;2201:1;2198;2191:25;2376:21;;;;2333:20;;2322:32;;;;2178:38;-1:-1:-1;2711:12:3;2741:16;:12;;2756:1;2741:16;:::i;:::-;2726:32;;2852:22;;;;;2980:16;;;;;3228:1;3224:12;;;3220:23;3245:1;3216:31;;-1:-1:-1;3275:12:3;3216:31;3275:5;:12;:::i;:::-;3266:21;;;;3621:11;3636:15;3640:11;3636:1;:15;:::i;:::-;3655:1;3635:21;;-1:-1:-1;3882:17:3;3635:21;3882:11;:17;:::i;:::-;3878:21;;:1;:21;:::i;:::-;3871:28;;;;:::i;:::-;;-1:-1:-1;3940:17:3;3871:28;3940:11;:17;:::i;:::-;3936:21;;:1;:21;:::i;:::-;3929:28;;;;:::i;:::-;;-1:-1:-1;3999:17:3;3929:28;3999:11;:17;:::i;:::-;3995:21;;:1;:21;:::i;:::-;3988:28;;;;:::i;:::-;;-1:-1:-1;4058:17:3;3988:28;4058:11;:17;:::i;:::-;4054:21;;:1;:21;:::i;:::-;4047:28;;;;:::i;:::-;;-1:-1:-1;4117:17:3;4047:28;4117:11;:17;:::i;:::-;4113:21;;:1;:21;:::i;:::-;4106:28;;;;:::i;:::-;;-1:-1:-1;4177:17:3;4106:28;4177:11;:17;:::i;:::-;4173:21;;:1;:21;:::i;:::-;4166:28;;;;:::i;:::-;;-1:-1:-1;4641:11:3;4166:28;4641:5;:11;:::i;:::-;4632:20;745:3937;-1:-1:-1;;;;;;;;;745:3937:3:o;4933:499:68:-;5098:12;5155:5;5130:21;:30;;5122:81;;;;-1:-1:-1;;;5122:81:68;;38797:2:102;5122:81:68;;;38779:21:102;38836:2;38816:18;;;38809:30;38875:34;38855:18;;;38848:62;-1:-1:-1;;;38926:18:102;;;38919:36;38972:19;;5122:81:68;38595:402:102;5122:81:68;-1:-1:-1;;;;;1450:19:68;;;5213:60;;;;-1:-1:-1;;;5213:60:68;;39204:2:102;5213:60:68;;;39186:21:102;39243:2;39223:18;;;39216:30;39282:31;39262:18;;;39255:59;39331:18;;5213:60:68;39002:353:102;5213:60:68;5285:12;5299:23;5326:6;-1:-1:-1;;;;;5326:11:68;5345:5;5352:4;5326:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5284:73;;;;5374:51;5391:7;5400:10;5412:12;5374:16;:51::i;:::-;5367:58;4933:499;-1:-1:-1;;;;;;;4933:499:68:o;7546:692::-;7692:12;7720:7;7716:516;;;-1:-1:-1;7750:10:68;7743:17;;7716:516;7861:17;;:21;7857:365;;8055:10;8049:17;8115:15;8102:10;8098:2;8094:19;8087:44;7857:365;8194:12;8187:20;;-1:-1:-1;;;8187:20:68;;;;;;;;:::i;14:250:102:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:102;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:102;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:102:o;905:131::-;-1:-1:-1;;;;;980:31:102;;970:42;;960:70;;1026:1;1023;1016:12;960:70;905:131;:::o;1041:315::-;1109:6;1117;1170:2;1158:9;1149:7;1145:23;1141:32;1138:52;;;1186:1;1183;1176:12;1138:52;1225:9;1212:23;1244:31;1269:5;1244:31;:::i;:::-;1294:5;1346:2;1331:18;;;;1318:32;;-1:-1:-1;;;1041:315:102:o;1958:127::-;2019:10;2014:3;2010:20;2007:1;2000:31;2050:4;2047:1;2040:15;2074:4;2071:1;2064:15;2090:343;2237:2;2222:18;;2270:1;2259:13;;2249:144;;2315:10;2310:3;2306:20;2303:1;2296:31;2350:4;2347:1;2340:15;2378:4;2375:1;2368:15;2249:144;2402:25;;;2090:343;:::o;2438:456::-;2515:6;2523;2531;2584:2;2572:9;2563:7;2559:23;2555:32;2552:52;;;2600:1;2597;2590:12;2552:52;2639:9;2626:23;2658:31;2683:5;2658:31;:::i;:::-;2708:5;-1:-1:-1;2765:2:102;2750:18;;2737:32;2778:33;2737:32;2778:33;:::i;:::-;2438:456;;2830:7;;-1:-1:-1;;;2884:2:102;2869:18;;;;2856:32;;2438:456::o;3316:180::-;3375:6;3428:2;3416:9;3407:7;3403:23;3399:32;3396:52;;;3444:1;3441;3434:12;3396:52;-1:-1:-1;3467:23:102;;3316:180;-1:-1:-1;3316:180:102:o;4054:248::-;4122:6;4130;4183:2;4171:9;4162:7;4158:23;4154:32;4151:52;;;4199:1;4196;4189:12;4151:52;-1:-1:-1;;4222:23:102;;;4292:2;4277:18;;;4264:32;;-1:-1:-1;4054:248:102:o;4624:247::-;4683:6;4736:2;4724:9;4715:7;4711:23;4707:32;4704:52;;;4752:1;4749;4742:12;4704:52;4791:9;4778:23;4810:31;4835:5;4810:31;:::i;5457:316::-;5534:6;5542;5550;5603:2;5591:9;5582:7;5578:23;5574:32;5571:52;;;5619:1;5616;5609:12;5571:52;-1:-1:-1;;5642:23:102;;;5712:2;5697:18;;5684:32;;-1:-1:-1;5763:2:102;5748:18;;;5735:32;;5457:316;-1:-1:-1;5457:316:102:o;6023:146::-;-1:-1:-1;;;;;6102:5:102;6098:46;6091:5;6088:57;6078:85;;6159:1;6156;6149:12;6174:127;6235:10;6230:3;6226:20;6223:1;6216:31;6266:4;6263:1;6256:15;6290:4;6287:1;6280:15;6306:275;6377:2;6371:9;6442:2;6423:13;;-1:-1:-1;;6419:27:102;6407:40;;6477:18;6462:34;;6498:22;;;6459:62;6456:88;;;6524:18;;:::i;:::-;6560:2;6553:22;6306:275;;-1:-1:-1;6306:275:102:o;6586:187::-;6635:4;6668:18;6660:6;6657:30;6654:56;;;6690:18;;:::i;:::-;-1:-1:-1;6756:2:102;6735:15;-1:-1:-1;;6731:29:102;6762:4;6727:40;;6586:187::o;6778:464::-;6821:5;6874:3;6867:4;6859:6;6855:17;6851:27;6841:55;;6892:1;6889;6882:12;6841:55;6928:6;6915:20;6959:49;6975:32;7004:2;6975:32;:::i;:::-;6959:49;:::i;:::-;7033:2;7024:7;7017:19;7079:3;7072:4;7067:2;7059:6;7055:15;7051:26;7048:35;7045:55;;;7096:1;7093;7086:12;7045:55;7161:2;7154:4;7146:6;7142:17;7135:4;7126:7;7122:18;7109:55;7209:1;7184:16;;;7202:4;7180:27;7173:38;;;;7188:7;6778:464;-1:-1:-1;;;6778:464:102:o;7247:118::-;7333:5;7326:13;7319:21;7312:5;7309:32;7299:60;;7355:1;7352;7345:12;7370:128;7435:20;;7464:28;7435:20;7464:28;:::i;:::-;7370:128;;;:::o;7503:1363::-;7690:6;7698;7706;7714;7722;7730;7738;7746;7799:3;7787:9;7778:7;7774:23;7770:33;7767:53;;;7816:1;7813;7806:12;7767:53;7855:9;7842:23;7874:31;7899:5;7874:31;:::i;:::-;7924:5;-1:-1:-1;7981:2:102;7966:18;;7953:32;7994:33;7953:32;7994:33;:::i;:::-;8046:7;-1:-1:-1;8105:2:102;8090:18;;8077:32;8118:33;8077:32;8118:33;:::i;:::-;8170:7;-1:-1:-1;8229:2:102;8214:18;;8201:32;8242:33;8201:32;8242:33;:::i;:::-;8294:7;-1:-1:-1;8353:3:102;8338:19;;8325:33;8367;8325;8367;:::i;:::-;8419:7;-1:-1:-1;8477:3:102;8462:19;;8449:33;8501:18;8531:14;;;8528:34;;;8558:1;8555;8548:12;8528:34;8581:50;8623:7;8614:6;8603:9;8599:22;8581:50;:::i;:::-;8571:60;;8684:3;8673:9;8669:19;8656:33;8640:49;;8714:2;8704:8;8701:16;8698:36;;;8730:1;8727;8720:12;8698:36;;8753:52;8797:7;8786:8;8775:9;8771:24;8753:52;:::i;:::-;8743:62;;;8824:36;8855:3;8844:9;8840:19;8824:36;:::i;:::-;8814:46;;7503:1363;;;;;;;;;;;:::o;8871:388::-;8939:6;8947;9000:2;8988:9;8979:7;8975:23;8971:32;8968:52;;;9016:1;9013;9006:12;8968:52;9055:9;9042:23;9074:31;9099:5;9074:31;:::i;:::-;9124:5;-1:-1:-1;9181:2:102;9166:18;;9153:32;9194:33;9153:32;9194:33;:::i;:::-;9246:7;9236:17;;;8871:388;;;;;:::o;9264:380::-;9343:1;9339:12;;;;9386;;;9407:61;;9461:4;9453:6;9449:17;9439:27;;9407:61;9514:2;9506:6;9503:14;9483:18;9480:38;9477:161;;9560:10;9555:3;9551:20;9548:1;9541:31;9595:4;9592:1;9585:15;9623:4;9620:1;9613:15;10058:127;10119:10;10114:3;10110:20;10107:1;10100:31;10150:4;10147:1;10140:15;10174:4;10171:1;10164:15;10190:125;10255:9;;;10276:10;;;10273:36;;;10289:18;;:::i;10320:168::-;10393:9;;;10424;;10441:15;;;10435:22;;10421:37;10411:71;;10462:18;;:::i;10493:127::-;10554:10;10549:3;10545:20;10542:1;10535:31;10585:4;10582:1;10575:15;10609:4;10606:1;10599:15;10625:120;10665:1;10691;10681:35;;10696:18;;:::i;:::-;-1:-1:-1;10730:9:102;;10625:120::o;10750:422::-;10839:1;10882:5;10839:1;10896:270;10917:7;10907:8;10904:21;10896:270;;;10976:4;10972:1;10968:6;10964:17;10958:4;10955:27;10952:53;;;10985:18;;:::i;:::-;11035:7;11025:8;11021:22;11018:55;;;11055:16;;;;11018:55;11134:22;;;;11094:15;;;;10896:270;;;10900:3;10750:422;;;;;:::o;11177:806::-;11226:5;11256:8;11246:80;;-1:-1:-1;11297:1:102;11311:5;;11246:80;11345:4;11335:76;;-1:-1:-1;11382:1:102;11396:5;;11335:76;11427:4;11445:1;11440:59;;;;11513:1;11508:130;;;;11420:218;;11440:59;11470:1;11461:10;;11484:5;;;11508:130;11545:3;11535:8;11532:17;11529:43;;;11552:18;;:::i;:::-;-1:-1:-1;;11608:1:102;11594:16;;11623:5;;11420:218;;11722:2;11712:8;11709:16;11703:3;11697:4;11694:13;11690:36;11684:2;11674:8;11671:16;11666:2;11660:4;11657:12;11653:35;11650:77;11647:159;;;-1:-1:-1;11759:19:102;;;11791:5;;11647:159;11838:34;11863:8;11857:4;11838:34;:::i;:::-;11908:6;11904:1;11900:6;11896:19;11887:7;11884:32;11881:58;;;11919:18;;:::i;:::-;11957:20;;11177:806;-1:-1:-1;;;11177:806:102:o;11988:140::-;12046:5;12075:47;12116:4;12106:8;12102:19;12096:4;12075:47;:::i;12133:184::-;12203:6;12256:2;12244:9;12235:7;12231:23;12227:32;12224:52;;;12272:1;12269;12262:12;12224:52;-1:-1:-1;12295:16:102;;12133:184;-1:-1:-1;12133:184:102:o;12322:576::-;12551:13;;12533:32;;12625:4;12613:17;;;12607:24;-1:-1:-1;;;;;12603:50:102;12581:20;;;12574:80;12701:4;12689:17;;;12683:24;-1:-1:-1;;;;;12798:21:102;;;12776:20;;;12769:51;;;;12880:4;12868:17;;;12862:24;12858:33;12836:20;;;12829:63;;;;12520:3;12505:19;;12322:576::o;12903:245::-;12982:6;12990;13043:2;13031:9;13022:7;13018:23;13014:32;13011:52;;;13059:1;13056;13049:12;13011:52;-1:-1:-1;;13082:16:102;;13138:2;13123:18;;;13117:25;13082:16;;13117:25;;-1:-1:-1;12903:245:102:o;13153:128::-;13220:9;;;13241:11;;;13238:37;;;13255:18;;:::i;13286:584::-;13462:4;13504:3;13493:9;13489:19;13481:27;;13541:6;13535:13;13524:9;13517:32;13605:4;13597:6;13593:17;13587:24;13580:4;13569:9;13565:20;13558:54;13668:4;13660:6;13656:17;13650:24;13643:4;13632:9;13628:20;13621:54;13731:4;13723:6;13719:17;13713:24;13706:4;13695:9;13691:20;13684:54;13794:4;13786:6;13782:17;13776:24;13769:4;13758:9;13754:20;13747:54;13857:4;13849:6;13845:17;13839:24;13832:4;13821:9;13817:20;13810:54;13286:584;;;;:::o;13875:373::-;13963:6;13971;13979;14032:2;14020:9;14011:7;14007:23;14003:32;14000:52;;;14048:1;14045;14038:12;14000:52;14080:9;14074:16;14099:31;14124:5;14099:31;:::i;:::-;14194:2;14179:18;;14173:25;14238:2;14223:18;;;14217:25;14149:5;;14173:25;;-1:-1:-1;14217:25:102;13875:373;-1:-1:-1;;;13875:373:102:o;14604:197::-;-1:-1:-1;;;;;14726:10:102;;;14738;;;14722:27;;14761:11;;;14758:37;;;14775:18;;:::i;:::-;14758:37;14604:197;;;;:::o;17096:247::-;17167:8;17207:10;;;17219;;;17203:27;17250:20;;;;17167:8;17289:24;;;17279:58;;17317:18;;:::i;:::-;17279:58;;17096:247;;;;:::o;17348:1224::-;17572:13;;-1:-1:-1;;;;;4373:31:102;4361:44;;17540:3;17525:19;;17644:4;17636:6;17632:17;17626:24;17659:54;17707:4;17696:9;17692:20;17678:12;-1:-1:-1;;;;;4373:31:102;4361:44;;4307:104;17659:54;;17762:4;17754:6;17750:17;17744:24;17777:55;17826:4;17815:9;17811:20;17795:14;5241:8;5230:20;5218:33;;5165:92;17777:55;;17881:4;17873:6;17869:17;17863:24;17896:54;17944:4;17933:9;17929:20;17913:14;4951:1;4940:20;4928:33;;4876:91;17896:54;;17999:4;17991:6;17987:17;17981:24;18014:54;18062:4;18051:9;18047:20;18031:14;4951:1;4940:20;4928:33;;4876:91;18014:54;;18124:4;18116:6;18112:17;18106:24;18099:4;18088:9;18084:20;18077:54;18187:4;18179:6;18175:17;18169:24;18162:4;18151:9;18147:20;18140:54;18250:4;18242:6;18238:17;18232:24;18225:4;18214:9;18210:20;18203:54;18276:6;18336:2;18328:6;18324:15;18318:22;18313:2;18302:9;18298:18;18291:50;;18360:6;18415:2;18407:6;18403:15;18397:22;18428:54;18478:2;18467:9;18463:18;18447:14;-1:-1:-1;;;;;4373:31:102;4361:44;;4307:104;18428:54;-1:-1:-1;;18501:6:102;18549:15;;;18543:22;18523:18;;;;18516:50;17348:1224;:::o;18577:435::-;18674:6;18682;18690;18698;18751:3;18739:9;18730:7;18726:23;18722:33;18719:53;;;18768:1;18765;18758:12;18719:53;18797:9;18791:16;18781:26;;18850:2;18839:9;18835:18;18829:25;18863:31;18888:5;18863:31;:::i;:::-;18958:2;18943:18;;18937:25;19002:2;18987:18;;;18981:25;18577:435;;18913:5;;-1:-1:-1;18577:435:102;-1:-1:-1;;;18577:435:102:o;19715:251::-;19785:6;19838:2;19826:9;19817:7;19813:23;19809:32;19806:52;;;19854:1;19851;19844:12;19806:52;19886:9;19880:16;19905:31;19930:5;19905:31;:::i;19971:164::-;20048:13;;20101:1;20090:20;;;20080:31;;20070:59;;20125:1;20122;20115:12;20140:163;20218:13;;20271:6;20260:18;;20250:29;;20240:57;;20293:1;20290;20283:12;20308:160;20385:13;;20438:4;20427:16;;20417:27;;20407:55;;20458:1;20455;20448:12;20473:794;20587:6;20595;20603;20611;20619;20627;20635;20688:3;20676:9;20667:7;20663:23;20659:33;20656:53;;;20705:1;20702;20695:12;20656:53;20737:9;20731:16;20756:31;20781:5;20756:31;:::i;:::-;20806:5;-1:-1:-1;20830:47:102;20873:2;20858:18;;20830:47;:::i;:::-;20820:57;;20896:48;20940:2;20929:9;20925:18;20896:48;:::i;:::-;20886:58;;20963:48;21007:2;20996:9;20992:18;20963:48;:::i;:::-;20953:58;;21030:49;21074:3;21063:9;21059:19;21030:49;:::i;:::-;21020:59;;21098:48;21141:3;21130:9;21126:19;21098:48;:::i;:::-;21088:58;;21191:3;21180:9;21176:19;21170:26;21205:30;21227:7;21205:30;:::i;:::-;21254:7;21244:17;;;20473:794;;;;;;;;;;:::o;22411:204::-;22479:6;22532:2;22520:9;22511:7;22507:23;22503:32;22500:52;;;22548:1;22545;22538:12;22500:52;22571:38;22599:9;22571:38;:::i;22620:649::-;22700:6;22753:2;22741:9;22732:7;22728:23;22724:32;22721:52;;;22769:1;22766;22759:12;22721:52;22802:9;22796:16;22835:18;22827:6;22824:30;22821:50;;;22867:1;22864;22857:12;22821:50;22890:22;;22943:4;22935:13;;22931:27;-1:-1:-1;22921:55:102;;22972:1;22969;22962:12;22921:55;23001:2;22995:9;23026:49;23042:32;23071:2;23042:32;:::i;23026:49::-;23098:2;23091:5;23084:17;23138:7;23133:2;23128;23124;23120:11;23116:20;23113:33;23110:53;;;23159:1;23156;23149:12;23110:53;23172:67;23236:2;23231;23224:5;23220:14;23215:2;23211;23207:11;23172:67;:::i;:::-;23258:5;22620:649;-1:-1:-1;;;;;22620:649:102:o;23490:204::-;23558:6;23611:2;23599:9;23590:7;23586:23;23582:32;23579:52;;;23627:1;23624;23617:12;23579:52;23650:38;23678:9;23650:38;:::i;23699:189::-;23795:1;23766:16;;;23784;;;;23762:39;23849:7;23816:18;;-1:-1:-1;;23836:22:102;;23813:46;23810:72;;;23862:18;;:::i;23893:275::-;23931:1;23972;23969;23958:16;24008:1;24005;23994:16;24029:3;24019:37;;24036:18;;:::i;:::-;-1:-1:-1;;24072:21:102;;-1:-1:-1;;24095:15:102;;24068:43;24065:69;;;24114:18;;:::i;:::-;24148:14;;;23893:275;-1:-1:-1;;;23893:275:102:o;24173:166::-;24203:1;24244;24241;24230:16;24265:3;24255:37;;24272:18;;:::i;:::-;24329:3;24325:1;24322;24311:16;24306:27;24301:32;;;24173:166;;;;:::o;24344:193::-;24442:1;24431:16;;;24413;;;;24409:39;-1:-1:-1;;24463:23:102;;24498:8;24488:19;;24460:48;24457:74;;;24511:18;;:::i;24542:1476::-;-1:-1:-1;;;25246:3:102;25239:22;25221:3;25290:6;25284:13;25306:74;25373:6;25369:1;25364:3;25360:11;25353:4;25345:6;25341:17;25306:74;:::i;:::-;25408:6;25403:3;25399:16;25389:26;;-1:-1:-1;;;25465:2:102;25461:1;25457:2;25453:10;25446:22;25499:6;25493:13;25515:75;25581:8;25577:1;25573:2;25569:10;25562:4;25554:6;25550:17;25515:75;:::i;:::-;25650:1;25609:17;;25642:10;;;25635:22;25682:13;;25704:75;25682:13;25766:1;25758:10;;25751:4;25739:17;;25704:75;:::i;:::-;-1:-1:-1;;;25839:1:102;25798:17;;;;25831:10;;;25824:23;25872:13;;25894:76;25872:13;25956:2;25948:11;;25941:4;25929:17;;25894:76;:::i;:::-;25990:17;26009:2;25986:26;;24542:1476;-1:-1:-1;;;;;;24542:1476:102:o;26149:545::-;26251:2;26246:3;26243:11;26240:448;;;26287:1;26312:5;26308:2;26301:17;26357:4;26353:2;26343:19;26427:2;26415:10;26411:19;26408:1;26404:27;26398:4;26394:38;26463:4;26451:10;26448:20;26445:47;;;-1:-1:-1;26486:4:102;26445:47;26541:2;26536:3;26532:12;26529:1;26525:20;26519:4;26515:31;26505:41;;26596:82;26614:2;26607:5;26604:13;26596:82;;;26659:17;;;26640:1;26629:13;26596:82;;;26600:3;;;26149:545;;;:::o;26870:1352::-;26996:3;26990:10;27023:18;27015:6;27012:30;27009:56;;;27045:18;;:::i;:::-;27074:97;27164:6;27124:38;27156:4;27150:11;27124:38;:::i;:::-;27118:4;27074:97;:::i;:::-;27226:4;;27290:2;27279:14;;27307:1;27302:663;;;;28009:1;28026:6;28023:89;;;-1:-1:-1;28078:19:102;;;28072:26;28023:89;-1:-1:-1;;26827:1:102;26823:11;;;26819:24;26815:29;26805:40;26851:1;26847:11;;;26802:57;28125:81;;27272:944;;27302:663;26096:1;26089:14;;;26133:4;26120:18;;-1:-1:-1;;27338:20:102;;;27456:236;27470:7;27467:1;27464:14;27456:236;;;27559:19;;;27553:26;27538:42;;27651:27;;;;27619:1;27607:14;;;;27486:19;;27456:236;;;27460:3;27720:6;27711:7;27708:19;27705:201;;;27781:19;;;27775:26;-1:-1:-1;;27864:1:102;27860:14;;;27876:3;27856:24;27852:37;27848:42;27833:58;27818:74;;27705:201;-1:-1:-1;;;;;27952:1:102;27936:14;;;27932:22;27919:36;;-1:-1:-1;26870:1352:102:o;28227:1469::-;-1:-1:-1;;;28931:3:102;28924:17;28906:3;28970:6;28964:13;28986:74;29053:6;29049:1;29044:3;29040:11;29033:4;29025:6;29021:17;28986:74;:::i;:::-;-1:-1:-1;;;29119:1:102;29079:16;;;29111:10;;;29104:23;29152:13;;29174:75;29152:13;29236:1;29228:10;;29221:4;29209:17;;29174:75;:::i;:::-;29276:8;29272:2;29268:17;29258:27;;;-1:-1:-1;;;29335:2:102;29331:1;29327:2;29323:10;29316:22;29369:6;29363:13;29385:75;29451:8;29447:1;29443:2;29439:10;29432:4;29424:6;29420:17;29385:75;:::i;:::-;29520:1;29479:17;;29512:10;;;29505:22;29552:13;;29574:75;29552:13;29636:1;29628:10;;29621:4;29609:17;;29574:75;:::i;:::-;29669:17;29688:1;29665:25;;28227:1469;-1:-1:-1;;;;;;28227:1469:102:o;29701:1476::-;-1:-1:-1;;;30405:3:102;30398:22;30380:3;30449:6;30443:13;30465:74;30532:6;30528:1;30523:3;30519:11;30512:4;30504:6;30500:17;30465:74;:::i;31182:1469::-;-1:-1:-1;;;31886:3:102;31879:17;31861:3;31925:6;31919:13;31941:74;32008:6;32004:1;31999:3;31995:11;31988:4;31980:6;31976:17;31941:74;:::i;33896:245::-;33963:6;34016:2;34004:9;33995:7;33991:23;33987:32;33984:52;;;34032:1;34029;34022:12;33984:52;34064:9;34058:16;34083:28;34105:5;34083:28;:::i;38405:185::-;-1:-1:-1;;;;;38526:10:102;;;38514;;;38510:27;;38549:12;;;38546:38;;;38564:18;;:::i;39360:287::-;39489:3;39527:6;39521:13;39543:66;39602:6;39597:3;39590:4;39582:6;39578:17;39543:66;:::i;:::-;39625:16;;;;;39360:287;-1:-1:-1;;39360:287:102:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "claimFee()": {
        "notice": "Claim the accumulated Uniswap V3 trading fees"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(uint256,uint256)": {
        "notice": "Deposit assets into the range",
        "params": {
          "n0": "Amount of quote asset",
          "n1": "Amount of base asset"
        },
        "returns": {
          "lpAmt": "Amount of LP tokens created"
        }
      },
      "getTokenAmounts(uint256)": {
        "notice": "Return the underlying tokens amounts for a given TR balance",
        "params": {
          "amount": "Amount of tokens we want the underlying amounts for"
        }
      },
      "getTokenAmountsExcludingFees(uint256)": {
        "notice": "Return the underlying tokens amounts for a given TR balance excluding the fees",
        "params": {
          "amount": "Amount of tokens we want the underlying amounts for"
        }
      },
      "getValuePerLPAtPrice(uint256,uint256)": {
        "notice": "Return the price of LP tokens based on the underlying assets price",
        "params": {
          "TOKEN0_PRICE": "Base token price",
          "TOKEN1_PRICE": "Quote token price"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "init(uint256,uint256)": {
        "notice": "Initialize a TokenizableRange by adding assets in the underlying Uniswap V3 positionThe token amounts must be 95% correct or this will fail the Uniswap slippage check",
        "params": {
          "n0": "Amount of quote token added",
          "n1": "Amount of base token added"
        }
      },
      "initProxy(address,address,address,uint128,uint128,string,string,bool)": {
        "notice": "Store range parameters",
        "params": {
          "_oracle": "Address of the IAaveOracle interface of the ROE lending pool",
          "asset0": "Quote token address",
          "asset1": "Base token address",
          "endName": "Name of the range higher bound",
          "endX10": "Range high price scaled by 1e10",
          "isTicker": "Range is single tick liquidity around upperTick/startX10/startName",
          "startName": "Name of the range lower bound",
          "startX10": "Range lower price scaled by 1e10"
        }
      },
      "latestAnswer()": {
        "notice": "Return the price of the LP token"
      },
      "lowerTick()": {
        "notice": "VARIABLES"
      },
      "name()": {
        "details": "Override name, symbol and decimals from ERC20 inheritance",
        "notice": "Get the name of this contract token"
      },
      "returnExpectedBalance(uint256,uint256)": {
        "notice": "Calculate the balance of underlying assets based on the assets price, excluding fees"
      },
      "symbol()": {
        "notice": "Get the symbol of this contract token"
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "withdraw(uint256,uint256,uint256)": {
        "notice": "Withdraw assets from a range",
        "params": {
          "amount0Min": "Minimum amount of quote token withdrawn",
          "amount1Min": "Minimum amount of base token withdrawn",
          "lp": "Amount of tokens withdrawn"
        }
      }
    },
    "notice": "Tokenize a Uniswap V3 NFT position",
    "version": 1
  },
  "offset": [
    677,
    21329
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70409194 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xA5843F08 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD1F7E92B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD1F7E92B EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xD3518877 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0xE3526AF4 EQ PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA5843F08 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xBD865CBA EQ PUSH2 0x528 JUMPI DUP1 PUSH4 0xC6098256 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x99D32FC4 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x9B1344AC EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xA41FE49F EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70409194 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x727DD228 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x72F5D98A EQ PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38013F02 GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x449247AA GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x449247AA EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x470F6E1D EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x5EE04D78 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38013F02 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x3B4E06E6 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x443EC74D EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x44919D7B EQ PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x8BD1A85 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x2AB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23F PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x38E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH20 0x1F98431C8AD98523631AE4A59F267346EA31F984 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x29B PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x3931 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x2B4 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x2DD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x302 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x3973 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x399B JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x270 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x3931 JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST PUSH2 0x36A PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x39DC JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x24C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x39E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x39F5 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x270 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B4 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x88A JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x39E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH2 0x270 PUSH20 0x22CC3F665BA4C898226353B672C5123C58751692 DUP2 JUMP JUMPDEST PUSH2 0x36A PUSH2 0x43E CALLDATASIZE PUSH1 0x4 PUSH2 0x39F5 JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x480 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x4A9 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x23F PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x4CD PUSH2 0x9BC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x480 SWAP1 PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH2 0x36A PUSH2 0x4EA CALLDATASIZE PUSH1 0x4 PUSH2 0x3A34 JUMP JUMPDEST PUSH2 0xFA7 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x4FD CALLDATASIZE PUSH1 0x4 PUSH2 0x3931 JUMP JUMPDEST PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x4CD PUSH2 0x510 CALLDATASIZE PUSH1 0x4 PUSH2 0x39F5 JUMP JUMPDEST PUSH2 0x13F2 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x523 CALLDATASIZE PUSH1 0x4 PUSH2 0x3931 JUMP JUMPDEST PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0x270 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4545 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x2B4 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B4 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH2 0x36A PUSH2 0x55C CALLDATASIZE PUSH1 0x4 PUSH2 0x39DC JUMP JUMPDEST PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x4CD PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x3B58 JUMP JUMPDEST PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x582 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x5BB CALLDATASIZE PUSH1 0x4 PUSH2 0x39F5 JUMP JUMPDEST PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x2B4 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD DUP1 SLOAD PUSH2 0x5D8 SWAP1 PUSH2 0x3C63 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x604 SWAP1 PUSH2 0x3C63 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x651 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x626 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x651 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x634 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x668 CALLER DUP5 DUP5 PUSH2 0x2B2C JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x709 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x2B2C JUMP JUMPDEST PUSH2 0x714 DUP6 DUP6 DUP6 PUSH2 0x2C50 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x668 SWAP2 DUP6 SWAP1 PUSH2 0x758 SWAP1 DUP7 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST PUSH2 0x2B2C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x769 DUP4 PUSH2 0x17B6 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP4 PUSH1 0x8 SLOAD PUSH2 0x77F SWAP2 SWAP1 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x789 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x793 SWAP1 DUP4 PUSH2 0x3CAD JUMP JUMPDEST SWAP2 POP PUSH2 0x79E PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x9 SLOAD PUSH2 0x7AC SWAP2 SWAP1 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x7C0 SWAP1 DUP3 PUSH2 0x3CAD JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SUB PUSH2 0x7E1 JUMPI POP PUSH1 0x0 PUSH2 0x66C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7EE DUP6 DUP6 PUSH2 0x975 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x80E SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH2 0x3DE5 JUMP JUMPDEST PUSH2 0x818 DUP7 DUP5 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x83B SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 PUSH2 0x3DE5 JUMP JUMPDEST PUSH2 0x845 DUP6 DUP10 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST SWAP1 POP PUSH2 0x864 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x876 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x880 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 PUSH2 0x970 SWAP3 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x94C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x982 DUP5 DUP5 PUSH2 0x2E20 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH2 0x994 SWAP1 DUP4 PUSH2 0x3CAD JUMP JUMPDEST SWAP2 POP PUSH1 0x9 SLOAD DUP2 PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE DUP1 SLOAD PUSH2 0x5D8 SWAP1 PUSH2 0x3C63 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x7 SLOAD DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0xFC6F7865 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4545 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0xFC6F7865 SWAP2 PUSH2 0xA18 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x3E0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5A SWAP2 SWAP1 PUSH2 0x3E50 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH1 0x0 EQ DUP1 ISZERO PUSH2 0xA6C JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xA75 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0xA84 PUSH1 0x14 DUP6 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0xA8E SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0xA9F PUSH1 0x14 DUP6 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0xAA9 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0xADC JUMPI PUSH1 0xA SLOAD PUSH2 0xADC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0x22CC3F665BA4C898226353B672C5123C58751692 DUP5 PUSH2 0x2FC4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB0D JUMPI PUSH1 0xB SLOAD PUSH2 0xB0D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0x22CC3F665BA4C898226353B672C5123C58751692 DUP4 PUSH2 0x2FC4 JUMP JUMPDEST DUP2 DUP5 PUSH1 0x8 SLOAD PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST PUSH2 0xB26 SWAP2 SWAP1 PUSH2 0x3E74 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x9 SLOAD DUP2 SWAP1 PUSH2 0xB39 SWAP1 DUP6 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST PUSH2 0xB43 SWAP2 SWAP1 PUSH2 0x3E74 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x0 DUP1 PUSH2 0xB53 DUP2 DUP1 PUSH2 0x2E20 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH1 0x8 SLOAD PUSH1 0x64 PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x3CC0 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0xB81 JUMPI POP DUP1 PUSH1 0x9 SLOAD PUSH1 0x64 PUSH2 0xB7F SWAP2 SWAP1 PUSH2 0x3CC0 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xF66 JUMPI PUSH1 0x8 SLOAD PUSH1 0xA SLOAD PUSH2 0xBB1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4545 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x302C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH2 0xBDC SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4545 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x302C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x8 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x9 SLOAD DUP2 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH1 0xA0 DUP4 ADD MSTORE SWAP2 MLOAD PUSH4 0x219F5D17 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4545 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x219F5D17 SWAP2 PUSH2 0xC43 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x3E87 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC86 SWAP2 SWAP1 PUSH2 0x3ECB JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP8 POP SWAP3 SWAP6 POP SWAP1 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD78 SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xD96 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH2 0x3DE5 JUMP JUMPDEST PUSH2 0xDA0 DUP4 DUP7 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0xDC3 SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 PUSH2 0x3DE5 JUMP JUMPDEST PUSH2 0xDCD DUP6 DUP9 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0xDD7 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0xDE1 SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xDFF SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH2 0x3DE5 JUMP JUMPDEST PUSH2 0xE09 DUP5 DUP11 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0xE2C SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 PUSH2 0x3DE5 JUMP JUMPDEST PUSH2 0xE36 DUP7 DUP13 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0xE40 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0xE4A SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH2 0xE6B SWAP1 DUP11 AND DUP5 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH2 0xE84 DUP3 PUSH1 0x5F PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0xE8E SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST DUP4 GT DUP1 ISZERO PUSH2 0xEB1 JUMPI POP PUSH1 0x64 PUSH2 0xEA4 DUP5 PUSH1 0x5F PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0xEAE SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST DUP2 GT JUMPDEST PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x54523A20436C61696D2046656520536C697070616765 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F3 JUMP JUMPDEST DUP7 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF08 SWAP2 SWAP1 PUSH2 0x3E74 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF21 SWAP2 SWAP1 PUSH2 0x3E74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x10 SLOAD PUSH2 0xF3D SWAP1 DUP10 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3F02 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH32 0xCBF6196D7BEBCBAAF53F321EECB5B4F39479879F3996F828F10012708A9442D7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE PUSH2 0x1009 PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1014 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x102B SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE DUP3 DUP5 ADD DUP11 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP11 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP7 ADD SWAP1 DUP2 MSTORE SWAP6 MLOAD PUSH4 0x624E65F PUSH1 0xE1 SHL DUP2 MSTORE SWAP5 MLOAD PUSH1 0x4 DUP7 ADD MSTORE SWAP2 MLOAD SWAP1 SWAP3 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP1 MLOAD PUSH1 0x44 DUP4 ADD MSTORE MLOAD PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x84 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4545 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0xC49CCBE SWAP1 PUSH1 0xA4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10FA SWAP2 SWAP1 PUSH2 0x3E50 JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP2 SWAP5 POP SWAP3 POP PUSH2 0x1116 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3E74 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x7 SLOAD DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE DUP6 DUP4 AND DUP2 DUP4 ADD MSTORE SWAP2 DUP5 AND PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH4 0xFC6F7865 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4545 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0xFC6F7865 SWAP2 PUSH2 0x1184 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x3E0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11C6 SWAP2 SWAP1 PUSH2 0x3E50 JUMP JUMPDEST POP POP PUSH1 0x8 SLOAD ISZERO PUSH2 0x1267 JUMPI PUSH2 0x1208 CALLER PUSH2 0x11DD PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP9 PUSH1 0x8 SLOAD PUSH2 0x11EB SWAP2 SWAP1 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x2FC4 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP7 PUSH1 0x8 SLOAD PUSH2 0x1219 SWAP2 SWAP1 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x1223 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x122D SWAP1 DUP5 PUSH2 0x3CAD JUMP JUMPDEST SWAP3 POP PUSH2 0x1238 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH1 0x8 SLOAD PUSH2 0x1246 SWAP2 SWAP1 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x1250 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1261 SWAP2 SWAP1 PUSH2 0x3E74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x9 SLOAD ISZERO PUSH2 0x1306 JUMPI PUSH2 0x12A7 CALLER PUSH2 0x127C PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP9 PUSH1 0x9 SLOAD PUSH2 0x128A SWAP2 SWAP1 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x1294 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x2FC4 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP7 PUSH1 0x9 SLOAD PUSH2 0x12B8 SWAP2 SWAP1 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x12C2 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x12CC SWAP1 DUP4 PUSH2 0x3CAD JUMP JUMPDEST SWAP2 POP PUSH2 0x12D7 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH1 0x9 SLOAD PUSH2 0x12E5 SWAP2 SWAP1 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x12EF SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1300 SWAP2 SWAP1 PUSH2 0x3E74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH2 0x1310 CALLER DUP8 PUSH2 0x30DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0x5 SSTORE SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x13DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x13E8 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x2B2C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x140B JUMPI PUSH2 0x140B PUSH2 0x395D JUMP JUMPDEST EQ PUSH2 0x1442 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x21496E69744C5 PUSH1 0xCC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1492 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x155B985B1B1BDDD9590818D85B1B PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0xA SLOAD PUSH2 0x14B7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x322C JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x14CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x322C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x14F4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4545 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x302C JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1519 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4545 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x302C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x160 DUP2 ADD DUP3 MSTORE PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0xB SLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4545 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH4 0x88316456 SWAP3 SWAP2 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1572 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x64 PUSH2 0x3F29 JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x6 SLOAD PUSH1 0x2 DUP2 DUP2 SIGNEXTEND PUSH1 0x20 DUP5 ADD MSTORE PUSH4 0x1000000 SWAP1 SWAP2 DIV SWAP1 SIGNEXTEND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH1 0x64 PUSH2 0x15B3 DUP8 PUSH1 0x5F PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x15BD SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 PUSH2 0x15CF DUP7 PUSH1 0x5F PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x15D9 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 SWAP2 DUP3 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x1607 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x3F50 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1626 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164A SWAP2 SWAP1 PUSH2 0x4014 JUMP JUMPDEST POP POP PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x16E1 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x1753 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x172F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1294 SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST PUSH2 0x1765 CALLER PUSH8 0xDE0B6B3A7640000 PUSH2 0x3264 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x668 CALLER DUP5 DUP5 PUSH2 0x2C50 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0x6 SLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH20 0x1F98431C8AD98523631AE4A59F267346EA31F984 SWAP3 PUSH4 0x1698EE82 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH2 0x1808 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x64 PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH3 0xFFFFFF AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x185F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1883 SWAP2 SWAP1 PUSH2 0x4052 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18E9 SWAP2 SWAP1 PUSH2 0x40A4 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x986CFBA3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP6 POP PUSH2 0x1A1D SWAP5 DUP7 SWAP5 POP PUSH20 0x0 SWAP4 POP PUSH4 0x986CFBA3 SWAP3 POP PUSH1 0x24 ADD SWAP1 POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1950 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1974 SWAP2 SWAP1 PUSH2 0x4052 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x986CFBA3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x1000000 SWAP1 SWAP2 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x986CFBA3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x19D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19F4 SWAP2 SWAP1 PUSH2 0x4052 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x10 SLOAD PUSH2 0x1A0E SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x1A18 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x3343 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x1A70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C6964206F7261636C65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A89 JUMPI PUSH2 0x1A89 PUSH2 0x395D JUMP JUMPDEST EQ PUSH2 0x1AC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x21496E697450726F7879 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND CALLER PUSH2 0x100 MUL PUSH1 0xFF NOT AND OR OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xA DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B6F SWAP2 SWAP1 PUSH2 0x4130 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C0C SWAP2 SWAP1 PUSH2 0x4130 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1C91 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x414B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1CFB SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x414B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0x4F76C058 PUSH2 0x1D92 PUSH1 0xA PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH2 0x1D3B SWAP2 SWAP1 PUSH2 0x3DE5 JUMP JUMPDEST PUSH2 0x1D4E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP14 AND PUSH2 0x3CC0 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1D66 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH2 0x3DE5 JUMP JUMPDEST PUSH2 0x1D74 SWAP1 PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x1D83 SWAP1 PUSH5 0x2540BE400 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x1D8D SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x33E0 JUMP JUMPDEST PUSH2 0x1DA0 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL PUSH2 0x3CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1DE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E08 SWAP2 SWAP1 PUSH2 0x41C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0x4F76C058 PUSH2 0x1E48 PUSH1 0xA PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH2 0x1D3B SWAP2 SWAP1 PUSH2 0x3DE5 JUMP JUMPDEST PUSH2 0x1E56 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL PUSH2 0x3CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1E9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EBE SWAP2 SWAP1 PUSH2 0x41C2 JUMP JUMPDEST SWAP1 POP DUP5 ISZERO PUSH2 0x1FF4 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH9 0xFFFFFF000000000000 NOT AND PUSH7 0x5000000000000 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 PUSH2 0x1EEF DUP4 DUP6 PUSH2 0x41DD JUMP JUMPDEST PUSH2 0x1EF9 SWAP2 SWAP1 PUSH2 0x4202 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x1F16 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x2 PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1F2F SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP4 PUSH2 0x41DD JUMP JUMPDEST PUSH2 0x1F39 SWAP2 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1F52 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP4 PUSH2 0x41DD JUMP JUMPDEST PUSH2 0x1F5C SWAP2 SWAP1 PUSH2 0x425E JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH3 0xFFFFFF AND PUSH2 0x1F78 DUP2 DUP6 PUSH2 0x425E JUMP JUMPDEST PUSH2 0x1F82 SWAP2 SWAP1 PUSH2 0x425E JUMP JUMPDEST SWAP2 POP DUP4 DUP6 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F9B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4283 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0xD SWAP1 DUP2 PUSH2 0x1FB8 SWAP2 SWAP1 PUSH2 0x4361 JUMP JUMPDEST POP DUP8 DUP8 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FD0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0xE SWAP1 DUP2 PUSH2 0x1FED SWAP2 SWAP1 PUSH2 0x4361 JUMP JUMPDEST POP POP PUSH2 0x213F JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH9 0xFFFFFF000000000000 NOT AND PUSH7 0x5000000000000 OR SWAP1 DUP2 SWAP1 SSTORE PUSH2 0x2029 SWAP1 PUSH3 0xFFFFFF PUSH1 0x1 PUSH1 0x30 SHL SWAP1 SWAP2 DIV AND PUSH1 0x2 PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x2042 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP4 PUSH2 0x41DD JUMP JUMPDEST PUSH2 0x204C SWAP2 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x2065 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP4 PUSH2 0x41DD JUMP JUMPDEST PUSH2 0x206F SWAP2 SWAP1 PUSH2 0x425E JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x208C SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x2 PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x20A5 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP5 PUSH2 0x41DD JUMP JUMPDEST PUSH2 0x20AF SWAP2 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x20C8 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP5 PUSH2 0x41DD JUMP JUMPDEST PUSH2 0x20D2 SWAP2 SWAP1 PUSH2 0x425E JUMP JUMPDEST SWAP2 POP DUP3 DUP5 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20EB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0xD SWAP1 DUP2 PUSH2 0x2108 SWAP2 SWAP1 PUSH2 0x4361 JUMP JUMPDEST POP DUP7 DUP7 DUP5 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2120 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0xE SWAP1 DUP2 PUSH2 0x213D SWAP2 SWAP1 PUSH2 0x4361 JUMP JUMPDEST POP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH3 0xFFFFFF DUP5 DUP2 AND PUSH4 0x1000000 MUL PUSH6 0xFFFFFFFFFFFF NOT SWAP1 SWAP3 AND SWAP1 DUP5 AND OR OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP3 MSTORE DUP13 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP12 DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP10 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0xEB71465D71F7B18C376BA29F6EDB7953DC29C7AFB4FCAA4E1335C8827A8DD96E SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x2223 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE PUSH1 0x0 PUSH2 0x2233 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT PUSH2 0x226C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x15148810DB1BDCD959 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x2274 PUSH2 0x9BC JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22EF SWAP2 SWAP1 PUSH2 0x44EB JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2347 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x236B SWAP2 SWAP1 PUSH2 0x44EB JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x2381 SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x2398 JUMPI POP PUSH1 0x0 DUP6 GT DUP1 PUSH2 0x2398 JUMPI POP PUSH1 0x8 SLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x23AE JUMPI POP PUSH1 0x0 DUP5 GT DUP1 PUSH2 0x23AE JUMPI POP PUSH1 0x9 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x26D0 JUMPI PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0x6 SLOAD PUSH1 0x0 SWAP3 PUSH20 0x1F98431C8AD98523631AE4A59F267346EA31F984 SWAP3 PUSH4 0x1698EE82 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH2 0x2402 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x64 PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH3 0xFFFFFF AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2459 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x247D SWAP2 SWAP1 PUSH2 0x4052 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24E3 SWAP2 SWAP1 PUSH2 0x40A4 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x986CFBA3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP6 POP PUSH1 0x0 SWAP5 DUP6 SWAP5 POP PUSH2 0x2604 SWAP4 POP DUP7 SWAP3 POP PUSH20 0x0 SWAP2 POP PUSH4 0x986CFBA3 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x254F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2573 SWAP2 SWAP1 PUSH2 0x4052 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x986CFBA3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x1000000 SWAP1 SWAP2 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x986CFBA3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x25CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25F3 SWAP2 SWAP1 PUSH2 0x4052 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3343 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x8 SLOAD DUP4 PUSH2 0x2618 SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST GT ISZERO PUSH2 0x2645 JUMPI PUSH1 0x8 SLOAD PUSH2 0x262B SWAP1 DUP4 PUSH2 0x3CAD JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x2638 SWAP1 DUP12 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x2642 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD DUP3 PUSH2 0x2655 SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST GT ISZERO PUSH2 0x2682 JUMPI PUSH1 0x9 SLOAD PUSH2 0x2668 SWAP1 DUP3 PUSH2 0x3CAD JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x2675 SWAP1 DUP11 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x267F SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST SWAP5 POP JUMPDEST DUP6 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2694 SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x26AD SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x26BD SWAP1 POP DUP7 DUP11 PUSH2 0x3E74 JUMP JUMPDEST SWAP9 POP PUSH2 0x26C9 DUP6 DUP10 PUSH2 0x3E74 JUMP JUMPDEST SWAP8 POP POP POP POP POP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x26F5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4545 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 PUSH2 0x302C JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x271A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4545 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 PUSH2 0x302C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4545 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x219F5D17 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP13 PUSH1 0x5F PUSH2 0x276A SWAP2 SWAP1 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x2774 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 PUSH2 0x2786 DUP13 PUSH1 0x5F PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x2790 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27B5 SWAP2 SWAP1 PUSH2 0x3E87 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27F8 SWAP2 SWAP1 PUSH2 0x3ECB JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP6 PUSH1 0x0 EQ DUP1 ISZERO PUSH2 0x280E JUMPI POP DUP5 ISZERO JUMPDEST ISZERO PUSH2 0x2A43 JUMPI PUSH1 0xC SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2864 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2888 SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28FE SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x2910 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x2953 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964204F7261636C65205072696365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x296B SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH2 0x3DE5 JUMP JUMPDEST PUSH2 0x2975 DUP3 DUP7 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x297F SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x2998 SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 PUSH2 0x3DE5 JUMP JUMPDEST PUSH2 0x29A2 DUP5 DUP9 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x29AC SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x29B6 SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x29CE SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH2 0x3DE5 JUMP JUMPDEST DUP3 PUSH1 0x9 SLOAD PUSH2 0x29DC SWAP2 SWAP1 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x29E6 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x29FF SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 PUSH2 0x3DE5 JUMP JUMPDEST DUP5 PUSH1 0x8 SLOAD PUSH2 0x2A0D SWAP2 SWAP1 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x2A17 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x2A21 SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST PUSH2 0x2A34 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP10 AND PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x2A3E SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x2A5A SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3CAD JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2A6D PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2A77 SWAP2 SWAP1 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x2A81 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 SWAP8 POP PUSH2 0x2A9B SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3F02 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2AC5 CALLER DUP9 PUSH2 0x3264 JUMP JUMPDEST PUSH2 0x2AD3 CALLER PUSH2 0x11F5 DUP6 DUP13 PUSH2 0x3E74 JUMP JUMPDEST PUSH2 0x2AE1 CALLER PUSH2 0x1294 DUP5 DUP12 PUSH2 0x3E74 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP SWAP3 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2B8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2BEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2CB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2D16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2D8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2DC5 SWAP1 DUP5 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2E11 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 SUB PUSH2 0x2E9E JUMPI PUSH1 0xC SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E9B SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST SWAP4 POP JUMPDEST DUP3 PUSH1 0x0 SUB PUSH2 0x2F19 JUMPI PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F16 SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH2 0x2FB9 PUSH2 0x2F7A PUSH1 0xA PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH2 0x2F3E SWAP2 SWAP1 PUSH2 0x3DE5 JUMP JUMPDEST PUSH1 0xB SLOAD DUP7 SWAP1 PUSH2 0x2F58 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH2 0x3DE5 JUMP JUMPDEST PUSH2 0x2F62 SWAP1 DUP10 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x2F6C SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x1D83 SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL PUSH2 0x3CC0 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x986CFBA3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x986CFBA3 SWAP1 PUSH1 0x24 ADD PUSH2 0x2532 JUMP JUMPDEST SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x3027 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x3439 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP4 SWAP2 DUP7 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x307D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30A1 SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST PUSH2 0x30AB SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH2 0x2E1A SWAP1 DUP6 SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x2FF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x313E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x31B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x31E1 SWAP1 DUP5 SWAP1 PUSH2 0x3E74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2E1A SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x2FF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x32BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F3 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x32CC SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x32F9 SWAP1 DUP5 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x3364 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH2 0x3390 JUMPI PUSH2 0x3389 DUP6 DUP6 DUP6 PUSH2 0x350B JUMP JUMPDEST SWAP2 POP PUSH2 0x33D7 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH2 0x33C9 JUMPI PUSH2 0x33B5 DUP7 DUP6 DUP6 PUSH2 0x350B JUMP JUMPDEST SWAP2 POP PUSH2 0x33C2 DUP6 DUP8 DUP6 PUSH2 0x3586 JUMP JUMPDEST SWAP1 POP PUSH2 0x33D7 JUMP JUMPDEST PUSH2 0x33D4 DUP6 DUP6 DUP6 PUSH2 0x3586 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH2 0x33F0 DUP5 PUSH1 0x1 PUSH2 0x3CAD JUMP JUMPDEST PUSH2 0x33FA SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST SWAP1 POP DUP3 SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3433 JUMPI SWAP1 POP DUP1 PUSH1 0x2 DUP2 PUSH2 0x3418 DUP2 DUP7 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x3422 SWAP2 SWAP1 PUSH2 0x3CAD JUMP JUMPDEST PUSH2 0x342C SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST SWAP1 POP PUSH2 0x3400 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x348E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x35D0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x3027 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x34AC SWAP2 SWAP1 PUSH2 0x44EB JUMP JUMPDEST PUSH2 0x3027 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x352B JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3574 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x60 SHL PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH2 0x355C DUP8 DUP8 PUSH2 0x4508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x35DF JUMP JUMPDEST PUSH2 0x357E SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x35A6 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH2 0x357E PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH2 0x35BD DUP7 DUP7 PUSH2 0x4508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x35DF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x357E DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3758 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 SUB PUSH2 0x3618 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x360D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x71A JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x3624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD DUP1 DUP5 SUB SWAP4 DUP2 GT SWAP1 SWAP3 SUB SWAP2 SWAP1 POP PUSH1 0x0 PUSH2 0x3644 DUP7 NOT PUSH1 0x1 PUSH2 0x3CAD JUMP JUMPDEST DUP7 AND SWAP6 DUP7 SWAP1 DIV SWAP6 SWAP4 DUP5 SWAP1 DIV SWAP4 PUSH1 0x0 DUP2 SWAP1 SUB DIV PUSH1 0x1 ADD SWAP1 POP PUSH2 0x3665 DUP2 DUP5 PUSH2 0x3CC0 JUMP JUMPDEST SWAP1 SWAP4 OR SWAP3 PUSH1 0x0 PUSH2 0x3676 DUP8 PUSH1 0x3 PUSH2 0x3CC0 JUMP JUMPDEST PUSH1 0x2 XOR SWAP1 POP PUSH2 0x3685 DUP2 DUP9 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x3690 SWAP1 PUSH1 0x2 PUSH2 0x3E74 JUMP JUMPDEST PUSH2 0x369A SWAP1 DUP3 PUSH2 0x3CC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x36A6 DUP2 DUP9 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x36B1 SWAP1 PUSH1 0x2 PUSH2 0x3E74 JUMP JUMPDEST PUSH2 0x36BB SWAP1 DUP3 PUSH2 0x3CC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x36C7 DUP2 DUP9 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x36D2 SWAP1 PUSH1 0x2 PUSH2 0x3E74 JUMP JUMPDEST PUSH2 0x36DC SWAP1 DUP3 PUSH2 0x3CC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x36E8 DUP2 DUP9 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x36F3 SWAP1 PUSH1 0x2 PUSH2 0x3E74 JUMP JUMPDEST PUSH2 0x36FD SWAP1 DUP3 PUSH2 0x3CC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x3709 DUP2 DUP9 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x3714 SWAP1 PUSH1 0x2 PUSH2 0x3E74 JUMP JUMPDEST PUSH2 0x371E SWAP1 DUP3 PUSH2 0x3CC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x372A DUP2 DUP9 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x3735 SWAP1 PUSH1 0x2 PUSH2 0x3E74 JUMP JUMPDEST PUSH2 0x373F SWAP1 DUP3 PUSH2 0x3CC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x374B DUP2 DUP7 PUSH2 0x3CC0 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x37B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x3810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x382C SWAP2 SWAP1 PUSH2 0x4528 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3869 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x386E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x387E DUP3 DUP3 DUP7 PUSH2 0x3889 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3898 JUMPI POP DUP2 PUSH2 0x71A JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x38A8 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x38E6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x38C5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3905 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x392E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3944 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x394F DUP2 PUSH2 0x3919 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x3995 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x39BB DUP2 PUSH2 0x3919 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x39CB DUP2 PUSH2 0x3919 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x71A DUP2 PUSH2 0x3919 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3A49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x392E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3AB4 JUMPI PUSH2 0x3AB4 PUSH2 0x3A75 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3AD6 JUMPI PUSH2 0x3AD6 PUSH2 0x3A75 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3AF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3B08 PUSH2 0x3B03 DUP3 PUSH2 0x3ABC JUMP JUMPDEST PUSH2 0x3A8B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x3B1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x392E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3B53 DUP2 PUSH2 0x3B3A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3B75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x3B80 DUP2 PUSH2 0x3919 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x3B90 DUP2 PUSH2 0x3919 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x3BA0 DUP2 PUSH2 0x3919 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0x3BB0 DUP2 PUSH2 0x3A60 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH2 0x3BC0 DUP2 PUSH2 0x3A60 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3BDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BE9 DUP13 DUP4 DUP14 ADD PUSH2 0x3AE4 JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3BFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0C DUP12 DUP3 DUP13 ADD PUSH2 0x3AE4 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3C1B PUSH1 0xE0 DUP11 ADD PUSH2 0x3B48 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3C48 DUP2 PUSH2 0x3919 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3C58 DUP2 PUSH2 0x3919 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3C77 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3433 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x66C JUMPI PUSH2 0x66C PUSH2 0x3C97 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x66C JUMPI PUSH2 0x66C PUSH2 0x3C97 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3CFC JUMPI PUSH2 0x3CFC PUSH2 0x3CD7 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x3D3C JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x3D22 JUMPI PUSH2 0x3D22 PUSH2 0x3C97 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x3D2F JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x3D06 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3D53 JUMPI POP PUSH1 0x1 PUSH2 0x66C JUMP JUMPDEST DUP2 PUSH2 0x3D60 JUMPI POP PUSH1 0x0 PUSH2 0x66C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3D76 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3D80 JUMPI PUSH2 0x3D9C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x66C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3D91 JUMPI PUSH2 0x3D91 PUSH2 0x3C97 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x66C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3DBF JUMPI POP DUP2 DUP2 EXP PUSH2 0x66C JUMP JUMPDEST PUSH2 0x3DC9 DUP4 DUP4 PUSH2 0x3D01 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x3DDD JUMPI PUSH2 0x3DDD PUSH2 0x3C97 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71A PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x3D44 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x66C JUMPI PUSH2 0x66C PUSH2 0x3C97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3EE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x3EEB DUP2 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 SWAP1 SWAP6 ADD MLOAD SWAP1 SWAP7 SWAP5 SWAP6 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x3F22 JUMPI PUSH2 0x3F22 PUSH2 0x3C97 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND MUL DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x3F48 JUMPI PUSH2 0x3F48 PUSH2 0x3C97 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH2 0x160 DUP2 ADD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x3F7C PUSH1 0x20 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x3F93 PUSH1 0x40 DUP5 ADD DUP3 PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x3FA8 PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0x2 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x3FBD PUSH1 0x80 DUP5 ADD DUP3 PUSH1 0x2 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH2 0x4003 DUP3 DUP6 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP POP PUSH2 0x140 SWAP3 DUP4 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x402A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x403C DUP2 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4064 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x71A DUP2 PUSH2 0x3919 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x3B53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x3B53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3B53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x40BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x40CA DUP2 PUSH2 0x3919 JUMP JUMPDEST SWAP7 POP PUSH2 0x40D8 PUSH1 0x20 DUP10 ADD PUSH2 0x406F JUMP JUMPDEST SWAP6 POP PUSH2 0x40E6 PUSH1 0x40 DUP10 ADD PUSH2 0x4081 JUMP JUMPDEST SWAP5 POP PUSH2 0x40F4 PUSH1 0x60 DUP10 ADD PUSH2 0x4081 JUMP JUMPDEST SWAP4 POP PUSH2 0x4102 PUSH1 0x80 DUP10 ADD PUSH2 0x4081 JUMP JUMPDEST SWAP3 POP PUSH2 0x4110 PUSH1 0xA0 DUP10 ADD PUSH2 0x4093 JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP9 ADD MLOAD PUSH2 0x4120 DUP2 PUSH2 0x3B3A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71A DUP3 PUSH2 0x4093 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x415D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x4185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x4193 PUSH2 0x3B03 DUP3 PUSH2 0x3ABC JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x41A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41B9 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x38C2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71A DUP3 PUSH2 0x406F JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND ADD PUSH3 0x7FFFFF DUP2 SGT PUSH3 0x7FFFFF NOT DUP3 SLT OR ISZERO PUSH2 0x66C JUMPI PUSH2 0x66C PUSH2 0x3C97 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x2 SIGNEXTEND DUP1 PUSH2 0x4219 JUMPI PUSH2 0x4219 PUSH2 0x3CD7 JUMP JUMPDEST PUSH3 0x7FFFFF NOT DUP3 EQ PUSH1 0x0 NOT DUP3 EQ AND ISZERO PUSH2 0x4233 JUMPI PUSH2 0x4233 PUSH2 0x3C97 JUMP JUMPDEST SWAP1 SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 SIGNEXTEND DUP1 PUSH2 0x424F JUMPI PUSH2 0x424F PUSH2 0x3CD7 JUMP JUMPDEST DUP1 DUP4 PUSH1 0x2 SIGNEXTEND SMOD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP3 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SUB PUSH3 0x7FFFFF NOT DUP2 SLT PUSH3 0x7FFFFF DUP3 SGT OR ISZERO PUSH2 0x66C JUMPI PUSH2 0x66C PUSH2 0x3C97 JUMP JUMPDEST PUSH7 0x2A34B1B5B2B91 PUSH1 0xCD SHL DUP2 MSTORE PUSH1 0x0 DUP6 MLOAD PUSH2 0x42A5 DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x38C2 JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH1 0x1 PUSH1 0xFD SHL DUP1 PUSH1 0x7 DUP4 ADD MSTORE DUP7 MLOAD PUSH2 0x42C8 DUP2 PUSH1 0x8 DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x8 SWAP3 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0x42E3 DUP2 PUSH1 0x9 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x2D PUSH1 0xF8 SHL PUSH1 0x9 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x4305 DUP2 PUSH1 0xA DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x38C2 JUMP JUMPDEST ADD PUSH1 0xA ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3027 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x433A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4359 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4346 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x437B JUMPI PUSH2 0x437B PUSH2 0x3A75 JUMP JUMPDEST PUSH2 0x438F DUP2 PUSH2 0x4389 DUP5 SLOAD PUSH2 0x3C63 JUMP JUMPDEST DUP5 PUSH2 0x4313 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x43C4 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x43AC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x4359 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x43F3 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x43D4 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x4411 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x542D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x0 DUP6 MLOAD PUSH2 0x443E DUP2 PUSH1 0x2 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x5F PUSH1 0xF8 SHL PUSH1 0x2 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x445F DUP2 PUSH1 0x3 DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x38C2 JUMP JUMPDEST DUP1 DUP3 ADD SWAP2 POP POP PUSH1 0x2D PUSH1 0xF8 SHL DUP1 PUSH1 0x3 DUP4 ADD MSTORE DUP6 MLOAD PUSH2 0x4483 DUP2 PUSH1 0x4 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x4 SWAP3 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x449E DUP2 PUSH1 0x5 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x38C2 JUMP JUMPDEST ADD PUSH1 0x5 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH7 0x2930B733B2B91 PUSH1 0xCD SHL DUP2 MSTORE PUSH1 0x0 DUP6 MLOAD PUSH2 0x42A5 DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x38C2 JUMP JUMPDEST PUSH2 0x522D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x0 DUP6 MLOAD PUSH2 0x443E DUP2 PUSH1 0x2 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x71A DUP2 PUSH2 0x3B3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x3F22 JUMPI PUSH2 0x3F22 PUSH2 0x3C97 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x453A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x38C2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0xC3 PUSH5 0x42B4A4522E DUP8 SGT SWAP10 0xCD PUSH18 0x7ABDD847AB11FE88A2646970667358221220 0xAF 0xD0 SWAP9 DIFFICULTY BASEFEE 0xD1 SWAP16 SLOAD DUP5 0xD4 0xA6 0x2C LOG0 SWAP12 MLOAD SWAP6 PUSH31 0x4858D8FB22109859465BEBD27A6C8B64736F6C634300081500330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        677,
        21329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x232"
    },
    "25": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70409194"
    },
    "38": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x130"
    },
    "42": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA5843F08"
    },
    "49": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "GT",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB8"
    },
    "53": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD1F7E92B"
    },
    "60": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "GT",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD1F7E92B"
    },
    "71": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x54E"
    },
    "75": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD3518877"
    },
    "82": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x561"
    },
    "86": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x574"
    },
    "97": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE2BBB158"
    },
    "104": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "105": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5AD"
    },
    "108": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "109": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE3526AF4"
    },
    "115": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "116": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C0"
    },
    "119": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "120": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "123": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "REVERT",
      "path": "1"
    },
    "124": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA5843F08"
    },
    "131": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x502"
    },
    "135": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "142": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "143": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x515"
    },
    "146": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBD865CBA"
    },
    "153": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "154": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x528"
    },
    "157": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "158": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC6098256"
    },
    "164": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "165": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53D"
    },
    "168": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "169": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xCC32D176"
    },
    "175": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "176": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x546"
    },
    "179": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "180": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "183": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "REVERT",
      "path": "1"
    },
    "184": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "185": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "186": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "191": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "GT",
      "path": "1"
    },
    "192": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "196": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "197": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "202": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "203": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BD"
    },
    "206": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "207": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "208": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x99D32FC4"
    },
    "213": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "214": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C5"
    },
    "217": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "218": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "219": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9B1344AC"
    },
    "224": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "225": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CF"
    },
    "228": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "229": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "230": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA41FE49F"
    },
    "235": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "236": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DC"
    },
    "239": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "240": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "241": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA457C2D7"
    },
    "246": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "247": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4EF"
    },
    "250": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "251": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "253": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "254": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "REVERT",
      "path": "1"
    },
    "255": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "256": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "257": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70409194"
    },
    "262": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "263": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x430"
    },
    "266": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "267": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "268": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "273": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "274": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x443"
    },
    "277": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "278": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "279": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x727DD228"
    },
    "284": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "285": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46C"
    },
    "288": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "289": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "290": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x72F5D98A"
    },
    "295": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "296": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x493"
    },
    "299": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "300": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "302": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "303": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "REVERT",
      "path": "1"
    },
    "304": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "305": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "306": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x38013F02"
    },
    "311": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "GT",
      "path": "1"
    },
    "312": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BE"
    },
    "315": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "316": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "317": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x449247AA"
    },
    "322": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "GT",
      "path": "1"
    },
    "323": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x182"
    },
    "326": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "327": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "328": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x449247AA"
    },
    "333": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "334": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D2"
    },
    "337": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "338": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "339": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x470F6E1D"
    },
    "344": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "345": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E5"
    },
    "348": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "349": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "350": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x50D25BCD"
    },
    "355": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "356": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3EE"
    },
    "359": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "360": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "361": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5EE04D78"
    },
    "366": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "367": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F6"
    },
    "370": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "371": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "372": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x61D027B3"
    },
    "377": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "378": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x415"
    },
    "381": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "382": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "384": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "385": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "REVERT",
      "path": "1"
    },
    "386": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "387": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "388": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x38013F02"
    },
    "393": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "394": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x331"
    },
    "397": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "398": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "399": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x39509351"
    },
    "404": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "405": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x344"
    },
    "408": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "409": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "410": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3B4E06E6"
    },
    "415": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "416": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x357"
    },
    "419": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "420": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "421": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x443EC74D"
    },
    "426": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "427": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37F"
    },
    "430": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "431": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "432": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x44919D7B"
    },
    "437": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "438": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3BF"
    },
    "441": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "442": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "444": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "445": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "REVERT",
      "path": "1"
    },
    "446": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "447": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "448": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "453": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "GT",
      "path": "1"
    },
    "454": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x205"
    },
    "457": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "458": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "459": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "464": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "465": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C2"
    },
    "468": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "469": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "470": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1A686502"
    },
    "475": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "476": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CA"
    },
    "479": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "480": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "481": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x200D2ED2"
    },
    "486": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "487": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F5"
    },
    "490": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "491": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "492": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "497": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "498": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30F"
    },
    "501": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "502": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "503": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x313CE567"
    },
    "508": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "509": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x322"
    },
    "512": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "513": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "515": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "516": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "REVERT",
      "path": "1"
    },
    "517": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "518": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "519": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "524": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "525": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x237"
    },
    "528": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "529": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "530": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8BD1A85"
    },
    "535": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "536": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255"
    },
    "539": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "540": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "541": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "546": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "547": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x288"
    },
    "550": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "551": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "552": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x17D70F7C"
    },
    "557": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "EQ",
      "path": "1"
    },
    "558": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AB"
    },
    "561": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "562": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "563": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "565": {
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "566": {
      "first_revert": true,
      "fn": null,
      "offset": [
        677,
        21329
      ],
      "op": "REVERT",
      "path": "1"
    },
    "567": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "568": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23F"
    },
    "571": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C9"
    },
    "574": {
      "fn": "TokenisableRange.name",
      "jump": "i",
      "offset": [
        6747,
        6845
      ],
      "op": "JUMP",
      "path": "1"
    },
    "575": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "576": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "578": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "579": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24C"
    },
    "582": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "583": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "584": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38E6"
    },
    "587": {
      "fn": "TokenisableRange.name",
      "jump": "i",
      "offset": [
        6747,
        6845
      ],
      "op": "JUMP",
      "path": "1"
    },
    "588": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "589": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "591": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "592": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "DUP1",
      "path": "1"
    },
    "593": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "594": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "SUB",
      "path": "1"
    },
    "595": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "596": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "RETURN",
      "path": "1"
    },
    "597": {
      "offset": [
        2055,
        2171
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "598": {
      "fn": "TokenisableRange.name",
      "offset": [
        2055,
        2171
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x270"
    },
    "601": {
      "offset": [
        2128,
        2170
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x1F98431C8AD98523631AE4A59F267346EA31F984"
    },
    "622": {
      "offset": [
        2055,
        2171
      ],
      "op": "DUP2",
      "path": "1"
    },
    "623": {
      "fn": "TokenisableRange.name",
      "offset": [
        2055,
        2171
      ],
      "op": "JUMP",
      "path": "1"
    },
    "624": {
      "fn": "TokenisableRange.name",
      "offset": [
        2055,
        2171
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "625": {
      "fn": "TokenisableRange.name",
      "offset": [
        2055,
        2171
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "627": {
      "fn": "TokenisableRange.name",
      "offset": [
        2055,
        2171
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "634": {
      "op": "SHL"
    },
    "635": {
      "op": "SUB"
    },
    "636": {
      "op": "SWAP1"
    },
    "637": {
      "op": "SWAP2"
    },
    "638": {
      "op": "AND"
    },
    "639": {
      "op": "DUP2"
    },
    "640": {
      "op": "MSTORE"
    },
    "641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "643": {
      "op": "ADD"
    },
    "644": {
      "offset": [
        2055,
        2171
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24C"
    },
    "647": {
      "op": "JUMP"
    },
    "648": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "649": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x29B"
    },
    "652": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x296"
    },
    "655": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "656": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "658": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x3931"
    },
    "661": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMP",
      "path": "43"
    },
    "662": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "663": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x65B"
    },
    "666": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMP",
      "path": "43"
    },
    "667": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "668": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "670": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "671": {
      "op": "SWAP1"
    },
    "672": {
      "op": "ISZERO"
    },
    "673": {
      "op": "ISZERO"
    },
    "674": {
      "op": "DUP2"
    },
    "675": {
      "op": "MSTORE"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "678": {
      "op": "ADD"
    },
    "679": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x24C"
    },
    "682": {
      "op": "JUMP"
    },
    "683": {
      "offset": [
        1159,
        1181
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "684": {
      "fn": "ERC20.approve",
      "offset": [
        1159,
        1181
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B4"
    },
    "687": {
      "fn": "ERC20.approve",
      "offset": [
        1159,
        1181
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "689": {
      "fn": "ERC20.approve",
      "offset": [
        1159,
        1181
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "690": {
      "fn": "ERC20.approve",
      "offset": [
        1159,
        1181
      ],
      "op": "DUP2",
      "path": "1"
    },
    "691": {
      "fn": "ERC20.approve",
      "offset": [
        1159,
        1181
      ],
      "op": "JUMP",
      "path": "1"
    },
    "692": {
      "fn": "ERC20.approve",
      "offset": [
        1159,
        1181
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "693": {
      "fn": "ERC20.approve",
      "offset": [
        1159,
        1181
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "695": {
      "fn": "ERC20.approve",
      "offset": [
        1159,
        1181
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "696": {
      "op": "SWAP1"
    },
    "697": {
      "op": "DUP2"
    },
    "698": {
      "op": "MSTORE"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "701": {
      "op": "ADD"
    },
    "702": {
      "offset": [
        1159,
        1181
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24C"
    },
    "705": {
      "op": "JUMP"
    },
    "706": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "707": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 0,
      "value": "0x2"
    },
    "709": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "710": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2B4"
    },
    "713": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "43"
    },
    "714": {
      "offset": [
        1569,
        1593
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "715": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1569,
        1593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x10"
    },
    "717": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1569,
        1593
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "718": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1569,
        1593
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DD"
    },
    "721": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1569,
        1593
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "728": {
      "op": "SHL"
    },
    "729": {
      "op": "SUB"
    },
    "730": {
      "offset": [
        1569,
        1593
      ],
      "op": "AND",
      "path": "1"
    },
    "731": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1569,
        1593
      ],
      "op": "DUP2",
      "path": "1"
    },
    "732": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1569,
        1593
      ],
      "op": "JUMP",
      "path": "1"
    },
    "733": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1569,
        1593
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "734": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1569,
        1593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "736": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1569,
        1593
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "743": {
      "op": "SHL"
    },
    "744": {
      "op": "SUB"
    },
    "745": {
      "op": "SWAP1"
    },
    "746": {
      "op": "SWAP2"
    },
    "747": {
      "op": "AND"
    },
    "748": {
      "op": "DUP2"
    },
    "749": {
      "op": "MSTORE"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "752": {
      "op": "ADD"
    },
    "753": {
      "offset": [
        1569,
        1593
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24C"
    },
    "756": {
      "op": "JUMP"
    },
    "757": {
      "offset": [
        1509,
        1533
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "758": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "760": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "761": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302"
    },
    "764": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "765": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "767": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "AND",
      "path": "1"
    },
    "768": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "769": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "JUMP",
      "path": "1"
    },
    "770": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "771": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "773": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "774": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24C"
    },
    "777": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "778": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "779": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1509,
        1533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3973"
    },
    "782": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        1509,
        1533
      ],
      "op": "JUMP",
      "path": "1"
    },
    "783": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "784": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x29B"
    },
    "787": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x31D"
    },
    "790": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "791": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "793": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x399B"
    },
    "796": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMP",
      "path": "43"
    },
    "797": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "798": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x672"
    },
    "801": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMP",
      "path": "43"
    },
    "802": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "803": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "805": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "806": {
      "fn": "ERC20.decimals",
      "offset": [
        3160,
        3162
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 1,
      "value": "0x12"
    },
    "808": {
      "op": "DUP2"
    },
    "809": {
      "op": "MSTORE"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "812": {
      "op": "ADD"
    },
    "813": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x24C"
    },
    "816": {
      "op": "JUMP"
    },
    "817": {
      "offset": [
        1359,
        1384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "818": {
      "fn": "ERC20.decimals",
      "offset": [
        1359,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC"
    },
    "820": {
      "fn": "ERC20.decimals",
      "offset": [
        1359,
        1384
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "821": {
      "fn": "ERC20.decimals",
      "offset": [
        1359,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x270"
    },
    "824": {
      "fn": "ERC20.decimals",
      "offset": [
        1359,
        1384
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "831": {
      "op": "SHL"
    },
    "832": {
      "op": "SUB"
    },
    "833": {
      "offset": [
        1359,
        1384
      ],
      "op": "AND",
      "path": "1"
    },
    "834": {
      "fn": "ERC20.decimals",
      "offset": [
        1359,
        1384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "835": {
      "fn": "ERC20.decimals",
      "offset": [
        1359,
        1384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "836": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "837": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x29B"
    },
    "840": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x352"
    },
    "843": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "844": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "846": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x3931"
    },
    "849": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMP",
      "path": "43"
    },
    "850": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "851": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x721"
    },
    "854": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMP",
      "path": "43"
    },
    "855": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "856": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36A"
    },
    "859": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x365"
    },
    "862": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "863": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "865": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39DC"
    },
    "868": {
      "fn": "TokenisableRange.getTokenAmounts",
      "jump": "i",
      "offset": [
        21016,
        21327
      ],
      "op": "JUMP",
      "path": "1"
    },
    "869": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "870": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x75D"
    },
    "873": {
      "fn": "TokenisableRange.getTokenAmounts",
      "jump": "i",
      "offset": [
        21016,
        21327
      ],
      "op": "JUMP",
      "path": "1"
    },
    "874": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "875": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "877": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "DUP1",
      "path": "1"
    },
    "878": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "879": {
      "op": "SWAP3"
    },
    "880": {
      "op": "DUP4"
    },
    "881": {
      "op": "MSTORE"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "884": {
      "op": "DUP4"
    },
    "885": {
      "op": "ADD"
    },
    "886": {
      "op": "SWAP2"
    },
    "887": {
      "op": "SWAP1"
    },
    "888": {
      "op": "SWAP2"
    },
    "889": {
      "op": "MSTORE"
    },
    "890": {
      "op": "ADD"
    },
    "891": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24C"
    },
    "894": {
      "op": "JUMP"
    },
    "895": {
      "offset": [
        1309,
        1328
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "896": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "898": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "899": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39E"
    },
    "902": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "909": {
      "op": "SHL"
    },
    "910": {
      "op": "SUB"
    },
    "911": {
      "offset": [
        1309,
        1328
      ],
      "op": "DUP2",
      "path": "1"
    },
    "912": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "AND",
      "path": "1"
    },
    "913": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "918": {
      "op": "SHL"
    },
    "919": {
      "offset": [
        1309,
        1328
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "920": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "DIV",
      "path": "1"
    },
    "921": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "923": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "AND",
      "path": "1"
    },
    "924": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "DUP3",
      "path": "1"
    },
    "925": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "JUMP",
      "path": "1"
    },
    "926": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "927": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "929": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "DUP1",
      "path": "1"
    },
    "930": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        1309,
        1328
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "937": {
      "op": "SHL"
    },
    "938": {
      "op": "SUB"
    },
    "939": {
      "op": "SWAP1"
    },
    "940": {
      "op": "SWAP4"
    },
    "941": {
      "op": "AND"
    },
    "942": {
      "op": "DUP4"
    },
    "943": {
      "op": "MSTORE"
    },
    "944": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "946": {
      "op": "SWAP1"
    },
    "947": {
      "op": "SWAP2"
    },
    "948": {
      "op": "AND"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "951": {
      "op": "DUP4"
    },
    "952": {
      "op": "ADD"
    },
    "953": {
      "op": "MSTORE"
    },
    "954": {
      "op": "ADD"
    },
    "955": {
      "offset": [
        1309,
        1328
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24C"
    },
    "958": {
      "op": "JUMP"
    },
    "959": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19217,
        19733
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "960": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19217,
        19733
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B4"
    },
    "963": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19217,
        19733
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CD"
    },
    "966": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19217,
        19733
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "967": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19217,
        19733
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "969": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19217,
        19733
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39F5"
    },
    "972": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "jump": "i",
      "offset": [
        19217,
        19733
      ],
      "op": "JUMP",
      "path": "1"
    },
    "973": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19217,
        19733
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "974": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19217,
        19733
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C7"
    },
    "977": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "jump": "i",
      "offset": [
        19217,
        19733
      ],
      "op": "JUMP",
      "path": "1"
    },
    "978": {
      "offset": [
        1679,
        1766
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "979": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        1679,
        1766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x11"
    },
    "981": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        1679,
        1766
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "982": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        1679,
        1766
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x270"
    },
    "985": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        1679,
        1766
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "992": {
      "op": "SHL"
    },
    "993": {
      "op": "SUB"
    },
    "994": {
      "offset": [
        1679,
        1766
      ],
      "op": "AND",
      "path": "1"
    },
    "995": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        1679,
        1766
      ],
      "op": "DUP2",
      "path": "1"
    },
    "996": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        1679,
        1766
      ],
      "op": "JUMP",
      "path": "1"
    },
    "997": {
      "offset": [
        1772,
        1811
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "998": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        1772,
        1811
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B4"
    },
    "1001": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        1772,
        1811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x12"
    },
    "1003": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        1772,
        1811
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1004": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        1772,
        1811
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1005": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        1772,
        1811
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1006": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19788,
        20044
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1007": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19788,
        20044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B4"
    },
    "1010": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19788,
        20044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x88A"
    },
    "1013": {
      "fn": "TokenisableRange.latestAnswer",
      "jump": "i",
      "offset": [
        19788,
        20044
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1014": {
      "offset": [
        1334,
        1353
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1015": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        1334,
        1353
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "1017": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        1334,
        1353
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1018": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        1334,
        1353
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39E"
    },
    "1021": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        1334,
        1353
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1028": {
      "op": "SHL"
    },
    "1029": {
      "op": "SUB"
    },
    "1030": {
      "offset": [
        1334,
        1353
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1031": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        1334,
        1353
      ],
      "op": "AND",
      "path": "1"
    },
    "1032": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        1334,
        1353
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1037": {
      "op": "SHL"
    },
    "1038": {
      "offset": [
        1334,
        1353
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1039": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        1334,
        1353
      ],
      "op": "DIV",
      "path": "1"
    },
    "1040": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        1334,
        1353
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1042": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        1334,
        1353
      ],
      "op": "AND",
      "path": "1"
    },
    "1043": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        1334,
        1353
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1044": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        1334,
        1353
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1045": {
      "offset": [
        2177,
        2262
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1046": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        2177,
        2262
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x270"
    },
    "1049": {
      "offset": [
        2220,
        2262
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x22CC3F665BA4C898226353B672C5123C58751692"
    },
    "1070": {
      "offset": [
        2177,
        2262
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1071": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        2177,
        2262
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1072": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18727,
        19037
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1073": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18727,
        19037
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36A"
    },
    "1076": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18727,
        19037
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43E"
    },
    "1079": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18727,
        19037
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1080": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18727,
        19037
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1082": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18727,
        19037
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39F5"
    },
    "1085": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "jump": "i",
      "offset": [
        18727,
        19037
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1086": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18727,
        19037
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1087": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18727,
        19037
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x975"
    },
    "1090": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "jump": "i",
      "offset": [
        18727,
        19037
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1091": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1092": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2B4"
    },
    "1095": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x451"
    },
    "1098": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "1099": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1101": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x3A17"
    },
    "1104": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1105": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1112": {
      "op": "SHL"
    },
    "1113": {
      "op": "SUB"
    },
    "1114": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "AND",
      "path": "43",
      "statement": 2
    },
    "1115": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3467,
        3474
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1117": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1118": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1119": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1120": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "1122": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1123": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1124": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1125": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1127": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1128": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "1129": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "1130": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1131": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1132": {
      "offset": [
        1103,
        1125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1133": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1103,
        1125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1135": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1103,
        1125
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1136": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1103,
        1125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x480"
    },
    "1139": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1103,
        1125
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1140": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1103,
        1125
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1000000"
    },
    "1145": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1103,
        1125
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1146": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1103,
        1125
      ],
      "op": "DIV",
      "path": "1"
    },
    "1147": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1103,
        1125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1149": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1103,
        1125
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "1150": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1103,
        1125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1151": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1103,
        1125
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1152": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1103,
        1125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1153": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1103,
        1125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1155": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1103,
        1125
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1158": {
      "op": "SWAP2"
    },
    "1159": {
      "op": "SWAP1"
    },
    "1160": {
      "op": "SWAP2"
    },
    "1161": {
      "op": "SIGNEXTEND"
    },
    "1162": {
      "op": "DUP2"
    },
    "1163": {
      "op": "MSTORE"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1166": {
      "op": "ADD"
    },
    "1167": {
      "offset": [
        1103,
        1125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24C"
    },
    "1170": {
      "op": "JUMP"
    },
    "1171": {
      "offset": [
        1131,
        1152
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1172": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1131,
        1152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1174": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1131,
        1152
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1175": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1131,
        1152
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A9"
    },
    "1178": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1131,
        1152
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "1183": {
      "op": "SHL"
    },
    "1184": {
      "offset": [
        1131,
        1152
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1185": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1131,
        1152
      ],
      "op": "DIV",
      "path": "1"
    },
    "1186": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1131,
        1152
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "1190": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1131,
        1152
      ],
      "op": "AND",
      "path": "1"
    },
    "1191": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1131,
        1152
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1192": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1131,
        1152
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1193": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1131,
        1152
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1194": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1131,
        1152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1196": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1131,
        1152
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1197": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "1201": {
      "op": "SWAP1"
    },
    "1202": {
      "op": "SWAP2"
    },
    "1203": {
      "op": "AND"
    },
    "1204": {
      "op": "DUP2"
    },
    "1205": {
      "op": "MSTORE"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1208": {
      "op": "ADD"
    },
    "1209": {
      "offset": [
        1131,
        1152
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24C"
    },
    "1212": {
      "op": "JUMP"
    },
    "1213": {
      "fn": "TokenisableRange.symbol",
      "offset": [
        6905,
        7007
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1214": {
      "fn": "TokenisableRange.symbol",
      "offset": [
        6905,
        7007
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23F"
    },
    "1217": {
      "fn": "TokenisableRange.symbol",
      "offset": [
        6905,
        7007
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9AD"
    },
    "1220": {
      "fn": "TokenisableRange.symbol",
      "jump": "i",
      "offset": [
        6905,
        7007
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1221": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8787,
        11489
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1222": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8787,
        11489
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CD"
    },
    "1225": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8787,
        11489
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9BC"
    },
    "1228": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        8787,
        11489
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1229": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8787,
        11489
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1230": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8787,
        11489
      ],
      "op": "STOP",
      "path": "1"
    },
    "1231": {
      "offset": [
        1075,
        1097
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1232": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        1075,
        1097
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1234": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        1075,
        1097
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1235": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        1075,
        1097
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x480"
    },
    "1238": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        1075,
        1097
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1239": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        1075,
        1097
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1241": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        1075,
        1097
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "1242": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        1075,
        1097
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1243": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        1075,
        1097
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1244": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16083,
        17589
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1245": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16083,
        17589
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36A"
    },
    "1248": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16083,
        17589
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4EA"
    },
    "1251": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16083,
        17589
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1252": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16083,
        17589
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1254": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16083,
        17589
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A34"
    },
    "1257": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        16083,
        17589
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1258": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16083,
        17589
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1259": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16083,
        17589
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFA7"
    },
    "1262": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        16083,
        17589
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1263": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1264": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x29B"
    },
    "1267": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x4FD"
    },
    "1270": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "1271": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1273": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x3931"
    },
    "1276": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1277": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1278": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x1359"
    },
    "1281": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1282": {
      "fn": "TokenisableRange.init",
      "offset": [
        7304,
        8719
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1283": {
      "fn": "TokenisableRange.init",
      "offset": [
        7304,
        8719
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CD"
    },
    "1286": {
      "fn": "TokenisableRange.init",
      "offset": [
        7304,
        8719
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x510"
    },
    "1289": {
      "fn": "TokenisableRange.init",
      "offset": [
        7304,
        8719
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1290": {
      "fn": "TokenisableRange.init",
      "offset": [
        7304,
        8719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1292": {
      "fn": "TokenisableRange.init",
      "offset": [
        7304,
        8719
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39F5"
    },
    "1295": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        7304,
        8719
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1296": {
      "fn": "TokenisableRange.init",
      "offset": [
        7304,
        8719
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1297": {
      "fn": "TokenisableRange.init",
      "offset": [
        7304,
        8719
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13F2"
    },
    "1300": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        7304,
        8719
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1301": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1302": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x29B"
    },
    "1305": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x523"
    },
    "1308": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "1309": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1311": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x3931"
    },
    "1314": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1315": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1316": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x17A9"
    },
    "1319": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1320": {
      "offset": [
        1916,
        2049
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1321": {
      "fn": "ERC20.transfer",
      "offset": [
        1916,
        2049
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x270"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1326": {
      "op": "DUP1"
    },
    "1327": {
      "op": "MLOAD"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1330": {
      "op": "PUSH2",
      "value": "0x4545"
    },
    "1333": {
      "op": "DUP4"
    },
    "1334": {
      "op": "CODECOPY"
    },
    "1335": {
      "op": "DUP2"
    },
    "1336": {
      "op": "MLOAD"
    },
    "1337": {
      "op": "SWAP2"
    },
    "1338": {
      "op": "MSTORE"
    },
    "1339": {
      "offset": [
        1916,
        2049
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1340": {
      "fn": "ERC20.transfer",
      "offset": [
        1916,
        2049
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1341": {
      "offset": [
        1212,
        1231
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1342": {
      "fn": "ERC20.transfer",
      "offset": [
        1212,
        1231
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B4"
    },
    "1345": {
      "fn": "ERC20.transfer",
      "offset": [
        1212,
        1231
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "1347": {
      "fn": "ERC20.transfer",
      "offset": [
        1212,
        1231
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1348": {
      "fn": "ERC20.transfer",
      "offset": [
        1212,
        1231
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1349": {
      "fn": "ERC20.transfer",
      "offset": [
        1212,
        1231
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1350": {
      "offset": [
        2268,
        2305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1351": {
      "fn": "ERC20.transfer",
      "offset": [
        2268,
        2305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B4"
    },
    "1354": {
      "offset": [
        2303,
        2305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x14"
    },
    "1356": {
      "offset": [
        2268,
        2305
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1357": {
      "fn": "ERC20.transfer",
      "offset": [
        2268,
        2305
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1358": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20219,
        20860
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1359": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20219,
        20860
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36A"
    },
    "1362": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20219,
        20860
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x55C"
    },
    "1365": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20219,
        20860
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1366": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20219,
        20860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1368": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20219,
        20860
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39DC"
    },
    "1371": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "jump": "i",
      "offset": [
        20219,
        20860
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1372": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20219,
        20860
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1373": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20219,
        20860
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17B6"
    },
    "1376": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "jump": "i",
      "offset": [
        20219,
        20860
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1377": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1378": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CD"
    },
    "1381": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x56F"
    },
    "1384": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1385": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1387": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B58"
    },
    "1390": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        3131,
        6618
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1391": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1392": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A29"
    },
    "1395": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        3131,
        6618
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1396": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1397": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2B4"
    },
    "1400": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x582"
    },
    "1403": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "1404": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1406": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x3C2A"
    },
    "1409": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1410": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1417": {
      "op": "SHL"
    },
    "1418": {
      "op": "SUB"
    },
    "1419": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "SWAP2",
      "path": "43",
      "statement": 3
    },
    "1420": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1421": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "AND",
      "path": "43"
    },
    "1422": {
      "fn": "ERC20.allowance",
      "offset": [
        4040,
        4047
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1424": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1425": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1426": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1427": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4077
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1"
    },
    "1429": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "1431": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1432": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1433": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1434": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1436": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1437": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP4",
      "path": "43"
    },
    "1438": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "1439": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP4",
      "path": "43"
    },
    "1440": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1441": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP5",
      "path": "43"
    },
    "1442": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "AND",
      "path": "43"
    },
    "1443": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1444": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1445": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1446": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1447": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1448": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1449": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "1450": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "1451": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1452": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1453": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11670,
        15856
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1454": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11670,
        15856
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B4"
    },
    "1457": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11670,
        15856
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5BB"
    },
    "1460": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11670,
        15856
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1461": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11670,
        15856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1463": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11670,
        15856
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39F5"
    },
    "1466": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        11670,
        15856
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1467": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11670,
        15856
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1468": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11670,
        15856
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21CF"
    },
    "1471": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        11670,
        15856
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1472": {
      "offset": [
        1187,
        1206
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1473": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        1187,
        1206
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B4"
    },
    "1476": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        1187,
        1206
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1478": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        1187,
        1206
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1479": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        1187,
        1206
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1480": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        1187,
        1206
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1481": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1482": {
      "fn": "TokenisableRange.name",
      "offset": [
        6801,
        6814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1484": {
      "fn": "TokenisableRange.name",
      "offset": [
        6833,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0xD"
    },
    "1486": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1487": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1488": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D8"
    },
    "1491": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1492": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C63"
    },
    "1495": {
      "fn": "TokenisableRange.name",
      "jump": "i",
      "offset": [
        6826,
        6838
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1496": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1497": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1498": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1500": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "ADD",
      "path": "1"
    },
    "1501": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1503": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1504": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1505": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DIV",
      "path": "1"
    },
    "1506": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "MUL",
      "path": "1"
    },
    "1507": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1509": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "ADD",
      "path": "1"
    },
    "1510": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1512": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1513": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1514": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1515": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "ADD",
      "path": "1"
    },
    "1516": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1518": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1519": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1520": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1521": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1522": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1523": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1524": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1525": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1526": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1528": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "ADD",
      "path": "1"
    },
    "1529": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1530": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1531": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1532": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x604"
    },
    "1535": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1536": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C63"
    },
    "1539": {
      "fn": "TokenisableRange.name",
      "jump": "i",
      "offset": [
        6826,
        6838
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1540": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1541": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1542": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1543": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x651"
    },
    "1546": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1547": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1548": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1550": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "LT",
      "path": "1"
    },
    "1551": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x626"
    },
    "1554": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1555": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1558": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1559": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1560": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1561": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DIV",
      "path": "1"
    },
    "1562": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "MUL",
      "path": "1"
    },
    "1563": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1564": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1565": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1566": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1568": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "ADD",
      "path": "1"
    },
    "1569": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1570": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x651"
    },
    "1573": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1574": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1575": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1576": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "ADD",
      "path": "1"
    },
    "1577": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1578": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1579": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1581": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1582": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1584": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1586": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1587": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1588": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1589": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1590": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1591": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1592": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1593": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1594": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1596": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "ADD",
      "path": "1"
    },
    "1597": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1598": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1600": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "ADD",
      "path": "1"
    },
    "1601": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1602": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1603": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "GT",
      "path": "1"
    },
    "1604": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x634"
    },
    "1607": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1608": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1609": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1610": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SUB",
      "path": "1"
    },
    "1611": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1613": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "AND",
      "path": "1"
    },
    "1614": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1615": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "ADD",
      "path": "1"
    },
    "1616": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1617": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1618": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "POP",
      "path": "1"
    },
    "1619": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "POP",
      "path": "1"
    },
    "1620": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "POP",
      "path": "1"
    },
    "1621": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "POP",
      "path": "1"
    },
    "1622": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "POP",
      "path": "1"
    },
    "1623": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1624": {
      "fn": "TokenisableRange.name",
      "offset": [
        6826,
        6838
      ],
      "op": "POP",
      "path": "1"
    },
    "1625": {
      "fn": "TokenisableRange.name",
      "offset": [
        6747,
        6845
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1626": {
      "fn": "TokenisableRange.name",
      "jump": "o",
      "offset": [
        6747,
        6845
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1627": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1628": {
      "fn": "ERC20.approve",
      "offset": [
        4321,
        4325
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1630": {
      "fn": "ERC20.approve",
      "offset": [
        4337,
        4376
      ],
      "op": "PUSH2",
      "path": "43",
      "statement": 5,
      "value": "0x668"
    },
    "1633": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70",
      "statement": 6
    },
    "1634": {
      "fn": "ERC20.approve",
      "offset": [
        4360,
        4367
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1635": {
      "fn": "ERC20.approve",
      "offset": [
        4369,
        4375
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1636": {
      "fn": "ERC20.approve",
      "offset": [
        4337,
        4345
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2B2C"
    },
    "1639": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4337,
        4376
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1640": {
      "fn": "ERC20.approve",
      "offset": [
        4337,
        4376
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1641": {
      "op": "POP"
    },
    "1642": {
      "fn": "ERC20.approve",
      "offset": [
        4393,
        4397
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 7,
      "value": "0x1"
    },
    "1644": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1645": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "1646": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1647": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "POP",
      "path": "43"
    },
    "1648": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "POP",
      "path": "43"
    },
    "1649": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1657": {
      "op": "SHL"
    },
    "1658": {
      "op": "SUB"
    },
    "1659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP4",
      "path": "43"
    },
    "1660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "AND",
      "path": "43"
    },
    "1661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5007,
        5011
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1663": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5061
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1"
    },
    "1668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "1670": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1671": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1673": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1675": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1676": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP4",
      "path": "43"
    },
    "1677": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "1678": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "1679": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1680": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1682": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1684": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1685": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "1686": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "1687": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5101,
        5127
      ],
      "op": "DUP3",
      "path": "43",
      "statement": 8
    },
    "1688": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5101,
        5127
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1689": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5101,
        5127
      ],
      "op": "LT",
      "path": "43"
    },
    "1690": {
      "branch": 193,
      "fn": "ERC20.transferFrom",
      "offset": [
        5101,
        5127
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6FC"
    },
    "1694": {
      "branch": 193,
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1695": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1698": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1706": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1709": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1711": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1712": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "ADD",
      "path": "43"
    },
    "1713": {
      "op": "MSTORE"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1718": {
      "op": "DUP3"
    },
    "1719": {
      "op": "ADD"
    },
    "1720": {
      "op": "MSTORE"
    },
    "1721": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1756": {
      "op": "DUP3"
    },
    "1757": {
      "op": "ADD"
    },
    "1758": {
      "op": "MSTORE"
    },
    "1759": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1770": {
      "op": "SHL"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1773": {
      "op": "DUP3"
    },
    "1774": {
      "op": "ADD"
    },
    "1775": {
      "op": "MSTORE"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1778": {
      "op": "ADD"
    },
    "1779": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1782": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1783": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1784": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1785": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "SUB",
      "path": "43"
    },
    "1786": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1787": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "43"
    },
    "1788": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1789": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5206,
        5263
      ],
      "op": "PUSH2",
      "path": "43",
      "statement": 9,
      "value": "0x709"
    },
    "1792": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5215,
        5221
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1793": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "1794": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5256,
        5262
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1795": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5237,
        5253
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1796": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5237,
        5262
      ],
      "op": "SUB",
      "path": "43"
    },
    "1797": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5206,
        5214
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2B2C"
    },
    "1800": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5206,
        5263
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1801": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5206,
        5263
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1802": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5284,
        5320
      ],
      "op": "PUSH2",
      "path": "43",
      "statement": 10,
      "value": "0x714"
    },
    "1805": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5294,
        5300
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1806": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5302,
        5311
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1807": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5313,
        5319
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1808": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5284,
        5293
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2C50"
    },
    "1811": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5284,
        5320
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1812": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5284,
        5320
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1813": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5338,
        5342
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 11,
      "value": "0x1"
    },
    "1815": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5331,
        5342
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1816": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5331,
        5342
      ],
      "op": "POP",
      "path": "43"
    },
    "1817": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5331,
        5342
      ],
      "op": "POP",
      "path": "43"
    },
    "1818": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1819": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "SWAP4",
      "path": "43"
    },
    "1820": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "1821": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "POP",
      "path": "43"
    },
    "1822": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "POP",
      "path": "43"
    },
    "1823": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "POP",
      "path": "43"
    },
    "1824": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1825": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1826": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "1827": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5832,
        5836
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1829": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP2",
      "path": "43",
      "statement": 12
    },
    "1830": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1831": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5891
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1"
    },
    "1834": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "1836": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1837": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1838": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1839": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1841": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1842": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP4",
      "path": "43"
    },
    "1843": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1850": {
      "op": "SHL"
    },
    "1851": {
      "op": "SUB"
    },
    "1852": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "DUP8",
      "path": "43"
    },
    "1853": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "AND",
      "path": "43"
    },
    "1854": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1855": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1856": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1857": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1858": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1859": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1860": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "1861": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "1862": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5832,
        5836
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1863": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5832,
        5836
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1864": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        5928
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x668"
    },
    "1867": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        5928
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1868": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        5878
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1869": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        5878
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1870": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x758"
    },
    "1873": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1874": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5917,
        5927
      ],
      "op": "DUP7",
      "path": "43"
    },
    "1875": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5917,
        5927
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1876": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x3CAD"
    },
    "1879": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5880,
        5927
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1880": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1881": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        5856
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2B2C"
    },
    "1884": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5848,
        5928
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1885": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1886": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21091,
        21108
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1888": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21110,
        21127
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1889": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21170,
        21206
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 13,
      "value": "0x769"
    },
    "1892": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21199,
        21205
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1893": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21170,
        21198
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17B6"
    },
    "1896": {
      "fn": "TokenisableRange.getTokenAmounts",
      "jump": "i",
      "offset": [
        21170,
        21206
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1897": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21170,
        21206
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1898": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "1900": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "1901": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21139,
        21206
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1902": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21139,
        21206
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1903": {
      "op": "POP"
    },
    "1904": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21139,
        21206
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1905": {
      "op": "POP"
    },
    "1906": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21240,
        21246
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 14
    },
    "1907": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21233,
        21237
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1909": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21233,
        21237
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1910": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21233,
        21246
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x77F"
    },
    "1913": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21233,
        21246
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1914": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21233,
        21246
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1915": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21233,
        21246
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "1918": {
      "fn": "TokenisableRange.getTokenAmounts",
      "jump": "i",
      "offset": [
        21233,
        21246
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1919": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21233,
        21246
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1920": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21232,
        21263
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x789"
    },
    "1923": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21232,
        21263
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1924": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21232,
        21263
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1925": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21232,
        21263
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "1928": {
      "fn": "TokenisableRange.getTokenAmounts",
      "jump": "i",
      "offset": [
        21232,
        21263
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1929": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21232,
        21263
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1930": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21216,
        21263
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x793"
    },
    "1933": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21216,
        21263
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1934": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21216,
        21263
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1935": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21216,
        21263
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "1938": {
      "fn": "TokenisableRange.getTokenAmounts",
      "jump": "i",
      "offset": [
        21216,
        21263
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1939": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21216,
        21263
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1940": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21216,
        21263
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1941": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21216,
        21263
      ],
      "op": "POP",
      "path": "1"
    },
    "1942": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21307,
        21320
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 15,
      "value": "0x79E"
    },
    "1945": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "1947": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "1948": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1949": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1950": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21307,
        21320
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1951": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21297,
        21303
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1952": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21290,
        21294
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "1954": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21290,
        21294
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1955": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21290,
        21303
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7AC"
    },
    "1958": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21290,
        21303
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1959": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21290,
        21303
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1960": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21290,
        21303
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "1963": {
      "fn": "TokenisableRange.getTokenAmounts",
      "jump": "i",
      "offset": [
        21290,
        21303
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1964": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21290,
        21303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1965": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21289,
        21320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7B6"
    },
    "1968": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21289,
        21320
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1969": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21289,
        21320
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1970": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21289,
        21320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "1973": {
      "fn": "TokenisableRange.getTokenAmounts",
      "jump": "i",
      "offset": [
        21289,
        21320
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1974": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21289,
        21320
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1975": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21273,
        21320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C0"
    },
    "1978": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21273,
        21320
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1979": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21273,
        21320
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1980": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21273,
        21320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "1983": {
      "fn": "TokenisableRange.getTokenAmounts",
      "jump": "i",
      "offset": [
        21273,
        21320
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1984": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21273,
        21320
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1985": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21273,
        21320
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1986": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21273,
        21320
      ],
      "op": "POP",
      "path": "1"
    },
    "1987": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1988": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "POP",
      "path": "1"
    },
    "1989": {
      "fn": "TokenisableRange.getTokenAmounts",
      "offset": [
        21016,
        21327
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1990": {
      "fn": "TokenisableRange.getTokenAmounts",
      "jump": "o",
      "offset": [
        21016,
        21327
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1991": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19217,
        19733
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1992": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19328,
        19345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1994": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19361,
        19374
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7D2"
    },
    "1997": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "1999": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "2000": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "2001": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "43"
    },
    "2002": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19361,
        19374
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2003": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19378,
        19379
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2005": {
      "branch": 164,
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19361,
        19379
      ],
      "op": "SUB",
      "path": "1"
    },
    "2006": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19357,
        19389
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E1"
    },
    "2009": {
      "branch": 164,
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19357,
        19389
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2010": {
      "op": "POP"
    },
    "2011": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19388,
        19389
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0x0"
    },
    "2013": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19381,
        19389
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66C"
    },
    "2016": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19381,
        19389
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2017": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19357,
        19389
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2018": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19400,
        19412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2020": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19414,
        19426
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2021": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19430,
        19513
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7EE"
    },
    "2024": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19465,
        19477
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2025": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19491,
        19503
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2026": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19430,
        19451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x975"
    },
    "2029": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "jump": "i",
      "offset": [
        19430,
        19513
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2030": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19430,
        19513
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2031": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19658,
        19664
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "2033": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19658,
        19673
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2034": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19399,
        19513
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2035": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19399,
        19513
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2036": {
      "op": "POP"
    },
    "2037": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19399,
        19513
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2038": {
      "op": "POP"
    },
    "2039": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19523,
        19538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2041": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19523,
        19538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2042": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19652,
        19673
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x80E"
    },
    "2045": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19652,
        19673
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19658,
        19673
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2052": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19658,
        19673
      ],
      "op": "DIV",
      "path": "1"
    },
    "2053": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19658,
        19673
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2055": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19658,
        19673
      ],
      "op": "AND",
      "path": "1"
    },
    "2056": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19652,
        19654
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "2058": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19652,
        19673
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "2061": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "jump": "i",
      "offset": [
        19652,
        19673
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2062": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19652,
        19673
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2063": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19616,
        19635
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x818"
    },
    "2066": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19623,
        19635
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2067": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19616,
        19620
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2068": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19616,
        19635
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "2071": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "jump": "i",
      "offset": [
        19616,
        19635
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2072": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19616,
        19635
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2073": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19615,
        19674
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x822"
    },
    "2076": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19615,
        19674
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2077": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19615,
        19674
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2078": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19615,
        19674
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "2081": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "jump": "i",
      "offset": [
        19615,
        19674
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2082": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19615,
        19674
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2083": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19584,
        19590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "2085": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19584,
        19599
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2086": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19584,
        19599
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2087": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19578,
        19599
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x83B"
    },
    "2090": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19578,
        19599
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2095": {
      "op": "SHL"
    },
    "2096": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19584,
        19599
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2097": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19584,
        19599
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2098": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19584,
        19599
      ],
      "op": "DIV",
      "path": "1"
    },
    "2099": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19584,
        19599
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2101": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19584,
        19599
      ],
      "op": "AND",
      "path": "1"
    },
    "2102": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19584,
        19599
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2103": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19578,
        19599
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "2106": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "jump": "i",
      "offset": [
        19578,
        19599
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2107": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19578,
        19599
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2108": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19542,
        19561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x845"
    },
    "2111": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19557,
        19561
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2112": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19542,
        19554
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2113": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19542,
        19561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "2116": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "jump": "i",
      "offset": [
        19542,
        19561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2117": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19542,
        19561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2118": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19541,
        19600
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x84F"
    },
    "2121": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19541,
        19600
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2122": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19541,
        19600
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2123": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19541,
        19600
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "2126": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "jump": "i",
      "offset": [
        19541,
        19600
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2127": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19541,
        19600
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2128": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19541,
        19674
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x859"
    },
    "2131": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19541,
        19674
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2132": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19541,
        19674
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2133": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19541,
        19674
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "2136": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "jump": "i",
      "offset": [
        19541,
        19674
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2137": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19541,
        19674
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2138": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19523,
        19674
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2139": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19523,
        19674
      ],
      "op": "POP",
      "path": "1"
    },
    "2140": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19713,
        19726
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 17,
      "value": "0x864"
    },
    "2143": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "2145": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "2146": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "2147": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "43"
    },
    "2148": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19713,
        19726
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2149": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19692,
        19709
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x876"
    },
    "2152": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19692,
        19702
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2153": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19705,
        19709
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDE0B6B3A7640000"
    },
    "2162": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19692,
        19709
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "2165": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "jump": "i",
      "offset": [
        19692,
        19709
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2166": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19692,
        19709
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2167": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19691,
        19726
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x880"
    },
    "2170": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19691,
        19726
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2171": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19691,
        19726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2172": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19691,
        19726
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "2175": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "jump": "i",
      "offset": [
        19691,
        19726
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2176": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19691,
        19726
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2177": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19684,
        19726
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "2178": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "offset": [
        19217,
        19733
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "2179": {
      "op": "POP"
    },
    "2180": {
      "op": "POP"
    },
    "2181": {
      "op": "POP"
    },
    "2182": {
      "op": "POP"
    },
    "2183": {
      "op": "POP"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "fn": "TokenisableRange.getValuePerLPAtPrice",
      "jump": "o",
      "offset": [
        19217,
        19733
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2186": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19788,
        20044
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2187": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19925
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0xC"
    },
    "2189": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19925
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2190": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19948,
        19954
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "2192": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19948,
        19960
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2193": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2195": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2196": {
      "op": "PUSH4",
      "value": "0xB3596F07"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2203": {
      "op": "SHL"
    },
    "2204": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2205": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2212": {
      "op": "SHL"
    },
    "2213": {
      "op": "SUB"
    },
    "2214": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19948,
        19960
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2215": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19948,
        19960
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2216": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19948,
        19960
      ],
      "op": "AND",
      "path": "1"
    },
    "2217": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2219": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2220": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "ADD",
      "path": "1"
    },
    "2221": {
      "op": "MSTORE"
    },
    "2222": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19833,
        19850
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2224": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19833,
        19850
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2225": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19881,
        20037
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x970"
    },
    "2228": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19881,
        20037
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2229": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19925
      ],
      "op": "AND",
      "path": "1"
    },
    "2230": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19925
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2231": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19939
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB3596F07"
    },
    "2236": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19939
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2239": {
      "op": "ADD"
    },
    "2240": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2242": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2244": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2245": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2246": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2247": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "SUB",
      "path": "1"
    },
    "2248": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2249": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2250": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "GAS",
      "path": "1"
    },
    "2251": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2252": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2253": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2254": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2255": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8DC"
    },
    "2258": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2259": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2260": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2262": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2263": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2264": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2265": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2267": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2268": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2269": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "POP",
      "path": "1"
    },
    "2270": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "POP",
      "path": "1"
    },
    "2271": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "POP",
      "path": "1"
    },
    "2272": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "POP",
      "path": "1"
    },
    "2273": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2275": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2276": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2277": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2279": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "NOT",
      "path": "1"
    },
    "2280": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2282": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2283": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "ADD",
      "path": "1"
    },
    "2284": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "AND",
      "path": "1"
    },
    "2285": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2286": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "ADD",
      "path": "1"
    },
    "2287": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2288": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2290": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2291": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "POP",
      "path": "1"
    },
    "2292": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2293": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "ADD",
      "path": "1"
    },
    "2294": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2295": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x900"
    },
    "2298": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2299": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2300": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DF4"
    },
    "2303": {
      "fn": "TokenisableRange.latestAnswer",
      "jump": "i",
      "offset": [
        19919,
        19962
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2304": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19919,
        19962
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2305": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        19986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC"
    },
    "2307": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        19986
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2308": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        20009,
        20015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "2310": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        20009,
        20021
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2311": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2313": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2314": {
      "op": "PUSH4",
      "value": "0xB3596F07"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2321": {
      "op": "SHL"
    },
    "2322": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2323": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2330": {
      "op": "SHL"
    },
    "2331": {
      "op": "SUB"
    },
    "2332": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        20009,
        20021
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2333": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        20009,
        20021
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2334": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        20009,
        20021
      ],
      "op": "AND",
      "path": "1"
    },
    "2335": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2337": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2338": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "ADD",
      "path": "1"
    },
    "2339": {
      "op": "MSTORE"
    },
    "2340": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        19986
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2341": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        19986
      ],
      "op": "AND",
      "path": "1"
    },
    "2342": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        19986
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2343": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20000
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB3596F07"
    },
    "2348": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20000
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2351": {
      "op": "ADD"
    },
    "2352": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2354": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2356": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2357": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2358": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2359": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "SUB",
      "path": "1"
    },
    "2360": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2361": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2362": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "GAS",
      "path": "1"
    },
    "2363": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2364": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2365": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2366": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2367": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x94C"
    },
    "2370": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2371": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2372": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2374": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2375": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2376": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2377": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2379": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2380": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2381": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "POP",
      "path": "1"
    },
    "2382": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "POP",
      "path": "1"
    },
    "2383": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "POP",
      "path": "1"
    },
    "2384": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "POP",
      "path": "1"
    },
    "2385": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2387": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2388": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2389": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2391": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "NOT",
      "path": "1"
    },
    "2392": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2394": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2395": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "ADD",
      "path": "1"
    },
    "2396": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "AND",
      "path": "1"
    },
    "2397": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2398": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "ADD",
      "path": "1"
    },
    "2399": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2400": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2402": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2403": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "POP",
      "path": "1"
    },
    "2404": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2405": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "ADD",
      "path": "1"
    },
    "2406": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2407": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CD"
    },
    "2410": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2411": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2412": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19980,
        20023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DF4"
    },
    "2415": {
      "fn": "TokenisableRange.latestAnswer",
      "jump": "i",
      "offset": [
        19980,
        20023
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2416": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19881,
        20037
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2417": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19862,
        20037
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2418": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19862,
        20037
      ],
      "op": "POP",
      "path": "1"
    },
    "2419": {
      "fn": "TokenisableRange.latestAnswer",
      "offset": [
        19788,
        20044
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2420": {
      "fn": "TokenisableRange.latestAnswer",
      "jump": "o",
      "offset": [
        19788,
        20044
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2421": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18727,
        19037
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2422": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18839,
        18851
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2424": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18853,
        18865
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2425": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18892,
        18986
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 19,
      "value": "0x982"
    },
    "2428": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18938,
        18950
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2429": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18964,
        18976
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2430": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18892,
        18924
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E20"
    },
    "2433": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "jump": "i",
      "offset": [
        18892,
        18986
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2434": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18892,
        18986
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2435": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        19004,
        19008
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 20,
      "value": "0x8"
    },
    "2437": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        19004,
        19008
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2438": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18877,
        18986
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2439": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18877,
        18986
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2440": {
      "op": "POP"
    },
    "2441": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18877,
        18986
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2442": {
      "op": "POP"
    },
    "2443": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18996,
        19008
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x994"
    },
    "2446": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18996,
        19008
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2447": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18877,
        18986
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2448": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18996,
        19008
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "2451": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "jump": "i",
      "offset": [
        18996,
        19008
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2452": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18996,
        19008
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2453": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18996,
        19008
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2454": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18996,
        19008
      ],
      "op": "POP",
      "path": "1"
    },
    "2455": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        19026,
        19030
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 21,
      "value": "0x9"
    },
    "2457": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        19026,
        19030
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2458": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        19018,
        19030
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2459": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        19018,
        19030
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9A4"
    },
    "2462": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        19018,
        19030
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2463": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        19018,
        19030
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2464": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        19018,
        19030
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "2467": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "jump": "i",
      "offset": [
        19018,
        19030
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2468": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        19018,
        19030
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2469": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        19018,
        19030
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2470": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        19018,
        19030
      ],
      "op": "POP",
      "path": "1"
    },
    "2471": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18727,
        19037
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2472": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18727,
        19037
      ],
      "op": "POP",
      "path": "1"
    },
    "2473": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18727,
        19037
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2474": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18727,
        19037
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2475": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "offset": [
        18727,
        19037
      ],
      "op": "POP",
      "path": "1"
    },
    "2476": {
      "fn": "TokenisableRange.returnExpectedBalance",
      "jump": "o",
      "offset": [
        18727,
        19037
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2477": {
      "fn": "TokenisableRange.symbol",
      "offset": [
        6905,
        7007
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2478": {
      "fn": "TokenisableRange.symbol",
      "offset": [
        6961,
        6974
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2480": {
      "fn": "TokenisableRange.symbol",
      "offset": [
        6993,
        7000
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 22,
      "value": "0xE"
    },
    "2482": {
      "fn": "TokenisableRange.symbol",
      "offset": [
        6986,
        7000
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2483": {
      "fn": "TokenisableRange.symbol",
      "offset": [
        6986,
        7000
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2484": {
      "fn": "TokenisableRange.symbol",
      "offset": [
        6986,
        7000
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D8"
    },
    "2487": {
      "fn": "TokenisableRange.symbol",
      "offset": [
        6986,
        7000
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2488": {
      "fn": "TokenisableRange.symbol",
      "offset": [
        6986,
        7000
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C63"
    },
    "2491": {
      "fn": "TokenisableRange.symbol",
      "jump": "i",
      "offset": [
        6986,
        7000
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2492": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8787,
        11489
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2493": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2495": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2496": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2497": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2499": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2500": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "ADD",
      "path": "1"
    },
    "2501": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2502": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2503": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8959,
        8966
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "2505": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8959,
        8966
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2506": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2507": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2508": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9003,
        9007
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "2509": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2511": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2512": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "ADD",
      "path": "1"
    },
    "2513": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2520": {
      "op": "SHL"
    },
    "2521": {
      "op": "SUB"
    },
    "2522": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2523": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2524": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "ADD",
      "path": "1"
    },
    "2525": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2526": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2527": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2528": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2530": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2531": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "ADD",
      "path": "1"
    },
    "2532": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2533": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2534": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2535": {
      "op": "PUSH4",
      "value": "0xFC6F7865"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2542": {
      "op": "SHL"
    },
    "2543": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2544": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2545": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8825,
        8840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2547": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8825,
        8840
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2548": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8825,
        8840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2549": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8825,
        8840
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2552": {
      "op": "DUP1"
    },
    "2553": {
      "op": "MLOAD"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2556": {
      "op": "PUSH2",
      "value": "0x4545"
    },
    "2559": {
      "op": "DUP4"
    },
    "2560": {
      "op": "CODECOPY"
    },
    "2561": {
      "op": "DUP2"
    },
    "2562": {
      "op": "MLOAD"
    },
    "2563": {
      "op": "SWAP2"
    },
    "2564": {
      "op": "MSTORE"
    },
    "2565": {
      "offset": [
        2006,
        2048
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2566": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        8876
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFC6F7865"
    },
    "2571": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        8876
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2572": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA18"
    },
    "2575": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2576": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8890,
        9117
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2577": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2579": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "ADD",
      "path": "1"
    },
    "2580": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E0D"
    },
    "2583": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        8861,
        9127
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2584": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2585": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2587": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2588": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2589": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2590": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2591": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "SUB",
      "path": "1"
    },
    "2592": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2593": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2595": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2596": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "GAS",
      "path": "1"
    },
    "2597": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "CALL",
      "path": "1"
    },
    "2598": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2599": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2600": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2601": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA36"
    },
    "2604": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2605": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2606": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2608": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2609": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2610": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2611": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2613": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2614": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2615": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "POP",
      "path": "1"
    },
    "2616": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "POP",
      "path": "1"
    },
    "2617": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "POP",
      "path": "1"
    },
    "2618": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "POP",
      "path": "1"
    },
    "2619": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2621": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2622": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2623": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2625": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "NOT",
      "path": "1"
    },
    "2626": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2628": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2629": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "ADD",
      "path": "1"
    },
    "2630": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "AND",
      "path": "1"
    },
    "2631": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2632": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "ADD",
      "path": "1"
    },
    "2633": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2634": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2636": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2637": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "POP",
      "path": "1"
    },
    "2638": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2639": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "ADD",
      "path": "1"
    },
    "2640": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2641": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5A"
    },
    "2644": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2645": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2646": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E50"
    },
    "2649": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        8861,
        9127
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2650": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8861,
        9127
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2651": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8824,
        9127
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2652": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8824,
        9127
      ],
      "op": "POP",
      "path": "1"
    },
    "2653": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8824,
        9127
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2654": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8824,
        9127
      ],
      "op": "POP",
      "path": "1"
    },
    "2655": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9211,
        9218
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2656": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9222,
        9223
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2658": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9211,
        9223
      ],
      "op": "EQ",
      "path": "1"
    },
    "2659": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9210,
        9242
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2660": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9210,
        9242
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2661": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9210,
        9242
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA6C"
    },
    "2664": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9210,
        9242
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2665": {
      "op": "POP"
    },
    "2666": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9229,
        9241
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2667": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9229,
        9241
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2668": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9210,
        9242
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2669": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9206,
        9251
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2670": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9206,
        9251
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA75"
    },
    "2673": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9206,
        9251
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2674": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9244,
        9251
      ],
      "op": "POP",
      "path": "1",
      "statement": 23
    },
    "2675": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9244,
        9251
      ],
      "op": "POP",
      "path": "1"
    },
    "2676": {
      "fn": "TokenisableRange.claimFee",
      "jump": "o",
      "offset": [
        8787,
        11489
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2677": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9206,
        9251
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2678": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9260,
        9268
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2680": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9297,
        9300
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2682": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9272,
        9293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA84"
    },
    "2685": {
      "offset": [
        2303,
        2305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x14"
    },
    "2687": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9272,
        9279
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2688": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9272,
        9293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "2691": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9272,
        9293
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2692": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9272,
        9293
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2693": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9271,
        9300
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA8E"
    },
    "2696": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9271,
        9300
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2697": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9271,
        9300
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2698": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9271,
        9300
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "2701": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9271,
        9300
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2702": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9271,
        9300
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2703": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9260,
        9300
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2704": {
      "op": "POP"
    },
    "2705": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9310,
        9318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2707": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9347,
        9350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2709": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9322,
        9343
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9F"
    },
    "2712": {
      "offset": [
        2303,
        2305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x14"
    },
    "2714": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9322,
        9329
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2715": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9322,
        9343
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "2718": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9322,
        9343
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2719": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9322,
        9343
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2720": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9321,
        9350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA9"
    },
    "2723": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9321,
        9350
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2724": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9321,
        9350
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2725": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9321,
        9350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "2728": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9321,
        9350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2729": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9321,
        9350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2730": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9310,
        9350
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2731": {
      "op": "POP"
    },
    "2732": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9364,
        9371
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2733": {
      "branch": 165,
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9364,
        9371
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2734": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9360,
        9413
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xADC"
    },
    "2737": {
      "branch": 165,
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9360,
        9413
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2738": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9373,
        9379
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0xA"
    },
    "2740": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9373,
        9385
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2741": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9373,
        9413
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xADC"
    },
    "2744": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9373,
        9413
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2751": {
      "op": "SHL"
    },
    "2752": {
      "op": "SUB"
    },
    "2753": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9373,
        9385
      ],
      "op": "AND",
      "path": "1"
    },
    "2754": {
      "offset": [
        2220,
        2262
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x22CC3F665BA4C898226353B672C5123C58751692"
    },
    "2775": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9409,
        9412
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2776": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9373,
        9398
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FC4"
    },
    "2779": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9373,
        9413
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2780": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9373,
        9413
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2781": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9427,
        9434
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2782": {
      "branch": 166,
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9427,
        9434
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2783": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9423,
        9476
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0D"
    },
    "2786": {
      "branch": 166,
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9423,
        9476
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2787": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9436,
        9442
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0xB"
    },
    "2789": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9436,
        9448
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2790": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9436,
        9476
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0D"
    },
    "2793": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9436,
        9476
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2800": {
      "op": "SHL"
    },
    "2801": {
      "op": "SUB"
    },
    "2802": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9436,
        9448
      ],
      "op": "AND",
      "path": "1"
    },
    "2803": {
      "offset": [
        2220,
        2262
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x22CC3F665BA4C898226353B672C5123C58751692"
    },
    "2824": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9472,
        9475
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2825": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9436,
        9461
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FC4"
    },
    "2828": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9436,
        9476
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2829": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9436,
        9476
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2830": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9511,
        9514
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 26
    },
    "2831": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9501,
        9508
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2832": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9494,
        9498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "2834": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9494,
        9498
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2835": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9494,
        9508
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB1C"
    },
    "2838": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9494,
        9508
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2839": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9494,
        9508
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2840": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9494,
        9508
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "2843": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9494,
        9508
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2844": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9494,
        9508
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2845": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9494,
        9514
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB26"
    },
    "2848": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9494,
        9514
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2849": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9494,
        9514
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2850": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9494,
        9514
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E74"
    },
    "2853": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9494,
        9514
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2854": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9494,
        9514
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2855": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9487,
        9491
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "2857": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9487,
        9514
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2858": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9531,
        9535
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 27,
      "value": "0x9"
    },
    "2860": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9531,
        9535
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2861": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9548,
        9551
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2862": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9548,
        9551
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2863": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9531,
        9545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB39"
    },
    "2866": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9531,
        9545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2867": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9538,
        9545
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2868": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9538,
        9545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2869": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9531,
        9545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "2872": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9531,
        9545
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2873": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9531,
        9545
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2874": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9531,
        9551
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB43"
    },
    "2877": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9531,
        9551
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2878": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9531,
        9551
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2879": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9531,
        9551
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E74"
    },
    "2882": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9531,
        9551
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2883": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9531,
        9551
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2884": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9524,
        9528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "2886": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9524,
        9551
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2887": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9602,
        9614
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2889": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9602,
        9614
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2890": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9632,
        9670
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB53"
    },
    "2893": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9602,
        9614
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2894": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9602,
        9614
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2895": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9632,
        9664
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E20"
    },
    "2898": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9632,
        9670
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2899": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9632,
        9670
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2900": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9601,
        9670
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2901": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9601,
        9670
      ],
      "op": "POP",
      "path": "1"
    },
    "2902": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9601,
        9670
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2903": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9601,
        9670
      ],
      "op": "POP",
      "path": "1"
    },
    "2904": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9797,
        9801
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2905": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9784,
        9788
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "2907": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9784,
        9788
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2908": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9791,
        9794
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2910": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9784,
        9794
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB67"
    },
    "2913": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9784,
        9794
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2914": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9784,
        9794
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2915": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9784,
        9794
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "2918": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9784,
        9794
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2919": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9784,
        9794
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2920": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9784,
        9801
      ],
      "op": "GT",
      "path": "1"
    },
    "2921": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9783,
        9825
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2922": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9783,
        9825
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2923": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9783,
        9825
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB81"
    },
    "2926": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9783,
        9825
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2927": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9783,
        9825
      ],
      "op": "POP",
      "path": "1"
    },
    "2928": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9820,
        9824
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2929": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9807,
        9811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "2931": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9807,
        9811
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2932": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9814,
        9817
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2934": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9807,
        9817
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7F"
    },
    "2937": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9807,
        9817
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2938": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9807,
        9817
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2939": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9807,
        9817
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "2942": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9807,
        9817
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2943": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9807,
        9817
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2944": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9807,
        9824
      ],
      "op": "GT",
      "path": "1"
    },
    "2945": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9783,
        9825
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2946": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9779,
        11441
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2947": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9779,
        11441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF66"
    },
    "2950": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9779,
        11441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2951": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9894,
        9898
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 28,
      "value": "0x8"
    },
    "2953": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9894,
        9898
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2954": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9841,
        9847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "2956": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9841,
        9853
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2957": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9841,
        9899
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB1"
    },
    "2960": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9841,
        9899
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2967": {
      "op": "SHL"
    },
    "2968": {
      "op": "SUB"
    },
    "2969": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9841,
        9853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2970": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9841,
        9853
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2971": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9841,
        9853
      ],
      "op": "AND",
      "path": "1"
    },
    "2972": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9841,
        9853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2975": {
      "op": "DUP1"
    },
    "2976": {
      "op": "MLOAD"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2979": {
      "op": "PUSH2",
      "value": "0x4545"
    },
    "2982": {
      "op": "DUP4"
    },
    "2983": {
      "op": "CODECOPY"
    },
    "2984": {
      "op": "DUP2"
    },
    "2985": {
      "op": "MLOAD"
    },
    "2986": {
      "op": "SWAP2"
    },
    "2987": {
      "op": "MSTORE"
    },
    "2988": {
      "offset": [
        2006,
        2048
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2989": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9841,
        9875
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302C"
    },
    "2992": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9841,
        9899
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2993": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9841,
        9899
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2994": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9966,
        9970
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 29,
      "value": "0x9"
    },
    "2996": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9966,
        9970
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2997": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9913,
        9919
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "2999": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9913,
        9925
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3000": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9913,
        9971
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBDC"
    },
    "3003": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9913,
        9971
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3010": {
      "op": "SHL"
    },
    "3011": {
      "op": "SUB"
    },
    "3012": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9913,
        9925
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3013": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9913,
        9925
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3014": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9913,
        9925
      ],
      "op": "AND",
      "path": "1"
    },
    "3015": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9913,
        9925
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3018": {
      "op": "DUP1"
    },
    "3019": {
      "op": "MLOAD"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3022": {
      "op": "PUSH2",
      "value": "0x4545"
    },
    "3025": {
      "op": "DUP4"
    },
    "3026": {
      "op": "CODECOPY"
    },
    "3027": {
      "op": "DUP2"
    },
    "3028": {
      "op": "MLOAD"
    },
    "3029": {
      "op": "SWAP2"
    },
    "3030": {
      "op": "MSTORE"
    },
    "3031": {
      "offset": [
        2006,
        2048
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3032": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9913,
        9947
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302C"
    },
    "3035": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        9913,
        9971
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3036": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9913,
        9971
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3037": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3039": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3040": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3041": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "3043": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3044": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "ADD",
      "path": "1"
    },
    "3045": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3046": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3047": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10193,
        10200
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "3049": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10193,
        10200
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3050": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3051": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3052": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10242,
        10246
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "3054": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10242,
        10246
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3055": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3057": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3058": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "ADD",
      "path": "1"
    },
    "3059": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3060": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10288,
        10292
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "3062": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10288,
        10292
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3063": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3064": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3065": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "ADD",
      "path": "1"
    },
    "3066": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3067": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9986,
        10006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3069": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3071": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3072": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "ADD",
      "path": "1"
    },
    "3073": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3074": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3075": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3076": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "3078": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3079": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "ADD",
      "path": "1"
    },
    "3080": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3081": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3082": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3083": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10406,
        10421
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "3084": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "3086": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3087": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "ADD",
      "path": "1"
    },
    "3088": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3089": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3090": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3091": {
      "op": "PUSH4",
      "value": "0x219F5D17"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3098": {
      "op": "SHL"
    },
    "3099": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3100": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3101": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9986,
        10006
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3102": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9986,
        10006
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3103": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9986,
        10006
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3104": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9986,
        10006
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3107": {
      "op": "DUP1"
    },
    "3108": {
      "op": "MLOAD"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3111": {
      "op": "PUSH2",
      "value": "0x4545"
    },
    "3114": {
      "op": "DUP4"
    },
    "3115": {
      "op": "CODECOPY"
    },
    "3116": {
      "op": "DUP2"
    },
    "3117": {
      "op": "MLOAD"
    },
    "3118": {
      "op": "SWAP2"
    },
    "3119": {
      "op": "MSTORE"
    },
    "3120": {
      "offset": [
        2006,
        2048
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3121": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10084
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x219F5D17"
    },
    "3126": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10084
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3127": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC43"
    },
    "3130": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3131": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10106,
        10444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3132": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3134": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "ADD",
      "path": "1"
    },
    "3135": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E87"
    },
    "3138": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10042,
        10462
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3139": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3140": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3142": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3144": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3145": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3146": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3147": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "SUB",
      "path": "1"
    },
    "3148": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3149": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3151": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3152": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "GAS",
      "path": "1"
    },
    "3153": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "CALL",
      "path": "1"
    },
    "3154": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3155": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3156": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3157": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC62"
    },
    "3160": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3161": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3162": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3164": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3165": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3166": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3167": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3169": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3170": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3171": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "POP",
      "path": "1"
    },
    "3172": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "POP",
      "path": "1"
    },
    "3173": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "POP",
      "path": "1"
    },
    "3174": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "POP",
      "path": "1"
    },
    "3175": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3177": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3178": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3179": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3181": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "NOT",
      "path": "1"
    },
    "3182": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3184": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3185": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "ADD",
      "path": "1"
    },
    "3186": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "AND",
      "path": "1"
    },
    "3187": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3188": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "ADD",
      "path": "1"
    },
    "3189": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3190": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3192": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3193": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "POP",
      "path": "1"
    },
    "3194": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3195": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "ADD",
      "path": "1"
    },
    "3196": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3197": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC86"
    },
    "3200": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3201": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3202": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ECB"
    },
    "3205": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10042,
        10462
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3206": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10042,
        10462
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3207": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC"
    },
    "3209": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10591
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3210": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10614,
        10620
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3212": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10614,
        10626
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3213": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3215": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3216": {
      "op": "PUSH4",
      "value": "0xB3596F07"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3223": {
      "op": "SHL"
    },
    "3224": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3225": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3232": {
      "op": "SHL"
    },
    "3233": {
      "op": "SUB"
    },
    "3234": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10614,
        10626
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3235": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10614,
        10626
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3236": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10614,
        10626
      ],
      "op": "AND",
      "path": "1"
    },
    "3237": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3239": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3240": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "ADD",
      "path": "1"
    },
    "3241": {
      "op": "MSTORE"
    },
    "3242": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9985,
        10462
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3243": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9985,
        10462
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "3244": {
      "op": "POP"
    },
    "3245": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9985,
        10462
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3246": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9985,
        10462
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "3247": {
      "op": "POP"
    },
    "3248": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9985,
        10462
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3249": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9985,
        10462
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3250": {
      "op": "POP"
    },
    "3251": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10566,
        10582
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3253": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10566,
        10582
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3254": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3255": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10591
      ],
      "op": "AND",
      "path": "1"
    },
    "3256": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3257": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10605
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB3596F07"
    },
    "3262": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10605
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3265": {
      "op": "ADD"
    },
    "3266": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3268": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3270": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3271": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3272": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3273": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "SUB",
      "path": "1"
    },
    "3274": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3275": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3276": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "GAS",
      "path": "1"
    },
    "3277": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "3278": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3279": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3280": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3281": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCDE"
    },
    "3284": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3285": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3286": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3288": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3289": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3290": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3291": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3293": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3294": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3295": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "POP",
      "path": "1"
    },
    "3296": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "POP",
      "path": "1"
    },
    "3297": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "POP",
      "path": "1"
    },
    "3298": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "POP",
      "path": "1"
    },
    "3299": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3301": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3302": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3303": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3305": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "NOT",
      "path": "1"
    },
    "3306": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3308": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3309": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "ADD",
      "path": "1"
    },
    "3310": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "AND",
      "path": "1"
    },
    "3311": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3312": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "ADD",
      "path": "1"
    },
    "3313": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3314": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3316": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3317": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "POP",
      "path": "1"
    },
    "3318": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3319": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "ADD",
      "path": "1"
    },
    "3320": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3321": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD02"
    },
    "3324": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3325": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3326": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DF4"
    },
    "3329": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10585,
        10628
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3330": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10585,
        10628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3331": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10667
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC"
    },
    "3333": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10667
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3334": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10690,
        10696
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "3336": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10690,
        10702
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3337": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3339": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3340": {
      "op": "PUSH4",
      "value": "0xB3596F07"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3347": {
      "op": "SHL"
    },
    "3348": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3349": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3356": {
      "op": "SHL"
    },
    "3357": {
      "op": "SUB"
    },
    "3358": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10690,
        10702
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3359": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10690,
        10702
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3360": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10690,
        10702
      ],
      "op": "AND",
      "path": "1"
    },
    "3361": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3363": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3364": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "ADD",
      "path": "1"
    },
    "3365": {
      "op": "MSTORE"
    },
    "3366": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10566,
        10628
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3367": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10566,
        10628
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3368": {
      "op": "POP"
    },
    "3369": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10642,
        10658
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3371": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10642,
        10658
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3372": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10667
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3373": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10667
      ],
      "op": "AND",
      "path": "1"
    },
    "3374": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10667
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3375": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10681
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB3596F07"
    },
    "3380": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10681
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3383": {
      "op": "ADD"
    },
    "3384": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3386": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3388": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3389": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3390": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3391": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "SUB",
      "path": "1"
    },
    "3392": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3393": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3394": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "GAS",
      "path": "1"
    },
    "3395": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "3396": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3397": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3398": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3399": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD54"
    },
    "3402": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3403": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3404": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3406": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3407": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3408": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3409": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3411": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3412": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3413": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "POP",
      "path": "1"
    },
    "3414": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "POP",
      "path": "1"
    },
    "3415": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "POP",
      "path": "1"
    },
    "3416": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "POP",
      "path": "1"
    },
    "3417": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3419": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3420": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3421": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3423": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "NOT",
      "path": "1"
    },
    "3424": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3426": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3427": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "ADD",
      "path": "1"
    },
    "3428": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "AND",
      "path": "1"
    },
    "3429": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3430": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "ADD",
      "path": "1"
    },
    "3431": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3432": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3434": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3435": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "POP",
      "path": "1"
    },
    "3436": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3437": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "ADD",
      "path": "1"
    },
    "3438": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3439": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD78"
    },
    "3442": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3443": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3444": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DF4"
    },
    "3447": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10661,
        10704
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3448": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10661,
        10704
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3449": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10864,
        10870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "3451": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10864,
        10879
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3452": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10642,
        10704
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3453": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10642,
        10704
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3454": {
      "op": "POP"
    },
    "3455": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10718,
        10733
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3457": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10718,
        10733
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3458": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10858,
        10879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD96"
    },
    "3461": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10858,
        10879
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3466": {
      "op": "SHL"
    },
    "3467": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10864,
        10879
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3468": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10864,
        10879
      ],
      "op": "DIV",
      "path": "1"
    },
    "3469": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10864,
        10879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3471": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10864,
        10879
      ],
      "op": "AND",
      "path": "1"
    },
    "3472": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10858,
        10860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3474": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10858,
        10879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "3477": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10858,
        10879
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3478": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10858,
        10879
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3479": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10818,
        10838
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDA0"
    },
    "3482": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10827,
        10838
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3483": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10818,
        10824
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3484": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10818,
        10838
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "3487": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10818,
        10838
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3488": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10818,
        10838
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3489": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10817,
        10879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDAA"
    },
    "3492": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10817,
        10879
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3493": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10817,
        10879
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3494": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10817,
        10879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "3497": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10817,
        10879
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3498": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10817,
        10879
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3499": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10783,
        10789
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3501": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10783,
        10798
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3502": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10783,
        10798
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3503": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10777,
        10798
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC3"
    },
    "3506": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10777,
        10798
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3511": {
      "op": "SHL"
    },
    "3512": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10783,
        10798
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3513": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10783,
        10798
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3514": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10783,
        10798
      ],
      "op": "DIV",
      "path": "1"
    },
    "3515": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10783,
        10798
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3517": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10783,
        10798
      ],
      "op": "AND",
      "path": "1"
    },
    "3518": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10783,
        10798
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3519": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10777,
        10798
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "3522": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10777,
        10798
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3523": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10777,
        10798
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3524": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10737,
        10757
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDCD"
    },
    "3527": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10746,
        10757
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3528": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10737,
        10743
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3529": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10737,
        10757
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "3532": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10737,
        10757
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3533": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10737,
        10757
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3534": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10736,
        10798
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDD7"
    },
    "3537": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10736,
        10798
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3538": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10736,
        10798
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3539": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10736,
        10798
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "3542": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10736,
        10798
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3543": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10736,
        10798
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3544": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10736,
        10879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDE1"
    },
    "3547": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10736,
        10879
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3548": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10736,
        10879
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3549": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10736,
        10879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "3552": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10736,
        10879
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3553": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10736,
        10879
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3554": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11035,
        11041
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "3556": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11035,
        11050
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3557": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10718,
        10879
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3558": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10718,
        10879
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3559": {
      "op": "POP"
    },
    "3560": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10893,
        10908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3562": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10893,
        10908
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3563": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11029,
        11050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDFF"
    },
    "3566": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11029,
        11050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3571": {
      "op": "SHL"
    },
    "3572": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11035,
        11050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3573": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11035,
        11050
      ],
      "op": "DIV",
      "path": "1"
    },
    "3574": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11035,
        11050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3576": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11035,
        11050
      ],
      "op": "AND",
      "path": "1"
    },
    "3577": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11029,
        11031
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3579": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11029,
        11050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "3582": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        11029,
        11050
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3583": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11029,
        11050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3584": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10991,
        11009
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE09"
    },
    "3587": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10998,
        11009
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3588": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10991,
        10995
      ],
      "op": "DUP11",
      "path": "1"
    },
    "3589": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10991,
        11009
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "3592": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10991,
        11009
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3593": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10991,
        11009
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3594": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10990,
        11050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE13"
    },
    "3597": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10990,
        11050
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3598": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10990,
        11050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3599": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10990,
        11050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "3602": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10990,
        11050
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3603": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10990,
        11050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3604": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10956,
        10962
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3606": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10956,
        10971
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3607": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10956,
        10971
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3608": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10950,
        10971
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2C"
    },
    "3611": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10950,
        10971
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3616": {
      "op": "SHL"
    },
    "3617": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10956,
        10971
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3618": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10956,
        10971
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3619": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10956,
        10971
      ],
      "op": "DIV",
      "path": "1"
    },
    "3620": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10956,
        10971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3622": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10956,
        10971
      ],
      "op": "AND",
      "path": "1"
    },
    "3623": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10956,
        10971
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3624": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10950,
        10971
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "3627": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10950,
        10971
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3628": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10950,
        10971
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3629": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10912,
        10930
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE36"
    },
    "3632": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10919,
        10930
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3633": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10912,
        10916
      ],
      "op": "DUP13",
      "path": "1"
    },
    "3634": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10912,
        10930
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "3637": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10912,
        10930
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3638": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10912,
        10930
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3639": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10911,
        10971
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE40"
    },
    "3642": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10911,
        10971
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3643": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10911,
        10971
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3644": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10911,
        10971
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "3647": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10911,
        10971
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3648": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10911,
        10971
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3649": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10911,
        11050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE4A"
    },
    "3652": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10911,
        11050
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3653": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10911,
        11050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3654": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10911,
        11050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "3657": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        10911,
        11050
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3658": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10911,
        11050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3659": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11116,
        11125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x10"
    },
    "3661": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11116,
        11125
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3662": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10893,
        11050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3663": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10893,
        11050
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3664": {
      "op": "POP"
    },
    "3665": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11064,
        11083
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3667": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11064,
        11083
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3674": {
      "op": "SHL"
    },
    "3675": {
      "op": "SUB"
    },
    "3676": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11116,
        11125
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3677": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11116,
        11125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3678": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11116,
        11125
      ],
      "op": "AND",
      "path": "1"
    },
    "3679": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11116,
        11125
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3680": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11087,
        11112
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE6B"
    },
    "3683": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11087,
        11112
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3684": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11087,
        11112
      ],
      "op": "DUP11",
      "path": "1"
    },
    "3685": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11087,
        11112
      ],
      "op": "AND",
      "path": "1"
    },
    "3686": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        10893,
        11050
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3687": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11087,
        11112
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "3690": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        11087,
        11112
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3691": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11087,
        11112
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3692": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11086,
        11125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE75"
    },
    "3695": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11086,
        11125
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3696": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11086,
        11125
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3697": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11086,
        11125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "3700": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        11086,
        11125
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3701": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11086,
        11125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3702": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11064,
        11125
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3703": {
      "op": "POP"
    },
    "3704": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11201,
        11204
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 30,
      "value": "0x64"
    },
    "3706": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11178,
        11197
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE84"
    },
    "3709": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11064,
        11125
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3710": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11195,
        11197
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5F"
    },
    "3712": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11178,
        11197
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "3715": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        11178,
        11197
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3716": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11178,
        11197
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3717": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11177,
        11204
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE8E"
    },
    "3720": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11177,
        11204
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3721": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11177,
        11204
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3722": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11177,
        11204
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "3725": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        11177,
        11204
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3726": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11177,
        11204
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3727": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11164,
        11174
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3728": {
      "branch": 167,
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11164,
        11204
      ],
      "op": "GT",
      "path": "1"
    },
    "3729": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11164,
        11268
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3730": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11164,
        11268
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3731": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11164,
        11268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEB1"
    },
    "3734": {
      "branch": 167,
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11164,
        11268
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3735": {
      "op": "POP"
    },
    "3736": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11265,
        11268
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "3738": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11246,
        11261
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEA4"
    },
    "3741": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11246,
        11256
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3742": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11259,
        11261
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5F"
    },
    "3744": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11246,
        11261
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "3747": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        11246,
        11261
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3748": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11246,
        11261
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3749": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11245,
        11268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEAE"
    },
    "3752": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11245,
        11268
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3753": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11245,
        11268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3754": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11245,
        11268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "3757": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        11245,
        11268
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3758": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11245,
        11268
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3759": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11228,
        11242
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3760": {
      "branch": 168,
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11228,
        11268
      ],
      "op": "GT",
      "path": "1"
    },
    "3761": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11164,
        11268
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3762": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11139,
        11324
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF6"
    },
    "3765": {
      "branch": 168,
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11139,
        11324
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3766": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11139,
        11324
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3768": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11139,
        11324
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3769": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3775": {
      "op": "SHL"
    },
    "3776": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11139,
        11324
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3777": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11139,
        11324
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3780": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11139,
        11324
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3782": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11139,
        11324
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3783": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11139,
        11324
      ],
      "op": "ADD",
      "path": "1"
    },
    "3784": {
      "op": "MSTORE"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3789": {
      "op": "DUP3"
    },
    "3790": {
      "op": "ADD"
    },
    "3791": {
      "op": "MSTORE"
    },
    "3792": {
      "op": "PUSH22",
      "value": "0x54523A20436C61696D2046656520536C697070616765"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3817": {
      "op": "SHL"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3820": {
      "op": "DUP3"
    },
    "3821": {
      "op": "ADD"
    },
    "3822": {
      "op": "MSTORE"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3825": {
      "op": "ADD"
    },
    "3826": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11139,
        11324
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F3"
    },
    "3829": {
      "op": "JUMP"
    },
    "3830": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11139,
        11324
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3831": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11346,
        11352
      ],
      "op": "DUP7",
      "path": "1",
      "statement": 31
    },
    "3832": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11342
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "3834": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11342
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3836": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3837": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3838": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3839": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF08"
    },
    "3842": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3843": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3844": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E74"
    },
    "3847": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        11338,
        11352
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3848": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3849": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3850": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "POP",
      "path": "1"
    },
    "3851": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "POP",
      "path": "1"
    },
    "3852": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3853": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3854": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3855": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11338,
        11352
      ],
      "op": "POP",
      "path": "1"
    },
    "3856": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11374,
        11380
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 32
    },
    "3857": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11366,
        11370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "3859": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11366,
        11370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3861": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11366,
        11380
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3862": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11366,
        11380
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3863": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11366,
        11380
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3864": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11366,
        11380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF21"
    },
    "3867": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11366,
        11380
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3868": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11366,
        11380
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3869": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11366,
        11380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E74"
    },
    "3872": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        11366,
        11380
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3873": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11366,
        11380
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3874": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11366,
        11380
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3875": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11366,
        11380
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3876": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11366,
        11380
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3877": {
      "op": "POP"
    },
    "3878": {
      "op": "POP"
    },
    "3879": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11406,
        11415
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 33,
      "value": "0x10"
    },
    "3881": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11406,
        11415
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3882": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11406,
        11430
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3D"
    },
    "3885": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11406,
        11430
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3886": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11418,
        11430
      ],
      "op": "DUP10",
      "path": "1"
    },
    "3887": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11418,
        11430
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3894": {
      "op": "SHL"
    },
    "3895": {
      "op": "SUB"
    },
    "3896": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11406,
        11415
      ],
      "op": "AND",
      "path": "1"
    },
    "3897": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11406,
        11430
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F02"
    },
    "3900": {
      "fn": "TokenisableRange.claimFee",
      "jump": "i",
      "offset": [
        11406,
        11430
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3901": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11406,
        11430
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3902": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11394,
        11403
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x10"
    },
    "3904": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11394,
        11430
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3905": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11394,
        11430
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3912": {
      "op": "SHL"
    },
    "3913": {
      "op": "SUB"
    },
    "3914": {
      "op": "NOT"
    },
    "3915": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11394,
        11430
      ],
      "op": "AND",
      "path": "1"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3922": {
      "op": "SHL"
    },
    "3923": {
      "op": "SUB"
    },
    "3924": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11394,
        11430
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3925": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11394,
        11430
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3926": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11394,
        11430
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3927": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11394,
        11430
      ],
      "op": "AND",
      "path": "1"
    },
    "3928": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11394,
        11430
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3929": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11394,
        11430
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3930": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11394,
        11430
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3931": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11394,
        11430
      ],
      "op": "OR",
      "path": "1"
    },
    "3932": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11394,
        11430
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3933": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11394,
        11430
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3934": {
      "op": "POP"
    },
    "3935": {
      "op": "POP"
    },
    "3936": {
      "op": "POP"
    },
    "3937": {
      "op": "POP"
    },
    "3938": {
      "op": "POP"
    },
    "3939": {
      "op": "POP"
    },
    "3940": {
      "op": "POP"
    },
    "3941": {
      "op": "POP"
    },
    "3942": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        9779,
        11441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3943": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11455,
        11482
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 34,
      "value": "0x40"
    },
    "3945": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11455,
        11482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3946": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11455,
        11482
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3947": {
      "op": "DUP8"
    },
    "3948": {
      "op": "DUP2"
    },
    "3949": {
      "op": "MSTORE"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3952": {
      "op": "DUP2"
    },
    "3953": {
      "op": "ADD"
    },
    "3954": {
      "op": "DUP8"
    },
    "3955": {
      "op": "SWAP1"
    },
    "3956": {
      "op": "MSTORE"
    },
    "3957": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11455,
        11482
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xCBF6196D7BEBCBAAF53F321EECB5B4F39479879F3996F828F10012708A9442D7"
    },
    "3990": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11455,
        11482
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3991": {
      "op": "ADD"
    },
    "3992": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11455,
        11482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3994": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11455,
        11482
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3995": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11455,
        11482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3996": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11455,
        11482
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3997": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11455,
        11482
      ],
      "op": "SUB",
      "path": "1"
    },
    "3998": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11455,
        11482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3999": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        11455,
        11482
      ],
      "op": "LOG1",
      "path": "1"
    },
    "4000": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8814,
        11489
      ],
      "op": "POP",
      "path": "1"
    },
    "4001": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8814,
        11489
      ],
      "op": "POP",
      "path": "1"
    },
    "4002": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8814,
        11489
      ],
      "op": "POP",
      "path": "1"
    },
    "4003": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8814,
        11489
      ],
      "op": "POP",
      "path": "1"
    },
    "4004": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8814,
        11489
      ],
      "op": "POP",
      "path": "1"
    },
    "4005": {
      "fn": "TokenisableRange.claimFee",
      "offset": [
        8814,
        11489
      ],
      "op": "POP",
      "path": "1"
    },
    "4006": {
      "fn": "TokenisableRange.claimFee",
      "jump": "o",
      "offset": [
        8787,
        11489
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4007": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16083,
        17589
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4008": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16214,
        16230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4010": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16232,
        16248
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4011": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "4013": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x5"
    },
    "4015": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4016": {
      "offset": [
        2325,
        2344
      ],
      "op": "SUB",
      "path": "42"
    },
    "4017": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xFFC"
    },
    "4020": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4021": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4023": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4024": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4030": {
      "op": "SHL"
    },
    "4031": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4032": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4035": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "4037": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4038": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "42"
    },
    "4039": {
      "op": "MSTORE"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4044": {
      "op": "DUP3"
    },
    "4045": {
      "op": "ADD"
    },
    "4046": {
      "op": "MSTORE"
    },
    "4047": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4082": {
      "op": "DUP3"
    },
    "4083": {
      "op": "ADD"
    },
    "4084": {
      "op": "MSTORE"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4087": {
      "op": "ADD"
    },
    "4088": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x6F3"
    },
    "4091": {
      "op": "JUMP"
    },
    "4092": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4093": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "4095": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x5"
    },
    "4097": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "4098": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16260,
        16270
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 35,
      "value": "0x1009"
    },
    "4101": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16260,
        16268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9BC"
    },
    "4104": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        16260,
        16270
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4105": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16260,
        16270
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4106": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16280,
        16301
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4108": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16329,
        16342
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1014"
    },
    "4111": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "4113": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "4114": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "4115": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "43"
    },
    "4116": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16329,
        16342
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4117": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16310,
        16319
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x10"
    },
    "4119": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16310,
        16319
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4120": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16305,
        16325
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x102B"
    },
    "4123": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16305,
        16325
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4124": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16323,
        16325
      ],
      "op": "DUP9",
      "path": "1"
    },
    "4125": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16323,
        16325
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4132": {
      "op": "SHL"
    },
    "4133": {
      "op": "SUB"
    },
    "4134": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16310,
        16319
      ],
      "op": "AND",
      "path": "1"
    },
    "4135": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16305,
        16325
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "4138": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        16305,
        16325
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4139": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16305,
        16325
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4140": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16304,
        16342
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1035"
    },
    "4143": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16304,
        16342
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4144": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16304,
        16342
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4145": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16304,
        16342
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "4148": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        16304,
        16342
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4149": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16304,
        16342
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4150": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 36,
      "value": "0x40"
    },
    "4152": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4153": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4154": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "4156": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4157": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "ADD",
      "path": "1"
    },
    "4158": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4159": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4160": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16493,
        16500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "4162": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16493,
        16500
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4163": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4164": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4171": {
      "op": "SHL"
    },
    "4172": {
      "op": "SUB"
    },
    "4173": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4174": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4175": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "AND",
      "path": "1"
    },
    "4176": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4178": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4179": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "ADD",
      "path": "1"
    },
    "4180": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4181": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4182": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4183": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4184": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4185": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "ADD",
      "path": "1"
    },
    "4186": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP11",
      "path": "1"
    },
    "4187": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4188": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4189": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "4191": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4192": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "ADD",
      "path": "1"
    },
    "4193": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP11",
      "path": "1"
    },
    "4194": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4195": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4196": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16662,
        16677
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "4197": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "4199": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4200": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "ADD",
      "path": "1"
    },
    "4201": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4202": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4203": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4204": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "4205": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4206": {
      "op": "PUSH4",
      "value": "0x624E65F"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4213": {
      "op": "SHL"
    },
    "4214": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4215": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4216": {
      "op": "SWAP5"
    },
    "4217": {
      "op": "MLOAD"
    },
    "4218": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4220": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4221": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "ADD",
      "path": "1"
    },
    "4222": {
      "op": "MSTORE"
    },
    "4223": {
      "op": "SWAP2"
    },
    "4224": {
      "op": "MLOAD"
    },
    "4225": {
      "op": "SWAP1"
    },
    "4226": {
      "op": "SWAP3"
    },
    "4227": {
      "op": "AND"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4230": {
      "op": "DUP5"
    },
    "4231": {
      "op": "ADD"
    },
    "4232": {
      "op": "MSTORE"
    },
    "4233": {
      "op": "SWAP1"
    },
    "4234": {
      "op": "MLOAD"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4237": {
      "op": "DUP4"
    },
    "4238": {
      "op": "ADD"
    },
    "4239": {
      "op": "MSTORE"
    },
    "4240": {
      "op": "MLOAD"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4243": {
      "op": "DUP3"
    },
    "4244": {
      "op": "ADD"
    },
    "4245": {
      "op": "MSTORE"
    },
    "4246": {
      "op": "SWAP1"
    },
    "4247": {
      "op": "MLOAD"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4250": {
      "op": "DUP3"
    },
    "4251": {
      "op": "ADD"
    },
    "4252": {
      "op": "MSTORE"
    },
    "4253": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4254": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16414,
        16692
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4255": {
      "op": "POP"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4258": {
      "op": "DUP1"
    },
    "4259": {
      "op": "MLOAD"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4262": {
      "op": "PUSH2",
      "value": "0x4545"
    },
    "4265": {
      "op": "DUP4"
    },
    "4266": {
      "op": "CODECOPY"
    },
    "4267": {
      "op": "DUP2"
    },
    "4268": {
      "op": "MLOAD"
    },
    "4269": {
      "op": "SWAP2"
    },
    "4270": {
      "op": "MSTORE"
    },
    "4271": {
      "offset": [
        2006,
        2048
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4272": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16400
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC49CCBE"
    },
    "4277": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16400
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4280": {
      "op": "ADD"
    },
    "4281": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4283": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4284": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4285": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4286": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4287": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "SUB",
      "path": "1"
    },
    "4288": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4289": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4291": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4292": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "GAS",
      "path": "1"
    },
    "4293": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "CALL",
      "path": "1"
    },
    "4294": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4295": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4296": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4297": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D6"
    },
    "4300": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4301": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4302": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4304": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4305": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "4306": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4307": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4309": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4310": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4311": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "POP",
      "path": "1"
    },
    "4312": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "POP",
      "path": "1"
    },
    "4313": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "POP",
      "path": "1"
    },
    "4314": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "POP",
      "path": "1"
    },
    "4315": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4317": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4318": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4319": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "4321": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "NOT",
      "path": "1"
    },
    "4322": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "4324": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4325": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "ADD",
      "path": "1"
    },
    "4326": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "AND",
      "path": "1"
    },
    "4327": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4328": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "ADD",
      "path": "1"
    },
    "4329": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4330": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4332": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4333": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "POP",
      "path": "1"
    },
    "4334": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4335": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "ADD",
      "path": "1"
    },
    "4336": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4337": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10FA"
    },
    "4340": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4341": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4342": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E50"
    },
    "4345": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        16375,
        16702
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4346": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16375,
        16702
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4347": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16740,
        16749
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 37,
      "value": "0x10"
    },
    "4349": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16740,
        16749
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4350": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16352,
        16702
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4351": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16352,
        16702
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "4352": {
      "op": "POP"
    },
    "4353": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16352,
        16702
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4354": {
      "op": "POP"
    },
    "4355": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16732,
        16769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1116"
    },
    "4358": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16732,
        16769
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4359": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16753,
        16769
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4360": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16753,
        16769
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4367": {
      "op": "SHL"
    },
    "4368": {
      "op": "SUB"
    },
    "4369": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16740,
        16749
      ],
      "op": "AND",
      "path": "1"
    },
    "4370": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16732,
        16769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E74"
    },
    "4373": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        16732,
        16769
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4374": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16732,
        16769
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4375": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16712,
        16721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x10"
    },
    "4377": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16712,
        16770
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4378": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16712,
        16770
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4385": {
      "op": "SHL"
    },
    "4386": {
      "op": "SUB"
    },
    "4387": {
      "op": "NOT"
    },
    "4388": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16712,
        16770
      ],
      "op": "AND",
      "path": "1"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4395": {
      "op": "SHL"
    },
    "4396": {
      "op": "SUB"
    },
    "4397": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16712,
        16770
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4398": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16712,
        16770
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4399": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16712,
        16770
      ],
      "op": "AND",
      "path": "1"
    },
    "4400": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16712,
        16770
      ],
      "op": "OR",
      "path": "1"
    },
    "4401": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16712,
        16770
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4402": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16712,
        16770
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4403": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 38,
      "value": "0x40"
    },
    "4405": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4406": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4407": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "4409": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4410": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "ADD",
      "path": "1"
    },
    "4411": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4412": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4413": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16879,
        16886
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "4415": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16879,
        16886
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4416": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4417": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4418": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16915,
        16925
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4419": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4421": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4422": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "ADD",
      "path": "1"
    },
    "4423": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4424": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4425": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4426": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "AND",
      "path": "1"
    },
    "4427": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4428": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4429": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "ADD",
      "path": "1"
    },
    "4430": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4431": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4432": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4433": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "AND",
      "path": "1"
    },
    "4434": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "4436": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4437": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "ADD",
      "path": "1"
    },
    "4438": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4439": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4440": {
      "op": "PUSH4",
      "value": "0xFC6F7865"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4447": {
      "op": "SHL"
    },
    "4448": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4449": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4452": {
      "op": "DUP1"
    },
    "4453": {
      "op": "MLOAD"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4456": {
      "op": "PUSH2",
      "value": "0x4545"
    },
    "4459": {
      "op": "DUP4"
    },
    "4460": {
      "op": "CODECOPY"
    },
    "4461": {
      "op": "DUP2"
    },
    "4462": {
      "op": "MLOAD"
    },
    "4463": {
      "op": "SWAP2"
    },
    "4464": {
      "op": "MSTORE"
    },
    "4465": {
      "offset": [
        2006,
        2048
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4466": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        16796
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFC6F7865"
    },
    "4471": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        16796
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4472": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1184"
    },
    "4475": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4476": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16810,
        17034
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4477": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4479": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "ADD",
      "path": "1"
    },
    "4480": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E0D"
    },
    "4483": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        16781,
        17044
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4484": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4485": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4487": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4488": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4489": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4490": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4491": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "SUB",
      "path": "1"
    },
    "4492": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4493": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4495": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4496": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "GAS",
      "path": "1"
    },
    "4497": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "CALL",
      "path": "1"
    },
    "4498": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4499": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4500": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4501": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A2"
    },
    "4504": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4505": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4506": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4508": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4509": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "4510": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4511": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4513": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4514": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4515": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "POP",
      "path": "1"
    },
    "4516": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "POP",
      "path": "1"
    },
    "4517": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "POP",
      "path": "1"
    },
    "4518": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "POP",
      "path": "1"
    },
    "4519": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4521": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4522": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4523": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "4525": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "NOT",
      "path": "1"
    },
    "4526": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "4528": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4529": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "ADD",
      "path": "1"
    },
    "4530": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "AND",
      "path": "1"
    },
    "4531": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4532": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "ADD",
      "path": "1"
    },
    "4533": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4534": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4536": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4537": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "POP",
      "path": "1"
    },
    "4538": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4539": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "ADD",
      "path": "1"
    },
    "4540": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4541": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11C6"
    },
    "4544": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4545": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4546": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E50"
    },
    "4549": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        16781,
        17044
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4550": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16781,
        17044
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4551": {
      "op": "POP"
    },
    "4552": {
      "op": "POP"
    },
    "4553": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17094,
        17098
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "4555": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17094,
        17098
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4556": {
      "branch": 169,
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17094,
        17102
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4557": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17090,
        17297
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1267"
    },
    "4560": {
      "branch": 169,
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17090,
        17297
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4561": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17118,
        17184
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 39,
      "value": "0x1208"
    },
    "4564": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17144,
        17154
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4565": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17170,
        17183
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11DD"
    },
    "4568": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "4570": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "4571": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "4572": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "43"
    },
    "4573": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17170,
        17183
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4574": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17164,
        17166
      ],
      "op": "DUP9",
      "path": "1"
    },
    "4575": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17157,
        17161
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "4577": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17157,
        17161
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4578": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17157,
        17166
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11EB"
    },
    "4581": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17157,
        17166
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4582": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17157,
        17166
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4583": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17157,
        17166
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "4586": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17157,
        17166
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4587": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17157,
        17166
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4588": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17156,
        17183
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11F5"
    },
    "4591": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17156,
        17183
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4592": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17156,
        17183
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4593": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17156,
        17183
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "4596": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17156,
        17183
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4597": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17156,
        17183
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4598": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17118,
        17124
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "4600": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17118,
        17130
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4607": {
      "op": "SHL"
    },
    "4608": {
      "op": "SUB"
    },
    "4609": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17118,
        17130
      ],
      "op": "AND",
      "path": "1"
    },
    "4610": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17118,
        17130
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4611": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17118,
        17184
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4612": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17118,
        17143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FC4"
    },
    "4615": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17118,
        17184
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4616": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17118,
        17184
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4617": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "4619": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "4620": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17218,
        17220
      ],
      "op": "DUP7",
      "path": "1",
      "statement": 40
    },
    "4621": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17211,
        17215
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "4623": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17211,
        17215
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4624": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17211,
        17220
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1219"
    },
    "4627": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17211,
        17220
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4628": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17211,
        17220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4629": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17211,
        17220
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "4632": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17211,
        17220
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4633": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17211,
        17220
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4634": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17210,
        17237
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1223"
    },
    "4637": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17210,
        17237
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4638": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17210,
        17237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4639": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17210,
        17237
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "4642": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17210,
        17237
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4643": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17210,
        17237
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4644": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17198,
        17237
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x122D"
    },
    "4647": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17198,
        17237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4648": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17198,
        17237
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4649": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17198,
        17237
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "4652": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17198,
        17237
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4653": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17198,
        17237
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4654": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17198,
        17237
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4655": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17198,
        17237
      ],
      "op": "POP",
      "path": "1"
    },
    "4656": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17273,
        17286
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 41,
      "value": "0x1238"
    },
    "4659": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "4661": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "4662": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "4663": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "43"
    },
    "4664": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17273,
        17286
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4665": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17267,
        17269
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4666": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17260,
        17264
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "4668": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17260,
        17264
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4669": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17260,
        17269
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1246"
    },
    "4672": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17260,
        17269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4673": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17260,
        17269
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4674": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17260,
        17269
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "4677": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17260,
        17269
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4678": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17260,
        17269
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4679": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17259,
        17286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1250"
    },
    "4682": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17259,
        17286
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4683": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17259,
        17286
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4684": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17259,
        17286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "4687": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17259,
        17286
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4688": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17259,
        17286
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4689": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17251,
        17255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "4691": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17251,
        17255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4693": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17251,
        17286
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4694": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17251,
        17286
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4695": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17251,
        17286
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4696": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17251,
        17286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1261"
    },
    "4699": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17251,
        17286
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4700": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17251,
        17286
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4701": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17251,
        17286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E74"
    },
    "4704": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17251,
        17286
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4705": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17251,
        17286
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4706": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17251,
        17286
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4707": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17251,
        17286
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4708": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17251,
        17286
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4709": {
      "op": "POP"
    },
    "4710": {
      "op": "POP"
    },
    "4711": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17090,
        17297
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4712": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17310,
        17314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "4714": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17310,
        17314
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4715": {
      "branch": 170,
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17310,
        17318
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4716": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17306,
        17513
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1306"
    },
    "4719": {
      "branch": 170,
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17306,
        17513
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4720": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17334,
        17400
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 42,
      "value": "0x12A7"
    },
    "4723": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17360,
        17370
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4724": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17386,
        17399
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x127C"
    },
    "4727": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "4729": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "4730": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "4731": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "43"
    },
    "4732": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17386,
        17399
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4733": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17380,
        17382
      ],
      "op": "DUP9",
      "path": "1"
    },
    "4734": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17373,
        17377
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "4736": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17373,
        17377
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4737": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17373,
        17382
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x128A"
    },
    "4740": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17373,
        17382
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4741": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17373,
        17382
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4742": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17373,
        17382
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "4745": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17373,
        17382
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4746": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17373,
        17382
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4747": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17372,
        17399
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1294"
    },
    "4750": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17372,
        17399
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4751": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17372,
        17399
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4752": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17372,
        17399
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "4755": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17372,
        17399
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4756": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17372,
        17399
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4757": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17334,
        17340
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "4759": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17334,
        17346
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4766": {
      "op": "SHL"
    },
    "4767": {
      "op": "SUB"
    },
    "4768": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17334,
        17346
      ],
      "op": "AND",
      "path": "1"
    },
    "4769": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17334,
        17346
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4770": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17334,
        17400
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4771": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17334,
        17359
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FC4"
    },
    "4774": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17334,
        17400
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4775": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17334,
        17400
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4776": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "4778": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "4779": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17434,
        17436
      ],
      "op": "DUP7",
      "path": "1",
      "statement": 43
    },
    "4780": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17427,
        17431
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "4782": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17427,
        17431
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4783": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17427,
        17436
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B8"
    },
    "4786": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17427,
        17436
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4787": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17427,
        17436
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4788": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17427,
        17436
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "4791": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17427,
        17436
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4792": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17427,
        17436
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4793": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17426,
        17453
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12C2"
    },
    "4796": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17426,
        17453
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4797": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17426,
        17453
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4798": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17426,
        17453
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "4801": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17426,
        17453
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4802": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17426,
        17453
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4803": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17414,
        17453
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12CC"
    },
    "4806": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17414,
        17453
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4807": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17414,
        17453
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4808": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17414,
        17453
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "4811": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17414,
        17453
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4812": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17414,
        17453
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4813": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17414,
        17453
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4814": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17414,
        17453
      ],
      "op": "POP",
      "path": "1"
    },
    "4815": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17489,
        17502
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 44,
      "value": "0x12D7"
    },
    "4818": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "4820": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "4821": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "4822": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "43"
    },
    "4823": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17489,
        17502
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4824": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17483,
        17485
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4825": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17476,
        17480
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "4827": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17476,
        17480
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4828": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17476,
        17485
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12E5"
    },
    "4831": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17476,
        17485
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4832": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17476,
        17485
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4833": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17476,
        17485
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "4836": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17476,
        17485
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4837": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17476,
        17485
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4838": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17475,
        17502
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12EF"
    },
    "4841": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17475,
        17502
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4842": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17475,
        17502
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4843": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17475,
        17502
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "4846": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17475,
        17502
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4847": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17475,
        17502
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4848": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17467,
        17471
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "4850": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17467,
        17471
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4852": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17467,
        17502
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4853": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17467,
        17502
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4854": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17467,
        17502
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4855": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17467,
        17502
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1300"
    },
    "4858": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17467,
        17502
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4859": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17467,
        17502
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4860": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17467,
        17502
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E74"
    },
    "4863": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17467,
        17502
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4864": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17467,
        17502
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4865": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17467,
        17502
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4866": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17467,
        17502
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4867": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17467,
        17502
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4868": {
      "op": "POP"
    },
    "4869": {
      "op": "POP"
    },
    "4870": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17306,
        17513
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4871": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17522,
        17543
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 45,
      "value": "0x1310"
    },
    "4874": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17528,
        17538
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4875": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17540,
        17542
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4876": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17522,
        17527
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DE"
    },
    "4879": {
      "fn": "TokenisableRange.withdraw",
      "jump": "i",
      "offset": [
        17522,
        17543
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4880": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17522,
        17543
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4881": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17558,
        17582
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 46,
      "value": "0x40"
    },
    "4883": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17558,
        17582
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4884": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17558,
        17582
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4885": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17567,
        17577
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4886": {
      "op": "DUP2"
    },
    "4887": {
      "op": "MSTORE"
    },
    "4888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4890": {
      "op": "DUP2"
    },
    "4891": {
      "op": "ADD"
    },
    "4892": {
      "op": "DUP9"
    },
    "4893": {
      "op": "SWAP1"
    },
    "4894": {
      "op": "MSTORE"
    },
    "4895": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17558,
        17582
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
    },
    "4928": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17558,
        17582
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4929": {
      "op": "ADD"
    },
    "4930": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17558,
        17582
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4932": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17558,
        17582
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4933": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17558,
        17582
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4934": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17558,
        17582
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4935": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17558,
        17582
      ],
      "op": "SUB",
      "path": "1"
    },
    "4936": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17558,
        17582
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4937": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        17558,
        17582
      ],
      "op": "LOG1",
      "path": "1"
    },
    "4938": {
      "op": "POP"
    },
    "4939": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "4941": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x5"
    },
    "4943": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "4944": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16083,
        17589
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4945": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16083,
        17589
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "4946": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16083,
        17589
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4947": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16083,
        17589
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "4948": {
      "op": "POP"
    },
    "4949": {
      "fn": "TokenisableRange.withdraw",
      "offset": [
        16083,
        17589
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4950": {
      "op": "POP"
    },
    "4951": {
      "op": "POP"
    },
    "4952": {
      "fn": "TokenisableRange.withdraw",
      "jump": "o",
      "offset": [
        16083,
        17589
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4953": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "4954": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "4955": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6536,
        6540
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "4957": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "4958": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP2",
      "path": "43"
    },
    "4959": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "4960": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6590
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1"
    },
    "4962": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "4964": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "4965": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP2",
      "path": "43"
    },
    "4966": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "4967": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "4969": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP1",
      "path": "43"
    },
    "4970": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP4",
      "path": "43"
    },
    "4971": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "4972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4978": {
      "op": "SHL"
    },
    "4979": {
      "op": "SUB"
    },
    "4980": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "DUP7",
      "path": "43"
    },
    "4981": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "AND",
      "path": "43"
    },
    "4982": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "DUP5",
      "path": "43"
    },
    "4983": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "4984": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "4985": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "4986": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "4987": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "DUP2",
      "path": "43"
    },
    "4988": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "4989": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "4990": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "DUP3",
      "path": "43",
      "statement": 47
    },
    "4991": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "DUP2",
      "path": "43"
    },
    "4992": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "LT",
      "path": "43"
    },
    "4993": {
      "branch": 194,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "4994": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x13DB"
    },
    "4997": {
      "branch": 194,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "4998": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "5000": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "5001": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5005": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5007": {
      "op": "SHL"
    },
    "5008": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "DUP2",
      "path": "43"
    },
    "5009": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5012": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "5014": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "DUP3",
      "path": "43"
    },
    "5015": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "ADD",
      "path": "43"
    },
    "5016": {
      "op": "MSTORE"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5021": {
      "op": "DUP3"
    },
    "5022": {
      "op": "ADD"
    },
    "5023": {
      "op": "MSTORE"
    },
    "5024": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5059": {
      "op": "DUP3"
    },
    "5060": {
      "op": "ADD"
    },
    "5061": {
      "op": "MSTORE"
    },
    "5062": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5070": {
      "op": "SHL"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5073": {
      "op": "DUP3"
    },
    "5074": {
      "op": "ADD"
    },
    "5075": {
      "op": "MSTORE"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5078": {
      "op": "ADD"
    },
    "5079": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6F3"
    },
    "5082": {
      "op": "JUMP"
    },
    "5083": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "5084": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6742,
        6809
      ],
      "op": "PUSH2",
      "path": "43",
      "statement": 48,
      "value": "0x13E8"
    },
    "5087": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "5088": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6765,
        6772
      ],
      "op": "DUP6",
      "path": "43"
    },
    "5089": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6793,
        6808
      ],
      "op": "DUP6",
      "path": "43"
    },
    "5090": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6774,
        6790
      ],
      "op": "DUP5",
      "path": "43"
    },
    "5091": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6774,
        6808
      ],
      "op": "SUB",
      "path": "43"
    },
    "5092": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6742,
        6750
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2B2C"
    },
    "5095": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6742,
        6809
      ],
      "op": "JUMP",
      "path": "43"
    },
    "5096": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6742,
        6809
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "5097": {
      "op": "POP"
    },
    "5098": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6837,
        6841
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 49,
      "value": "0x1"
    },
    "5100": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6837,
        6841
      ],
      "op": "SWAP4",
      "path": "43"
    },
    "5101": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "5102": {
      "op": "POP"
    },
    "5103": {
      "op": "POP"
    },
    "5104": {
      "op": "POP"
    },
    "5105": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMP",
      "path": "43"
    },
    "5106": {
      "fn": "TokenisableRange.init",
      "offset": [
        7304,
        8719
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5107": {
      "fn": "TokenisableRange.init",
      "offset": [
        7373,
        7391
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 50,
      "value": "0x1"
    },
    "5109": {
      "fn": "TokenisableRange.init",
      "offset": [
        7363,
        7369
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "5111": {
      "fn": "TokenisableRange.init",
      "offset": [
        7363,
        7369
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5112": {
      "fn": "TokenisableRange.init",
      "offset": [
        7363,
        7369
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5114": {
      "fn": "TokenisableRange.init",
      "offset": [
        7363,
        7369
      ],
      "op": "AND",
      "path": "1"
    },
    "5115": {
      "fn": "TokenisableRange.init",
      "offset": [
        7363,
        7391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5117": {
      "fn": "TokenisableRange.init",
      "offset": [
        7363,
        7391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5118": {
      "fn": "TokenisableRange.init",
      "offset": [
        7363,
        7391
      ],
      "op": "GT",
      "path": "1"
    },
    "5119": {
      "fn": "TokenisableRange.init",
      "offset": [
        7363,
        7391
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5120": {
      "fn": "TokenisableRange.init",
      "offset": [
        7363,
        7391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x140B"
    },
    "5123": {
      "fn": "TokenisableRange.init",
      "offset": [
        7363,
        7391
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5124": {
      "fn": "TokenisableRange.init",
      "offset": [
        7363,
        7391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x140B"
    },
    "5127": {
      "fn": "TokenisableRange.init",
      "offset": [
        7363,
        7391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x395D"
    },
    "5130": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        7363,
        7391
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5131": {
      "fn": "TokenisableRange.init",
      "offset": [
        7363,
        7391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5132": {
      "branch": 171,
      "fn": "TokenisableRange.init",
      "offset": [
        7363,
        7391
      ],
      "op": "EQ",
      "path": "1"
    },
    "5133": {
      "fn": "TokenisableRange.init",
      "offset": [
        7355,
        7403
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1442"
    },
    "5136": {
      "branch": 171,
      "fn": "TokenisableRange.init",
      "offset": [
        7355,
        7403
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5137": {
      "fn": "TokenisableRange.init",
      "offset": [
        7355,
        7403
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5139": {
      "fn": "TokenisableRange.init",
      "offset": [
        7355,
        7403
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5140": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5146": {
      "op": "SHL"
    },
    "5147": {
      "fn": "TokenisableRange.init",
      "offset": [
        7355,
        7403
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5148": {
      "fn": "TokenisableRange.init",
      "offset": [
        7355,
        7403
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5151": {
      "fn": "TokenisableRange.init",
      "offset": [
        7355,
        7403
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5153": {
      "fn": "TokenisableRange.init",
      "offset": [
        7355,
        7403
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5154": {
      "fn": "TokenisableRange.init",
      "offset": [
        7355,
        7403
      ],
      "op": "ADD",
      "path": "1"
    },
    "5155": {
      "op": "MSTORE"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5160": {
      "op": "DUP3"
    },
    "5161": {
      "op": "ADD"
    },
    "5162": {
      "op": "MSTORE"
    },
    "5163": {
      "op": "PUSH7",
      "value": "0x21496E69744C5"
    },
    "5171": {
      "op": "PUSH1",
      "value": "0xCC"
    },
    "5173": {
      "op": "SHL"
    },
    "5174": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5176": {
      "op": "DUP3"
    },
    "5177": {
      "op": "ADD"
    },
    "5178": {
      "op": "MSTORE"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5181": {
      "op": "ADD"
    },
    "5182": {
      "fn": "TokenisableRange.init",
      "offset": [
        7355,
        7403
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F3"
    },
    "5185": {
      "op": "JUMP"
    },
    "5186": {
      "fn": "TokenisableRange.init",
      "offset": [
        7355,
        7403
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5187": {
      "fn": "TokenisableRange.init",
      "offset": [
        7435,
        7442
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 51,
      "value": "0xF"
    },
    "5189": {
      "fn": "TokenisableRange.init",
      "offset": [
        7435,
        7442
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5190": {
      "fn": "TokenisableRange.init",
      "offset": [
        7435,
        7442
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "5193": {
      "fn": "TokenisableRange.init",
      "offset": [
        7435,
        7442
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5194": {
      "fn": "TokenisableRange.init",
      "offset": [
        7435,
        7442
      ],
      "op": "DIV",
      "path": "1"
    },
    "5195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5201": {
      "op": "SHL"
    },
    "5202": {
      "op": "SUB"
    },
    "5203": {
      "fn": "TokenisableRange.init",
      "offset": [
        7435,
        7442
      ],
      "op": "AND",
      "path": "1"
    },
    "5204": {
      "fn": "TokenisableRange.init",
      "offset": [
        7421,
        7431
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5205": {
      "branch": 172,
      "fn": "TokenisableRange.init",
      "offset": [
        7421,
        7442
      ],
      "op": "EQ",
      "path": "1"
    },
    "5206": {
      "fn": "TokenisableRange.init",
      "offset": [
        7413,
        7461
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1492"
    },
    "5209": {
      "branch": 172,
      "fn": "TokenisableRange.init",
      "offset": [
        7413,
        7461
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5210": {
      "fn": "TokenisableRange.init",
      "offset": [
        7413,
        7461
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5212": {
      "fn": "TokenisableRange.init",
      "offset": [
        7413,
        7461
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5219": {
      "op": "SHL"
    },
    "5220": {
      "fn": "TokenisableRange.init",
      "offset": [
        7413,
        7461
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5221": {
      "fn": "TokenisableRange.init",
      "offset": [
        7413,
        7461
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5224": {
      "fn": "TokenisableRange.init",
      "offset": [
        7413,
        7461
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5226": {
      "fn": "TokenisableRange.init",
      "offset": [
        7413,
        7461
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5227": {
      "fn": "TokenisableRange.init",
      "offset": [
        7413,
        7461
      ],
      "op": "ADD",
      "path": "1"
    },
    "5228": {
      "op": "MSTORE"
    },
    "5229": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5233": {
      "op": "DUP3"
    },
    "5234": {
      "op": "ADD"
    },
    "5235": {
      "op": "MSTORE"
    },
    "5236": {
      "op": "PUSH14",
      "value": "0x155B985B1B1BDDD9590818D85B1B"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "5253": {
      "op": "SHL"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5256": {
      "op": "DUP3"
    },
    "5257": {
      "op": "ADD"
    },
    "5258": {
      "op": "MSTORE"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5261": {
      "op": "ADD"
    },
    "5262": {
      "fn": "TokenisableRange.init",
      "offset": [
        7413,
        7461
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F3"
    },
    "5265": {
      "op": "JUMP"
    },
    "5266": {
      "fn": "TokenisableRange.init",
      "offset": [
        7413,
        7461
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5267": {
      "fn": "TokenisableRange.init",
      "offset": [
        7471,
        7477
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 52,
      "value": "0xF"
    },
    "5269": {
      "fn": "TokenisableRange.init",
      "offset": [
        7471,
        7496
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5270": {
      "fn": "TokenisableRange.init",
      "offset": [
        7471,
        7496
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5273": {
      "op": "NOT"
    },
    "5274": {
      "fn": "TokenisableRange.init",
      "offset": [
        7471,
        7496
      ],
      "op": "AND",
      "path": "1"
    },
    "5275": {
      "fn": "TokenisableRange.init",
      "offset": [
        7480,
        7496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5277": {
      "fn": "TokenisableRange.init",
      "offset": [
        7471,
        7496
      ],
      "op": "OR",
      "path": "1"
    },
    "5278": {
      "fn": "TokenisableRange.init",
      "offset": [
        7471,
        7496
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5279": {
      "fn": "TokenisableRange.init",
      "offset": [
        7471,
        7496
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5280": {
      "fn": "TokenisableRange.init",
      "offset": [
        7506,
        7512
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 53,
      "value": "0xA"
    },
    "5282": {
      "fn": "TokenisableRange.init",
      "offset": [
        7506,
        7518
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5283": {
      "fn": "TokenisableRange.init",
      "offset": [
        7506,
        7566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14B7"
    },
    "5286": {
      "fn": "TokenisableRange.init",
      "offset": [
        7506,
        7566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5293": {
      "op": "SHL"
    },
    "5294": {
      "op": "SUB"
    },
    "5295": {
      "fn": "TokenisableRange.init",
      "offset": [
        7506,
        7518
      ],
      "op": "AND",
      "path": "1"
    },
    "5296": {
      "fn": "TokenisableRange.init",
      "offset": [
        7536,
        7546
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5297": {
      "fn": "TokenisableRange.init",
      "offset": [
        7556,
        7560
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "5298": {
      "fn": "TokenisableRange.init",
      "offset": [
        7563,
        7565
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5299": {
      "fn": "TokenisableRange.init",
      "offset": [
        7506,
        7535
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x322C"
    },
    "5302": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        7506,
        7566
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5303": {
      "fn": "TokenisableRange.init",
      "offset": [
        7506,
        7566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5304": {
      "fn": "TokenisableRange.init",
      "offset": [
        7576,
        7582
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 54,
      "value": "0xB"
    },
    "5306": {
      "fn": "TokenisableRange.init",
      "offset": [
        7576,
        7588
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5307": {
      "fn": "TokenisableRange.init",
      "offset": [
        7576,
        7636
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14CF"
    },
    "5310": {
      "fn": "TokenisableRange.init",
      "offset": [
        7576,
        7636
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5317": {
      "op": "SHL"
    },
    "5318": {
      "op": "SUB"
    },
    "5319": {
      "fn": "TokenisableRange.init",
      "offset": [
        7576,
        7588
      ],
      "op": "AND",
      "path": "1"
    },
    "5320": {
      "fn": "TokenisableRange.init",
      "offset": [
        7606,
        7616
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5321": {
      "fn": "TokenisableRange.init",
      "offset": [
        7626,
        7630
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "5322": {
      "fn": "TokenisableRange.init",
      "offset": [
        7633,
        7635
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5323": {
      "fn": "TokenisableRange.init",
      "offset": [
        7576,
        7605
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x322C"
    },
    "5326": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        7576,
        7636
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5327": {
      "fn": "TokenisableRange.init",
      "offset": [
        7576,
        7636
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5328": {
      "fn": "TokenisableRange.init",
      "offset": [
        7646,
        7652
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 55,
      "value": "0xA"
    },
    "5330": {
      "fn": "TokenisableRange.init",
      "offset": [
        7646,
        7658
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5331": {
      "fn": "TokenisableRange.init",
      "offset": [
        7646,
        7702
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F4"
    },
    "5334": {
      "fn": "TokenisableRange.init",
      "offset": [
        7646,
        7702
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5341": {
      "op": "SHL"
    },
    "5342": {
      "op": "SUB"
    },
    "5343": {
      "fn": "TokenisableRange.init",
      "offset": [
        7646,
        7658
      ],
      "op": "AND",
      "path": "1"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5346": {
      "op": "DUP1"
    },
    "5347": {
      "op": "MLOAD"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5350": {
      "op": "PUSH2",
      "value": "0x4545"
    },
    "5353": {
      "op": "DUP4"
    },
    "5354": {
      "op": "CODECOPY"
    },
    "5355": {
      "op": "DUP2"
    },
    "5356": {
      "op": "MLOAD"
    },
    "5357": {
      "op": "SWAP2"
    },
    "5358": {
      "op": "MSTORE"
    },
    "5359": {
      "fn": "TokenisableRange.init",
      "offset": [
        7699,
        7701
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5360": {
      "fn": "TokenisableRange.init",
      "offset": [
        7646,
        7680
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302C"
    },
    "5363": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        7646,
        7702
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5364": {
      "fn": "TokenisableRange.init",
      "offset": [
        7646,
        7702
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5365": {
      "fn": "TokenisableRange.init",
      "offset": [
        7712,
        7718
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 56,
      "value": "0xB"
    },
    "5367": {
      "fn": "TokenisableRange.init",
      "offset": [
        7712,
        7724
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5368": {
      "fn": "TokenisableRange.init",
      "offset": [
        7712,
        7768
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1519"
    },
    "5371": {
      "fn": "TokenisableRange.init",
      "offset": [
        7712,
        7768
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5378": {
      "op": "SHL"
    },
    "5379": {
      "op": "SUB"
    },
    "5380": {
      "fn": "TokenisableRange.init",
      "offset": [
        7712,
        7724
      ],
      "op": "AND",
      "path": "1"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5383": {
      "op": "DUP1"
    },
    "5384": {
      "op": "MLOAD"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5387": {
      "op": "PUSH2",
      "value": "0x4545"
    },
    "5390": {
      "op": "DUP4"
    },
    "5391": {
      "op": "CODECOPY"
    },
    "5392": {
      "op": "DUP2"
    },
    "5393": {
      "op": "MLOAD"
    },
    "5394": {
      "op": "SWAP2"
    },
    "5395": {
      "op": "MSTORE"
    },
    "5396": {
      "fn": "TokenisableRange.init",
      "offset": [
        7765,
        7767
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5397": {
      "fn": "TokenisableRange.init",
      "offset": [
        7712,
        7746
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302C"
    },
    "5400": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        7712,
        7768
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5401": {
      "fn": "TokenisableRange.init",
      "offset": [
        7712,
        7768
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5402": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 57,
      "value": "0x40"
    },
    "5404": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5405": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5406": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x160"
    },
    "5409": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5410": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "ADD",
      "path": "1"
    },
    "5411": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5412": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5413": {
      "fn": "TokenisableRange.init",
      "offset": [
        7904,
        7910
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "5415": {
      "fn": "TokenisableRange.init",
      "offset": [
        7904,
        7916
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5422": {
      "op": "SHL"
    },
    "5423": {
      "op": "SUB"
    },
    "5424": {
      "fn": "TokenisableRange.init",
      "offset": [
        7904,
        7916
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5425": {
      "fn": "TokenisableRange.init",
      "offset": [
        7904,
        7916
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5426": {
      "fn": "TokenisableRange.init",
      "offset": [
        7904,
        7916
      ],
      "op": "AND",
      "path": "1"
    },
    "5427": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5428": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5429": {
      "fn": "TokenisableRange.init",
      "offset": [
        7951,
        7957
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "5431": {
      "fn": "TokenisableRange.init",
      "offset": [
        7951,
        7963
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5432": {
      "fn": "TokenisableRange.init",
      "offset": [
        7951,
        7963
      ],
      "op": "AND",
      "path": "1"
    },
    "5433": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5435": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5436": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "ADD",
      "path": "1"
    },
    "5437": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5438": {
      "fn": "TokenisableRange.init",
      "offset": [
        7987,
        7994
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "5440": {
      "fn": "TokenisableRange.init",
      "offset": [
        7987,
        7994
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5443": {
      "op": "DUP1"
    },
    "5444": {
      "op": "MLOAD"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5447": {
      "op": "PUSH2",
      "value": "0x4545"
    },
    "5450": {
      "op": "DUP4"
    },
    "5451": {
      "op": "CODECOPY"
    },
    "5452": {
      "op": "DUP2"
    },
    "5453": {
      "op": "MLOAD"
    },
    "5454": {
      "op": "SWAP2"
    },
    "5455": {
      "op": "MSTORE"
    },
    "5456": {
      "offset": [
        2006,
        2048
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5457": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        7817
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x88316456"
    },
    "5462": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        7817
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5463": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5464": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5465": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5466": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "ADD",
      "path": "1"
    },
    "5467": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5468": {
      "fn": "TokenisableRange.init",
      "offset": [
        7987,
        8000
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1572"
    },
    "5471": {
      "fn": "TokenisableRange.init",
      "offset": [
        7987,
        8000
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5474": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "5476": {
      "op": "SHL"
    },
    "5477": {
      "fn": "TokenisableRange.init",
      "offset": [
        7987,
        7994
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5478": {
      "fn": "TokenisableRange.init",
      "offset": [
        7987,
        7994
      ],
      "op": "DIV",
      "path": "1"
    },
    "5479": {
      "fn": "TokenisableRange.init",
      "offset": [
        7987,
        7994
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "5483": {
      "fn": "TokenisableRange.init",
      "offset": [
        7987,
        7994
      ],
      "op": "AND",
      "path": "1"
    },
    "5484": {
      "fn": "TokenisableRange.init",
      "offset": [
        7997,
        8000
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "5486": {
      "fn": "TokenisableRange.init",
      "offset": [
        7987,
        8000
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F29"
    },
    "5489": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        7987,
        8000
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5490": {
      "fn": "TokenisableRange.init",
      "offset": [
        7987,
        8000
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5491": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "5495": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "AND",
      "path": "1"
    },
    "5496": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5497": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5498": {
      "fn": "TokenisableRange.init",
      "offset": [
        8029,
        8038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "5500": {
      "fn": "TokenisableRange.init",
      "offset": [
        8029,
        8038
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5501": {
      "fn": "TokenisableRange.init",
      "offset": [
        8029,
        8038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5503": {
      "fn": "TokenisableRange.init",
      "offset": [
        8029,
        8038
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5504": {
      "fn": "TokenisableRange.init",
      "offset": [
        8029,
        8038
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5505": {
      "fn": "TokenisableRange.init",
      "offset": [
        8029,
        8038
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "5506": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5508": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5509": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "ADD",
      "path": "1"
    },
    "5510": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5511": {
      "fn": "TokenisableRange.init",
      "offset": [
        8067,
        8076
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1000000"
    },
    "5516": {
      "fn": "TokenisableRange.init",
      "offset": [
        8067,
        8076
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5517": {
      "fn": "TokenisableRange.init",
      "offset": [
        8067,
        8076
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5518": {
      "fn": "TokenisableRange.init",
      "offset": [
        8067,
        8076
      ],
      "op": "DIV",
      "path": "1"
    },
    "5519": {
      "fn": "TokenisableRange.init",
      "offset": [
        8067,
        8076
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5520": {
      "fn": "TokenisableRange.init",
      "offset": [
        8067,
        8076
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "5521": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5523": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5524": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "ADD",
      "path": "1"
    },
    "5525": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5526": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "5528": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5529": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "ADD",
      "path": "1"
    },
    "5530": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5531": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5532": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5533": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "5535": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5536": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "ADD",
      "path": "1"
    },
    "5537": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5538": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5539": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5540": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "5542": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "ADD",
      "path": "1"
    },
    "5543": {
      "fn": "TokenisableRange.init",
      "offset": [
        8190,
        8193
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "5545": {
      "fn": "TokenisableRange.init",
      "offset": [
        8179,
        8186
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15B3"
    },
    "5548": {
      "fn": "TokenisableRange.init",
      "offset": [
        8110,
        8112
      ],
      "op": "DUP8",
      "path": "1"
    },
    "5549": {
      "fn": "TokenisableRange.init",
      "offset": [
        8184,
        8186
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5F"
    },
    "5551": {
      "fn": "TokenisableRange.init",
      "offset": [
        8179,
        8186
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "5554": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        8179,
        8186
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5555": {
      "fn": "TokenisableRange.init",
      "offset": [
        8179,
        8186
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5556": {
      "fn": "TokenisableRange.init",
      "offset": [
        8178,
        8193
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15BD"
    },
    "5559": {
      "fn": "TokenisableRange.init",
      "offset": [
        8178,
        8193
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5560": {
      "fn": "TokenisableRange.init",
      "offset": [
        8178,
        8193
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5561": {
      "fn": "TokenisableRange.init",
      "offset": [
        8178,
        8193
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "5564": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        8178,
        8193
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5565": {
      "fn": "TokenisableRange.init",
      "offset": [
        8178,
        8193
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5566": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5567": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5568": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5570": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "ADD",
      "path": "1"
    },
    "5571": {
      "fn": "TokenisableRange.init",
      "offset": [
        8235,
        8238
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "5573": {
      "fn": "TokenisableRange.init",
      "offset": [
        8224,
        8231
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15CF"
    },
    "5576": {
      "fn": "TokenisableRange.init",
      "offset": [
        8224,
        8226
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5577": {
      "fn": "TokenisableRange.init",
      "offset": [
        8229,
        8231
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5F"
    },
    "5579": {
      "fn": "TokenisableRange.init",
      "offset": [
        8224,
        8231
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "5582": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        8224,
        8231
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5583": {
      "fn": "TokenisableRange.init",
      "offset": [
        8224,
        8231
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5584": {
      "fn": "TokenisableRange.init",
      "offset": [
        8223,
        8238
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15D9"
    },
    "5587": {
      "fn": "TokenisableRange.init",
      "offset": [
        8223,
        8238
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5588": {
      "fn": "TokenisableRange.init",
      "offset": [
        8223,
        8238
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5589": {
      "fn": "TokenisableRange.init",
      "offset": [
        8223,
        8238
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "5592": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        8223,
        8238
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5593": {
      "fn": "TokenisableRange.init",
      "offset": [
        8223,
        8238
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5594": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5595": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5596": {
      "fn": "TokenisableRange.init",
      "offset": [
        8275,
        8279
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "5597": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5599": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5600": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "ADD",
      "path": "1"
    },
    "5601": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5602": {
      "fn": "TokenisableRange.init",
      "offset": [
        8308,
        8323
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "5603": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5605": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5606": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5607": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "ADD",
      "path": "1"
    },
    "5608": {
      "fn": "TokenisableRange.init",
      "offset": [
        7831,
        8338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5609": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5616": {
      "op": "SHL"
    },
    "5617": {
      "op": "SUB"
    },
    "5618": {
      "op": "NOT"
    },
    "5619": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "5621": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5622": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5623": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "SHL",
      "path": "1"
    },
    "5624": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "AND",
      "path": "1"
    },
    "5625": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5626": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5627": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1607"
    },
    "5630": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5631": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5632": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5634": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "ADD",
      "path": "1"
    },
    "5635": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F50"
    },
    "5638": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        7805,
        8348
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5639": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5640": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "5642": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5644": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5645": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5646": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5647": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "SUB",
      "path": "1"
    },
    "5648": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5649": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5651": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "DUP8",
      "path": "1"
    },
    "5652": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "GAS",
      "path": "1"
    },
    "5653": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "CALL",
      "path": "1"
    },
    "5654": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5655": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5656": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5657": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1626"
    },
    "5660": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5661": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5662": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5664": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5665": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "5666": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5667": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5669": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5670": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5671": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "POP",
      "path": "1"
    },
    "5672": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "POP",
      "path": "1"
    },
    "5673": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "POP",
      "path": "1"
    },
    "5674": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "POP",
      "path": "1"
    },
    "5675": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5677": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5678": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5679": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5681": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "NOT",
      "path": "1"
    },
    "5682": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5684": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5685": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "ADD",
      "path": "1"
    },
    "5686": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "AND",
      "path": "1"
    },
    "5687": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5688": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "ADD",
      "path": "1"
    },
    "5689": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5690": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5692": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5693": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "POP",
      "path": "1"
    },
    "5694": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5695": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "ADD",
      "path": "1"
    },
    "5696": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5697": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x164A"
    },
    "5700": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5701": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5702": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4014"
    },
    "5705": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        7805,
        8348
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5706": {
      "fn": "TokenisableRange.init",
      "offset": [
        7805,
        8348
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5707": {
      "op": "POP"
    },
    "5708": {
      "op": "POP"
    },
    "5709": {
      "fn": "TokenisableRange.init",
      "offset": [
        7788,
        7797
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x10"
    },
    "5711": {
      "fn": "TokenisableRange.init",
      "offset": [
        7778,
        8348
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5712": {
      "fn": "TokenisableRange.init",
      "offset": [
        7778,
        8348
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5719": {
      "op": "SHL"
    },
    "5720": {
      "op": "SUB"
    },
    "5721": {
      "op": "NOT"
    },
    "5722": {
      "fn": "TokenisableRange.init",
      "offset": [
        7778,
        8348
      ],
      "op": "AND",
      "path": "1"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5729": {
      "op": "SHL"
    },
    "5730": {
      "op": "SUB"
    },
    "5731": {
      "fn": "TokenisableRange.init",
      "offset": [
        7778,
        8348
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5732": {
      "fn": "TokenisableRange.init",
      "offset": [
        7778,
        8348
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5733": {
      "fn": "TokenisableRange.init",
      "offset": [
        7778,
        8348
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5734": {
      "fn": "TokenisableRange.init",
      "offset": [
        7778,
        8348
      ],
      "op": "AND",
      "path": "1"
    },
    "5735": {
      "fn": "TokenisableRange.init",
      "offset": [
        7778,
        8348
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5736": {
      "fn": "TokenisableRange.init",
      "offset": [
        7778,
        8348
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5737": {
      "fn": "TokenisableRange.init",
      "offset": [
        7778,
        8348
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5738": {
      "fn": "TokenisableRange.init",
      "offset": [
        7778,
        8348
      ],
      "op": "OR",
      "path": "1"
    },
    "5739": {
      "fn": "TokenisableRange.init",
      "offset": [
        7778,
        8348
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5740": {
      "fn": "TokenisableRange.init",
      "offset": [
        7778,
        8348
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5741": {
      "fn": "TokenisableRange.init",
      "offset": [
        7779,
        7786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "5743": {
      "fn": "TokenisableRange.init",
      "offset": [
        7778,
        8348
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5744": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8478
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 58,
      "value": "0xA"
    },
    "5746": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8484
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5747": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5749": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5750": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5757": {
      "op": "SHL"
    },
    "5758": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5759": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5760": {
      "fn": "TokenisableRange.init",
      "offset": [
        8503,
        8507
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "5761": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5763": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5764": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "ADD",
      "path": "1"
    },
    "5765": {
      "op": "MSTORE"
    },
    "5766": {
      "fn": "TokenisableRange.init",
      "offset": [
        8409,
        8519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16E1"
    },
    "5769": {
      "fn": "TokenisableRange.init",
      "offset": [
        8409,
        8519
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5770": {
      "fn": "TokenisableRange.init",
      "offset": [
        8448,
        8458
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5771": {
      "fn": "TokenisableRange.init",
      "offset": [
        8448,
        8458
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5778": {
      "op": "SHL"
    },
    "5779": {
      "op": "SUB"
    },
    "5780": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8484
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5781": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8484
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5782": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8484
      ],
      "op": "AND",
      "path": "1"
    },
    "5783": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8484
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5784": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8494
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "5789": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8494
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5790": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5792": {
      "op": "ADD"
    },
    "5793": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5795": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5797": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5798": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5799": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5800": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "SUB",
      "path": "1"
    },
    "5801": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5802": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5803": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "GAS",
      "path": "1"
    },
    "5804": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "5805": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5806": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5807": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5808": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16BD"
    },
    "5811": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5812": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5813": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5815": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5816": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "5817": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5818": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5820": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5821": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5822": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "POP",
      "path": "1"
    },
    "5823": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "POP",
      "path": "1"
    },
    "5824": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "POP",
      "path": "1"
    },
    "5825": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "POP",
      "path": "1"
    },
    "5826": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5828": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5829": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5830": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5832": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "NOT",
      "path": "1"
    },
    "5833": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5835": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5836": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "ADD",
      "path": "1"
    },
    "5837": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "AND",
      "path": "1"
    },
    "5838": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5839": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "ADD",
      "path": "1"
    },
    "5840": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5841": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5843": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5844": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "POP",
      "path": "1"
    },
    "5845": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5846": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "ADD",
      "path": "1"
    },
    "5847": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5848": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11F5"
    },
    "5851": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5852": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5853": {
      "fn": "TokenisableRange.init",
      "offset": [
        8472,
        8509
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DF4"
    },
    "5856": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        8472,
        8509
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5857": {
      "fn": "TokenisableRange.init",
      "offset": [
        8409,
        8519
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5858": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8598
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 59,
      "value": "0xB"
    },
    "5860": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8604
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5861": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5863": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5864": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5871": {
      "op": "SHL"
    },
    "5872": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5873": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5874": {
      "fn": "TokenisableRange.init",
      "offset": [
        8623,
        8627
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "5875": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5877": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5878": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "ADD",
      "path": "1"
    },
    "5879": {
      "op": "MSTORE"
    },
    "5880": {
      "fn": "TokenisableRange.init",
      "offset": [
        8529,
        8639
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1753"
    },
    "5883": {
      "fn": "TokenisableRange.init",
      "offset": [
        8529,
        8639
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5884": {
      "fn": "TokenisableRange.init",
      "offset": [
        8568,
        8578
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5885": {
      "fn": "TokenisableRange.init",
      "offset": [
        8568,
        8578
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5892": {
      "op": "SHL"
    },
    "5893": {
      "op": "SUB"
    },
    "5894": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8604
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5895": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8604
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5896": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8604
      ],
      "op": "AND",
      "path": "1"
    },
    "5897": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8604
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5898": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8614
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "5903": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8614
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5906": {
      "op": "ADD"
    },
    "5907": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5909": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5911": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5912": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5913": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5914": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "SUB",
      "path": "1"
    },
    "5915": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5916": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5917": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "GAS",
      "path": "1"
    },
    "5918": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "5919": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5920": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5921": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5922": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x172F"
    },
    "5925": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5926": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5927": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5929": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5930": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "5931": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5932": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5934": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5935": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5936": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "POP",
      "path": "1"
    },
    "5937": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "POP",
      "path": "1"
    },
    "5938": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "POP",
      "path": "1"
    },
    "5939": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "POP",
      "path": "1"
    },
    "5940": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5942": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5943": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5944": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5946": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "NOT",
      "path": "1"
    },
    "5947": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5949": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5950": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "ADD",
      "path": "1"
    },
    "5951": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "AND",
      "path": "1"
    },
    "5952": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5953": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "ADD",
      "path": "1"
    },
    "5954": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5955": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5957": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5958": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "POP",
      "path": "1"
    },
    "5959": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5960": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "ADD",
      "path": "1"
    },
    "5961": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5962": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1294"
    },
    "5965": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5966": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5967": {
      "fn": "TokenisableRange.init",
      "offset": [
        8592,
        8629
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DF4"
    },
    "5970": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        8592,
        8629
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5971": {
      "fn": "TokenisableRange.init",
      "offset": [
        8529,
        8639
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5972": {
      "fn": "TokenisableRange.init",
      "offset": [
        8649,
        8672
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 60,
      "value": "0x1765"
    },
    "5975": {
      "fn": "TokenisableRange.init",
      "offset": [
        8655,
        8665
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5976": {
      "fn": "TokenisableRange.init",
      "offset": [
        8667,
        8671
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDE0B6B3A7640000"
    },
    "5985": {
      "fn": "TokenisableRange.init",
      "offset": [
        8649,
        8654
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3264"
    },
    "5988": {
      "fn": "TokenisableRange.init",
      "jump": "i",
      "offset": [
        8649,
        8672
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5989": {
      "fn": "TokenisableRange.init",
      "offset": [
        8649,
        8672
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5990": {
      "fn": "TokenisableRange.init",
      "offset": [
        8687,
        8712
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 61,
      "value": "0x40"
    },
    "5992": {
      "fn": "TokenisableRange.init",
      "offset": [
        8687,
        8712
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5993": {
      "fn": "TokenisableRange.init",
      "offset": [
        8687,
        8712
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5994": {
      "fn": "TokenisableRange.init",
      "offset": [
        8695,
        8705
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5995": {
      "op": "DUP2"
    },
    "5996": {
      "op": "MSTORE"
    },
    "5997": {
      "fn": "TokenisableRange.init",
      "offset": [
        8707,
        8711
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDE0B6B3A7640000"
    },
    "6006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6008": {
      "op": "DUP3"
    },
    "6009": {
      "op": "ADD"
    },
    "6010": {
      "op": "MSTORE"
    },
    "6011": {
      "fn": "TokenisableRange.init",
      "offset": [
        8687,
        8712
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
    },
    "6044": {
      "fn": "TokenisableRange.init",
      "offset": [
        8687,
        8712
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6045": {
      "op": "ADD"
    },
    "6046": {
      "fn": "TokenisableRange.init",
      "offset": [
        8687,
        8712
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6048": {
      "fn": "TokenisableRange.init",
      "offset": [
        8687,
        8712
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6049": {
      "fn": "TokenisableRange.init",
      "offset": [
        8687,
        8712
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6050": {
      "fn": "TokenisableRange.init",
      "offset": [
        8687,
        8712
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6051": {
      "fn": "TokenisableRange.init",
      "offset": [
        8687,
        8712
      ],
      "op": "SUB",
      "path": "1"
    },
    "6052": {
      "fn": "TokenisableRange.init",
      "offset": [
        8687,
        8712
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6053": {
      "fn": "TokenisableRange.init",
      "offset": [
        8687,
        8712
      ],
      "op": "LOG1",
      "path": "1"
    },
    "6054": {
      "fn": "TokenisableRange.init",
      "offset": [
        7304,
        8719
      ],
      "op": "POP",
      "path": "1"
    },
    "6055": {
      "fn": "TokenisableRange.init",
      "offset": [
        7304,
        8719
      ],
      "op": "POP",
      "path": "1"
    },
    "6056": {
      "fn": "TokenisableRange.init",
      "jump": "o",
      "offset": [
        7304,
        8719
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6057": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "6058": {
      "fn": "ERC20.transfer",
      "offset": [
        3807,
        3811
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "6060": {
      "fn": "ERC20.transfer",
      "offset": [
        3823,
        3865
      ],
      "op": "PUSH2",
      "path": "43",
      "statement": 62,
      "value": "0x668"
    },
    "6063": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "6064": {
      "fn": "ERC20.transfer",
      "offset": [
        3847,
        3856
      ],
      "op": "DUP5",
      "path": "43"
    },
    "6065": {
      "fn": "ERC20.transfer",
      "offset": [
        3858,
        3864
      ],
      "op": "DUP5",
      "path": "43"
    },
    "6066": {
      "fn": "ERC20.transfer",
      "offset": [
        3823,
        3832
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2C50"
    },
    "6069": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3823,
        3865
      ],
      "op": "JUMP",
      "path": "43"
    },
    "6070": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20219,
        20860
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6071": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20408,
        20414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "6073": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20408,
        20420
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6074": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20443,
        20449
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "6076": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20443,
        20455
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6077": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20470,
        20477
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "6079": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20470,
        20477
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6080": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20305,
        20322
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6082": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20305,
        20322
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6083": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20305,
        20322
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6084": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20305,
        20322
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6085": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20305,
        20322
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6086": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20305,
        20322
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6087": {
      "offset": [
        2128,
        2170
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x1F98431C8AD98523631AE4A59F267346EA31F984"
    },
    "6108": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        2128,
        2170
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6109": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20386
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1698EE82"
    },
    "6114": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20386
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6121": {
      "op": "SHL"
    },
    "6122": {
      "op": "SUB"
    },
    "6123": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20408,
        20420
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6124": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20408,
        20420
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6125": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20408,
        20420
      ],
      "op": "AND",
      "path": "1"
    },
    "6126": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20408,
        20420
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6127": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20443,
        20455
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6128": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20443,
        20455
      ],
      "op": "AND",
      "path": "1"
    },
    "6129": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20443,
        20455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6130": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20470,
        20483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1808"
    },
    "6133": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20470,
        20483
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6136": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "6138": {
      "op": "SHL"
    },
    "6139": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20470,
        20477
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6140": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20470,
        20477
      ],
      "op": "DIV",
      "path": "1"
    },
    "6141": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20470,
        20477
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "6145": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20470,
        20477
      ],
      "op": "AND",
      "path": "1"
    },
    "6146": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20480,
        20483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "6148": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20470,
        20483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F29"
    },
    "6151": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "jump": "i",
      "offset": [
        20470,
        20483
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6152": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20470,
        20483
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6153": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6155": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6160": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6162": {
      "op": "SHL"
    },
    "6163": {
      "op": "SUB"
    },
    "6164": {
      "op": "NOT"
    },
    "6165": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "6167": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6168": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6169": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "SHL",
      "path": "1"
    },
    "6170": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "AND",
      "path": "1"
    },
    "6171": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6172": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6179": {
      "op": "SHL"
    },
    "6180": {
      "op": "SUB"
    },
    "6181": {
      "op": "SWAP4"
    },
    "6182": {
      "op": "DUP5"
    },
    "6183": {
      "op": "AND"
    },
    "6184": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6186": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6187": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "ADD",
      "path": "1"
    },
    "6188": {
      "op": "MSTORE"
    },
    "6189": {
      "op": "SWAP3"
    },
    "6190": {
      "op": "SWAP1"
    },
    "6191": {
      "op": "SWAP2"
    },
    "6192": {
      "op": "AND"
    },
    "6193": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6195": {
      "op": "DUP4"
    },
    "6196": {
      "op": "ADD"
    },
    "6197": {
      "op": "MSTORE"
    },
    "6198": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "6202": {
      "op": "AND"
    },
    "6203": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6205": {
      "op": "DUP3"
    },
    "6206": {
      "op": "ADD"
    },
    "6207": {
      "op": "MSTORE"
    },
    "6208": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6210": {
      "op": "ADD"
    },
    "6211": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6213": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6215": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6216": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6217": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6218": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "SUB",
      "path": "1"
    },
    "6219": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6220": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6221": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "GAS",
      "path": "1"
    },
    "6222": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "6223": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6224": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6225": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6226": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x185F"
    },
    "6229": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6230": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6231": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6233": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6234": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "6235": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6236": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6238": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6239": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6240": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "POP",
      "path": "1"
    },
    "6241": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "POP",
      "path": "1"
    },
    "6242": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "POP",
      "path": "1"
    },
    "6243": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "POP",
      "path": "1"
    },
    "6244": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6246": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6247": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6248": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6250": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "NOT",
      "path": "1"
    },
    "6251": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6253": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6254": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "ADD",
      "path": "1"
    },
    "6255": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "AND",
      "path": "1"
    },
    "6256": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6257": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "ADD",
      "path": "1"
    },
    "6258": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6259": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6261": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6262": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "POP",
      "path": "1"
    },
    "6263": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6264": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "ADD",
      "path": "1"
    },
    "6265": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6266": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1883"
    },
    "6269": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6270": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6271": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4052"
    },
    "6274": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "jump": "i",
      "offset": [
        20368,
        20493
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6275": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20368,
        20493
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6276": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20353,
        20493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6277": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20353,
        20493
      ],
      "op": "POP",
      "path": "1"
    },
    "6278": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20504,
        20524
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6280": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20555,
        20559
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6287": {
      "op": "SHL"
    },
    "6288": {
      "op": "SUB"
    },
    "6289": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20566
      ],
      "op": "AND",
      "path": "1"
    },
    "6290": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20566
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3850C7BD"
    },
    "6295": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6297": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6298": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6299": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "6304": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "AND",
      "path": "1"
    },
    "6305": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "6307": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "SHL",
      "path": "1"
    },
    "6308": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6309": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6310": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6312": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "ADD",
      "path": "1"
    },
    "6313": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "6315": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6317": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6318": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6319": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6320": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "SUB",
      "path": "1"
    },
    "6321": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6322": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6323": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "GAS",
      "path": "1"
    },
    "6324": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "6325": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6326": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6327": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6328": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18C5"
    },
    "6331": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6332": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6333": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6335": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6336": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "6337": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6338": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6340": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6341": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6342": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "POP",
      "path": "1"
    },
    "6343": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "POP",
      "path": "1"
    },
    "6344": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "POP",
      "path": "1"
    },
    "6345": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "POP",
      "path": "1"
    },
    "6346": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6348": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6349": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6350": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6352": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "NOT",
      "path": "1"
    },
    "6353": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6355": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6356": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "ADD",
      "path": "1"
    },
    "6357": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "AND",
      "path": "1"
    },
    "6358": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6359": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "ADD",
      "path": "1"
    },
    "6360": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6361": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6363": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6364": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "POP",
      "path": "1"
    },
    "6365": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6366": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "ADD",
      "path": "1"
    },
    "6367": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6368": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18E9"
    },
    "6371": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6372": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6373": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x40A4"
    },
    "6376": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "jump": "i",
      "offset": [
        20540,
        20568
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6377": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20540,
        20568
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6378": {
      "op": "POP"
    },
    "6379": {
      "op": "POP"
    },
    "6380": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20716,
        20725
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 63,
      "value": "0x6"
    },
    "6382": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20716,
        20725
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6383": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6385": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6386": {
      "op": "PUSH4",
      "value": "0x986CFBA3"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6393": {
      "op": "SHL"
    },
    "6394": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6395": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6396": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20716,
        20725
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "6398": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20716,
        20725
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6399": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20716,
        20725
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6400": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20716,
        20725
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6401": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20716,
        20725
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "6402": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6404": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6405": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "ADD",
      "path": "1"
    },
    "6406": {
      "op": "MSTORE"
    },
    "6407": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20503,
        20568
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "6408": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20503,
        20568
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "6409": {
      "op": "POP"
    },
    "6410": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20609,
        20853
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A1D"
    },
    "6413": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20609,
        20853
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "6414": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20503,
        20568
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6415": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20503,
        20568
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "6416": {
      "op": "POP"
    },
    "6417": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20696
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x0"
    },
    "6438": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20696
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "6439": {
      "op": "POP"
    },
    "6440": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20715
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x986CFBA3"
    },
    "6445": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20715
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6446": {
      "op": "POP"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6449": {
      "op": "ADD"
    },
    "6450": {
      "op": "SWAP1"
    },
    "6451": {
      "op": "POP"
    },
    "6452": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6454": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6456": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6457": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6458": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6459": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "SUB",
      "path": "1"
    },
    "6460": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6461": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6462": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "GAS",
      "path": "1"
    },
    "6463": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "DELEGATECALL",
      "path": "1"
    },
    "6464": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6465": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6466": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6467": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1950"
    },
    "6470": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6471": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6472": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6474": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6475": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "6476": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6477": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6479": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6480": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6481": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "POP",
      "path": "1"
    },
    "6482": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "POP",
      "path": "1"
    },
    "6483": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "POP",
      "path": "1"
    },
    "6484": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "POP",
      "path": "1"
    },
    "6485": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6487": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6488": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6489": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6491": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "NOT",
      "path": "1"
    },
    "6492": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6494": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6495": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "ADD",
      "path": "1"
    },
    "6496": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "AND",
      "path": "1"
    },
    "6497": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6498": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "ADD",
      "path": "1"
    },
    "6499": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6500": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6502": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6503": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "POP",
      "path": "1"
    },
    "6504": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6505": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "ADD",
      "path": "1"
    },
    "6506": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6507": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1974"
    },
    "6510": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6511": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6512": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4052"
    },
    "6515": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "jump": "i",
      "offset": [
        20688,
        20726
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6516": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20688,
        20726
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6517": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20768,
        20777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "6519": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20768,
        20777
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6520": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6522": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6523": {
      "op": "PUSH4",
      "value": "0x986CFBA3"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6530": {
      "op": "SHL"
    },
    "6531": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6532": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6533": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20768,
        20777
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1000000"
    },
    "6538": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20768,
        20777
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6539": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20768,
        20777
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6540": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20768,
        20777
      ],
      "op": "DIV",
      "path": "1"
    },
    "6541": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20768,
        20777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "6543": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20768,
        20777
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "6544": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6546": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6547": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "ADD",
      "path": "1"
    },
    "6548": {
      "op": "MSTORE"
    },
    "6549": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20748
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x0"
    },
    "6570": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6571": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20767
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x986CFBA3"
    },
    "6576": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20767
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6577": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6579": {
      "op": "ADD"
    },
    "6580": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6582": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6584": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6585": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6586": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6587": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "SUB",
      "path": "1"
    },
    "6588": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6589": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6590": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "GAS",
      "path": "1"
    },
    "6591": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "DELEGATECALL",
      "path": "1"
    },
    "6592": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6593": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6594": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6595": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19D0"
    },
    "6598": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6599": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6600": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6602": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6603": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "6604": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6605": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6607": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6608": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6609": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "POP",
      "path": "1"
    },
    "6610": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "POP",
      "path": "1"
    },
    "6611": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "POP",
      "path": "1"
    },
    "6612": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "POP",
      "path": "1"
    },
    "6613": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6615": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6616": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6617": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6619": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "NOT",
      "path": "1"
    },
    "6620": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6622": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6623": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "ADD",
      "path": "1"
    },
    "6624": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "AND",
      "path": "1"
    },
    "6625": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6626": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "ADD",
      "path": "1"
    },
    "6627": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6628": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6630": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6631": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "POP",
      "path": "1"
    },
    "6632": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6633": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "ADD",
      "path": "1"
    },
    "6634": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6635": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19F4"
    },
    "6638": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6639": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6640": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4052"
    },
    "6643": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "jump": "i",
      "offset": [
        20740,
        20778
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6644": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20740,
        20778
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6645": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "6647": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "6648": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20806,
        20815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x10"
    },
    "6650": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20806,
        20815
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6651": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20801,
        20825
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A0E"
    },
    "6654": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20801,
        20825
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6655": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20819,
        20825
      ],
      "op": "DUP12",
      "path": "1"
    },
    "6656": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20819,
        20825
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6661": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6663": {
      "op": "SHL"
    },
    "6664": {
      "op": "SUB"
    },
    "6665": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20806,
        20815
      ],
      "op": "AND",
      "path": "1"
    },
    "6666": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20801,
        20825
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "6669": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "jump": "i",
      "offset": [
        20801,
        20825
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6670": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20801,
        20825
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6671": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20800,
        20842
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A18"
    },
    "6674": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20800,
        20842
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6675": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20800,
        20842
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6676": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20800,
        20842
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "6679": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "jump": "i",
      "offset": [
        20800,
        20842
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6680": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20800,
        20842
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6681": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20609,
        20648
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3343"
    },
    "6684": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "jump": "i",
      "offset": [
        20609,
        20853
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6685": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20609,
        20853
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6686": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20578,
        20853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6687": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20578,
        20853
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "6688": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20578,
        20853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6689": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20578,
        20853
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "6690": {
      "op": "POP"
    },
    "6691": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "offset": [
        20219,
        20860
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "6692": {
      "op": "POP"
    },
    "6693": {
      "op": "POP"
    },
    "6694": {
      "op": "POP"
    },
    "6695": {
      "op": "POP"
    },
    "6696": {
      "fn": "TokenisableRange.getTokenAmountsExcludingFees",
      "jump": "o",
      "offset": [
        20219,
        20860
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6697": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6704": {
      "op": "SHL"
    },
    "6705": {
      "op": "SUB"
    },
    "6706": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3393,
        3425
      ],
      "op": "DUP9",
      "path": "1",
      "statement": 64
    },
    "6707": {
      "branch": 173,
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3393,
        3425
      ],
      "op": "AND",
      "path": "1"
    },
    "6708": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3385,
        3444
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A70"
    },
    "6711": {
      "branch": 173,
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3385,
        3444
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6712": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3385,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6714": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3385,
        3444
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6715": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6719": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6721": {
      "op": "SHL"
    },
    "6722": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3385,
        3444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6723": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3385,
        3444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6726": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3385,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6728": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3385,
        3444
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6729": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3385,
        3444
      ],
      "op": "ADD",
      "path": "1"
    },
    "6730": {
      "op": "MSTORE"
    },
    "6731": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "6733": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6735": {
      "op": "DUP3"
    },
    "6736": {
      "op": "ADD"
    },
    "6737": {
      "op": "MSTORE"
    },
    "6738": {
      "op": "PUSH14",
      "value": "0x496E76616C6964206F7261636C65"
    },
    "6753": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "6755": {
      "op": "SHL"
    },
    "6756": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6758": {
      "op": "DUP3"
    },
    "6759": {
      "op": "ADD"
    },
    "6760": {
      "op": "MSTORE"
    },
    "6761": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6763": {
      "op": "ADD"
    },
    "6764": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3385,
        3444
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F3"
    },
    "6767": {
      "op": "JUMP"
    },
    "6768": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3385,
        3444
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6769": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3472,
        3493
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 65,
      "value": "0x0"
    },
    "6771": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3462,
        3468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "6773": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3462,
        3468
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6774": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3462,
        3468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "6776": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3462,
        3468
      ],
      "op": "AND",
      "path": "1"
    },
    "6777": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3462,
        3493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "6779": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3462,
        3493
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6780": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3462,
        3493
      ],
      "op": "GT",
      "path": "1"
    },
    "6781": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3462,
        3493
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6782": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3462,
        3493
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A89"
    },
    "6785": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3462,
        3493
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6786": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3462,
        3493
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A89"
    },
    "6789": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3462,
        3493
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x395D"
    },
    "6792": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        3462,
        3493
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6793": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3462,
        3493
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6794": {
      "branch": 174,
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3462,
        3493
      ],
      "op": "EQ",
      "path": "1"
    },
    "6795": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3454,
        3508
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AC3"
    },
    "6798": {
      "branch": 174,
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3454,
        3508
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6799": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3454,
        3508
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6801": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3454,
        3508
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6808": {
      "op": "SHL"
    },
    "6809": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3454,
        3508
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6810": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3454,
        3508
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6813": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3454,
        3508
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6815": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3454,
        3508
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6816": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3454,
        3508
      ],
      "op": "ADD",
      "path": "1"
    },
    "6817": {
      "op": "MSTORE"
    },
    "6818": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "6820": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6822": {
      "op": "DUP3"
    },
    "6823": {
      "op": "ADD"
    },
    "6824": {
      "op": "MSTORE"
    },
    "6825": {
      "op": "PUSH10",
      "value": "0x21496E697450726F7879"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6838": {
      "op": "SHL"
    },
    "6839": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6841": {
      "op": "DUP3"
    },
    "6842": {
      "op": "ADD"
    },
    "6843": {
      "op": "MSTORE"
    },
    "6844": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6846": {
      "op": "ADD"
    },
    "6847": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3454,
        3508
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F3"
    },
    "6850": {
      "op": "JUMP"
    },
    "6851": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3454,
        3508
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6852": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3518,
        3525
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 66,
      "value": "0xF"
    },
    "6854": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3518,
        3538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6855": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3518,
        3538
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6864": {
      "op": "SHL"
    },
    "6865": {
      "op": "SUB"
    },
    "6866": {
      "op": "NOT"
    },
    "6867": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3548,
        3575
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 67
    },
    "6868": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3548,
        3575
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6869": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3548,
        3575
      ],
      "op": "AND",
      "path": "1"
    },
    "6870": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3528,
        3538
      ],
      "op": "CALLER",
      "path": "1"
    },
    "6871": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3518,
        3538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "6874": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3518,
        3538
      ],
      "op": "MUL",
      "path": "1"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6877": {
      "op": "NOT"
    },
    "6878": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3548,
        3575
      ],
      "op": "AND",
      "path": "1"
    },
    "6879": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3548,
        3575
      ],
      "op": "OR",
      "path": "1"
    },
    "6880": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3548,
        3575
      ],
      "op": "OR",
      "path": "1"
    },
    "6881": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3548,
        3575
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6882": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3548,
        3575
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6883": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3585,
        3591
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 68,
      "value": "0xC"
    },
    "6885": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3585,
        3601
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6886": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3585,
        3601
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6893": {
      "op": "SHL"
    },
    "6894": {
      "op": "SUB"
    },
    "6895": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3585,
        3601
      ],
      "op": "DUP11",
      "path": "1"
    },
    "6896": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3585,
        3601
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6897": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3585,
        3601
      ],
      "op": "AND",
      "path": "1"
    },
    "6898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6904": {
      "op": "SHL"
    },
    "6905": {
      "op": "SUB"
    },
    "6906": {
      "op": "NOT"
    },
    "6907": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3585,
        3601
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6908": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3585,
        3601
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6909": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3585,
        3601
      ],
      "op": "AND",
      "path": "1"
    },
    "6910": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3585,
        3601
      ],
      "op": "OR",
      "path": "1"
    },
    "6911": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3585,
        3601
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6912": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3585,
        3601
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6913": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3585,
        3601
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6914": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3618
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 69,
      "value": "0xA"
    },
    "6916": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3633
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6917": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3633
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6918": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3633
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6919": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3633
      ],
      "op": "DUP11",
      "path": "1"
    },
    "6920": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3633
      ],
      "op": "AND",
      "path": "1"
    },
    "6921": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3633
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6922": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3633
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6923": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3633
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6924": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3633
      ],
      "op": "AND",
      "path": "1"
    },
    "6925": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3633
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6926": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3633
      ],
      "op": "OR",
      "path": "1"
    },
    "6927": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3633
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6928": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3633
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6929": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 70,
      "value": "0x40"
    },
    "6931": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6932": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6933": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6940": {
      "op": "SHL"
    },
    "6941": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6942": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6943": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6944": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6945": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3676
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x313CE567"
    },
    "6950": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3676
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6951": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6953": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6954": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6955": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "ADD",
      "path": "1"
    },
    "6956": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6957": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6959": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6960": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6961": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6962": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6963": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6964": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6965": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "SUB",
      "path": "1"
    },
    "6966": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "ADD",
      "path": "1"
    },
    "6967": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6968": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3612,
        3633
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6969": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "GAS",
      "path": "1"
    },
    "6970": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "6971": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6972": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6973": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6974": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B4B"
    },
    "6977": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6978": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6979": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6981": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6982": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "6983": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6984": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6986": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6987": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6988": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "POP",
      "path": "1"
    },
    "6989": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "POP",
      "path": "1"
    },
    "6990": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "POP",
      "path": "1"
    },
    "6991": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "POP",
      "path": "1"
    },
    "6992": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6994": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6995": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6996": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6998": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "NOT",
      "path": "1"
    },
    "6999": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7001": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7002": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "ADD",
      "path": "1"
    },
    "7003": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "AND",
      "path": "1"
    },
    "7004": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7005": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "ADD",
      "path": "1"
    },
    "7006": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7007": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7009": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7010": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "POP",
      "path": "1"
    },
    "7011": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7012": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "ADD",
      "path": "1"
    },
    "7013": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7014": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B6F"
    },
    "7017": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7018": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7019": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4130"
    },
    "7022": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        3661,
        3678
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7023": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3661,
        3678
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7024": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3649
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "7026": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7027": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7028": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7030": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7031": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7032": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7033": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "AND",
      "path": "1"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7038": {
      "op": "SHL"
    },
    "7039": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "MUL",
      "path": "1"
    },
    "7040": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7044": {
      "op": "SHL"
    },
    "7045": {
      "op": "NOT"
    },
    "7046": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7047": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7048": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "AND",
      "path": "1"
    },
    "7049": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7050": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7051": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7052": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "OR",
      "path": "1"
    },
    "7053": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7054": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3643,
        3678
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7055": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3688,
        3694
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 71,
      "value": "0xB"
    },
    "7057": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3688,
        3709
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7058": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3688,
        3709
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7065": {
      "op": "SHL"
    },
    "7066": {
      "op": "SUB"
    },
    "7067": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3688,
        3709
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7068": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3688,
        3709
      ],
      "op": "AND",
      "path": "1"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7075": {
      "op": "SHL"
    },
    "7076": {
      "op": "SUB"
    },
    "7077": {
      "op": "NOT"
    },
    "7078": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3688,
        3709
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7079": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3688,
        3709
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7080": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3688,
        3709
      ],
      "op": "AND",
      "path": "1"
    },
    "7081": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3688,
        3709
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7082": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3688,
        3709
      ],
      "op": "OR",
      "path": "1"
    },
    "7083": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3688,
        3709
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7084": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3688,
        3709
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7085": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3688,
        3709
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7086": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 72,
      "value": "0x40"
    },
    "7088": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7089": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7090": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "7095": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7097": {
      "op": "SHL"
    },
    "7098": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7099": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7100": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7101": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7102": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3752
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x313CE567"
    },
    "7107": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3752
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7108": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7110": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7111": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7112": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "ADD",
      "path": "1"
    },
    "7113": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7114": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7116": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7117": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7118": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7119": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7120": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7121": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7122": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "SUB",
      "path": "1"
    },
    "7123": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "ADD",
      "path": "1"
    },
    "7124": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7125": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3688,
        3709
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7126": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "GAS",
      "path": "1"
    },
    "7127": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "7128": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7129": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7130": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7131": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BE8"
    },
    "7134": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7135": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7136": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7138": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7139": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "7140": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7141": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7143": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7144": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7145": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "POP",
      "path": "1"
    },
    "7146": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "POP",
      "path": "1"
    },
    "7147": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "POP",
      "path": "1"
    },
    "7148": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "POP",
      "path": "1"
    },
    "7149": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7151": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7152": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7153": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7155": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "NOT",
      "path": "1"
    },
    "7156": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7158": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7159": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "ADD",
      "path": "1"
    },
    "7160": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "AND",
      "path": "1"
    },
    "7161": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7162": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "ADD",
      "path": "1"
    },
    "7163": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7164": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7166": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7167": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "POP",
      "path": "1"
    },
    "7168": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7169": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "ADD",
      "path": "1"
    },
    "7170": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7171": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C0C"
    },
    "7174": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7175": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7176": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4130"
    },
    "7179": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        3737,
        3754
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7180": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3737,
        3754
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7181": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3725
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "7183": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3734
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7185": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3734
      ],
      "op": "ADD",
      "path": "1"
    },
    "7186": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3734
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x14"
    },
    "7188": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "7191": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "EXP",
      "path": "1"
    },
    "7192": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7193": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7194": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7195": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7197": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "MUL",
      "path": "1"
    },
    "7198": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "NOT",
      "path": "1"
    },
    "7199": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "AND",
      "path": "1"
    },
    "7200": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7201": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7202": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7204": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "AND",
      "path": "1"
    },
    "7205": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "MUL",
      "path": "1"
    },
    "7206": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "OR",
      "path": "1"
    },
    "7207": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7208": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7209": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3719,
        3754
      ],
      "op": "POP",
      "path": "1"
    },
    "7210": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3764,
        3789
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7212": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3798
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7219": {
      "op": "SHL"
    },
    "7220": {
      "op": "SUB"
    },
    "7221": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3805
      ],
      "op": "AND",
      "path": "1"
    },
    "7222": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3805
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "7227": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7229": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7230": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7231": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "7236": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "AND",
      "path": "1"
    },
    "7237": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "7239": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "SHL",
      "path": "1"
    },
    "7240": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7241": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7242": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7244": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "ADD",
      "path": "1"
    },
    "7245": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7247": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7249": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7250": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7251": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7252": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "SUB",
      "path": "1"
    },
    "7253": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7254": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7255": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "GAS",
      "path": "1"
    },
    "7256": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "7257": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7258": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7259": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7260": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C69"
    },
    "7263": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7264": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7265": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7267": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7268": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "7269": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7270": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7272": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7273": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7274": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "POP",
      "path": "1"
    },
    "7275": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "POP",
      "path": "1"
    },
    "7276": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "POP",
      "path": "1"
    },
    "7277": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "POP",
      "path": "1"
    },
    "7278": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7280": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7281": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7282": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7284": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7285": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "7286": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7288": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7289": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7290": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7291": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "ADD",
      "path": "1"
    },
    "7292": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7294": {
      "op": "NOT"
    },
    "7295": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "AND",
      "path": "1"
    },
    "7296": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7297": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "ADD",
      "path": "1"
    },
    "7298": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7300": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7301": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C91"
    },
    "7304": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7305": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7306": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7307": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "ADD",
      "path": "1"
    },
    "7308": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7309": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x414B"
    },
    "7312": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        3792,
        3807
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7313": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3792,
        3807
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7314": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3764,
        3807
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7315": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3764,
        3807
      ],
      "op": "POP",
      "path": "1"
    },
    "7316": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3817,
        3841
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7318": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3850
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7325": {
      "op": "SHL"
    },
    "7326": {
      "op": "SUB"
    },
    "7327": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3857
      ],
      "op": "AND",
      "path": "1"
    },
    "7328": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3857
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "7333": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7335": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7336": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7337": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "7342": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "AND",
      "path": "1"
    },
    "7343": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "7345": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "SHL",
      "path": "1"
    },
    "7346": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7347": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7348": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7350": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "ADD",
      "path": "1"
    },
    "7351": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7353": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7355": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7356": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7357": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7358": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "SUB",
      "path": "1"
    },
    "7359": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7360": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7361": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "GAS",
      "path": "1"
    },
    "7362": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "7363": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7364": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7365": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7366": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CD3"
    },
    "7369": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7370": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7371": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7373": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7374": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "7375": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7376": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7378": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7379": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7380": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "POP",
      "path": "1"
    },
    "7381": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "POP",
      "path": "1"
    },
    "7382": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "POP",
      "path": "1"
    },
    "7383": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "POP",
      "path": "1"
    },
    "7384": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7386": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7387": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7388": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7390": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7391": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "7392": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7394": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7395": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7396": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7397": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "ADD",
      "path": "1"
    },
    "7398": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7400": {
      "op": "NOT"
    },
    "7401": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "AND",
      "path": "1"
    },
    "7402": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7403": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "ADD",
      "path": "1"
    },
    "7404": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7406": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7407": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CFB"
    },
    "7410": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7411": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7412": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7413": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "ADD",
      "path": "1"
    },
    "7414": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7415": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x414B"
    },
    "7418": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        3844,
        3859
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7419": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3844,
        3859
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7420": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3817,
        3859
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7421": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3817,
        3859
      ],
      "op": "POP",
      "path": "1"
    },
    "7422": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3870,
        3886
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7424": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        3897
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x0"
    },
    "7445": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        3916
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4F76C058"
    },
    "7450": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3985,
        4155
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D92"
    },
    "7453": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4117,
        4123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "7455": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4117,
        4132
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7457": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4117,
        4132
      ],
      "op": "ADD",
      "path": "1"
    },
    "7458": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4117,
        4132
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x14"
    },
    "7460": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4117,
        4132
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7461": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4117,
        4132
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7462": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4117,
        4132
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7463": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4117,
        4132
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "7466": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4117,
        4132
      ],
      "op": "EXP",
      "path": "1"
    },
    "7467": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4117,
        4132
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7468": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4117,
        4132
      ],
      "op": "DIV",
      "path": "1"
    },
    "7469": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4117,
        4132
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7471": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4117,
        4132
      ],
      "op": "AND",
      "path": "1"
    },
    "7472": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4111,
        4113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "7474": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4111,
        4132
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D3B"
    },
    "7477": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4111,
        4132
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7478": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4111,
        4132
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7479": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4111,
        4132
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "7482": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4111,
        4132
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7483": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4111,
        4132
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7484": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4091,
        4132
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D4E"
    },
    "7487": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4091,
        4132
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7492": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7494": {
      "op": "SHL"
    },
    "7495": {
      "op": "SUB"
    },
    "7496": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4091,
        4108
      ],
      "op": "DUP14",
      "path": "1"
    },
    "7497": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4091,
        4108
      ],
      "op": "AND",
      "path": "1"
    },
    "7498": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4091,
        4132
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "7501": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4091,
        4132
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7502": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4091,
        4132
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7503": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4034,
        4040
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "7505": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4034,
        4049
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7506": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4028,
        4049
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D66"
    },
    "7509": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4028,
        4049
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7514": {
      "op": "SHL"
    },
    "7515": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4034,
        4049
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7516": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4034,
        4049
      ],
      "op": "DIV",
      "path": "1"
    },
    "7517": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4034,
        4049
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7519": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4034,
        4049
      ],
      "op": "AND",
      "path": "1"
    },
    "7520": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4028,
        4030
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "7522": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4028,
        4049
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "7525": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4028,
        4049
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7526": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4028,
        4049
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7527": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4017,
        4050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D74"
    },
    "7530": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4017,
        4050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7533": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7535": {
      "op": "SHL"
    },
    "7536": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4017,
        4050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "7539": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4017,
        4050
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7540": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4017,
        4050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7541": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4016,
        4058
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D83"
    },
    "7544": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4016,
        4058
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7545": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4054,
        4058
      ],
      "op": "PUSH5",
      "path": "1",
      "value": "0x2540BE400"
    },
    "7551": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4016,
        4058
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "7554": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4016,
        4058
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7555": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4016,
        4058
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7556": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4015,
        4133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D8D"
    },
    "7559": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4015,
        4133
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7560": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4015,
        4133
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7561": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4015,
        4133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "7564": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4015,
        4133
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7565": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4015,
        4133
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7566": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3985,
        3989
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33E0"
    },
    "7569": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        3985,
        4155
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7570": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3985,
        4155
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7571": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3955,
        4155
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DA0"
    },
    "7574": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3955,
        4155
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "7579": {
      "op": "SHL"
    },
    "7580": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3955,
        4155
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "7583": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        3955,
        4155
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7584": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3955,
        4155
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7585": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7587": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7594": {
      "op": "SHL"
    },
    "7595": {
      "op": "SUB"
    },
    "7596": {
      "op": "NOT"
    },
    "7597": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "7599": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7600": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7601": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "SHL",
      "path": "1"
    },
    "7602": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "AND",
      "path": "1"
    },
    "7603": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7604": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7611": {
      "op": "SHL"
    },
    "7612": {
      "op": "SUB"
    },
    "7613": {
      "op": "SWAP1"
    },
    "7614": {
      "op": "SWAP2"
    },
    "7615": {
      "op": "AND"
    },
    "7616": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7618": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7619": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "ADD",
      "path": "1"
    },
    "7620": {
      "op": "MSTORE"
    },
    "7621": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7623": {
      "op": "ADD"
    },
    "7624": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7626": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7628": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7629": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7630": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7631": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "SUB",
      "path": "1"
    },
    "7632": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7633": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7634": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "GAS",
      "path": "1"
    },
    "7635": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "DELEGATECALL",
      "path": "1"
    },
    "7636": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7637": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7638": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7639": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DE4"
    },
    "7642": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7643": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7644": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7646": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7647": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "7648": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7649": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7651": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7652": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7653": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "POP",
      "path": "1"
    },
    "7654": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "POP",
      "path": "1"
    },
    "7655": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "POP",
      "path": "1"
    },
    "7656": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "POP",
      "path": "1"
    },
    "7657": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7659": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7660": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7661": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7663": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "NOT",
      "path": "1"
    },
    "7664": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7666": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7667": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "ADD",
      "path": "1"
    },
    "7668": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "AND",
      "path": "1"
    },
    "7669": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7670": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "ADD",
      "path": "1"
    },
    "7671": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7672": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7674": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7675": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "POP",
      "path": "1"
    },
    "7676": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7677": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "ADD",
      "path": "1"
    },
    "7678": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7679": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E08"
    },
    "7682": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7683": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7684": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41C2"
    },
    "7687": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        3889,
        4179
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7688": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3889,
        4179
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7689": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3870,
        4179
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7690": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3870,
        4179
      ],
      "op": "POP",
      "path": "1"
    },
    "7691": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4189,
        4205
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7693": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4216
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x0"
    },
    "7714": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4235
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4F76C058"
    },
    "7719": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4304,
        4472
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E48"
    },
    "7722": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4434,
        4440
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "7724": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4434,
        4449
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7726": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4434,
        4449
      ],
      "op": "ADD",
      "path": "1"
    },
    "7727": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4434,
        4449
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x14"
    },
    "7729": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4434,
        4449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7730": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4434,
        4449
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7731": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4434,
        4449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7732": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4434,
        4449
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "7735": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4434,
        4449
      ],
      "op": "EXP",
      "path": "1"
    },
    "7736": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4434,
        4449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7737": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4434,
        4449
      ],
      "op": "DIV",
      "path": "1"
    },
    "7738": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4434,
        4449
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7740": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4434,
        4449
      ],
      "op": "AND",
      "path": "1"
    },
    "7741": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4428,
        4430
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "7743": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4428,
        4449
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D3B"
    },
    "7746": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4428,
        4449
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7747": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4428,
        4449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7748": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4428,
        4449
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "7751": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4428,
        4449
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7752": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4304,
        4472
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7753": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4274,
        4472
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E56"
    },
    "7756": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4274,
        4472
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7759": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "7761": {
      "op": "SHL"
    },
    "7762": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4274,
        4472
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "7765": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4274,
        4472
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7766": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4274,
        4472
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7767": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7769": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7774": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7776": {
      "op": "SHL"
    },
    "7777": {
      "op": "SUB"
    },
    "7778": {
      "op": "NOT"
    },
    "7779": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "7781": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7782": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7783": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "SHL",
      "path": "1"
    },
    "7784": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "AND",
      "path": "1"
    },
    "7785": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7786": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7793": {
      "op": "SHL"
    },
    "7794": {
      "op": "SUB"
    },
    "7795": {
      "op": "SWAP1"
    },
    "7796": {
      "op": "SWAP2"
    },
    "7797": {
      "op": "AND"
    },
    "7798": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7800": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7801": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "ADD",
      "path": "1"
    },
    "7802": {
      "op": "MSTORE"
    },
    "7803": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7805": {
      "op": "ADD"
    },
    "7806": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7808": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7810": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7811": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7812": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7813": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "SUB",
      "path": "1"
    },
    "7814": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7815": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7816": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "GAS",
      "path": "1"
    },
    "7817": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "DELEGATECALL",
      "path": "1"
    },
    "7818": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7819": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7820": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7821": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E9A"
    },
    "7824": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7825": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7826": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7828": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7829": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "7830": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7831": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7833": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7834": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7835": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "POP",
      "path": "1"
    },
    "7836": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "POP",
      "path": "1"
    },
    "7837": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "POP",
      "path": "1"
    },
    "7838": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "POP",
      "path": "1"
    },
    "7839": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7841": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7842": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7843": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7845": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "NOT",
      "path": "1"
    },
    "7846": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7848": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7849": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "ADD",
      "path": "1"
    },
    "7850": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "AND",
      "path": "1"
    },
    "7851": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7852": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "ADD",
      "path": "1"
    },
    "7853": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7854": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7856": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7857": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "POP",
      "path": "1"
    },
    "7858": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7859": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "ADD",
      "path": "1"
    },
    "7860": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7861": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EBE"
    },
    "7864": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7865": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7866": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41C2"
    },
    "7869": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4208,
        4496
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7870": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4208,
        4496
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7871": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4189,
        4496
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7872": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4189,
        4496
      ],
      "op": "POP",
      "path": "1"
    },
    "7873": {
      "branch": 175,
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4511,
        4519
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7874": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4507,
        6475
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7875": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4507,
        6475
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FF4"
    },
    "7878": {
      "branch": 175,
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4507,
        6475
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7879": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4535,
        4542
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 73,
      "value": "0x6"
    },
    "7881": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4535,
        4546
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7882": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4535,
        4546
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7883": {
      "op": "PUSH9",
      "value": "0xFFFFFF000000000000"
    },
    "7893": {
      "op": "NOT"
    },
    "7894": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4535,
        4546
      ],
      "op": "AND",
      "path": "1"
    },
    "7895": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4535,
        4546
      ],
      "op": "PUSH7",
      "path": "1",
      "value": "0x5000000000000"
    },
    "7903": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4535,
        4546
      ],
      "op": "OR",
      "path": "1"
    },
    "7904": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4535,
        4546
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7905": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4535,
        4546
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7908": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4629,
        4630
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 74,
      "value": "0x2"
    },
    "7910": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4602,
        4625
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EEF"
    },
    "7913": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4615,
        4625
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7914": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4602,
        4612
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7915": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4602,
        4625
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41DD"
    },
    "7918": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4602,
        4625
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7919": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4602,
        4625
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7920": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4601,
        4630
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EF9"
    },
    "7923": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4601,
        4630
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7924": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4601,
        4630
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7925": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4601,
        4630
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4202"
    },
    "7928": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4601,
        4630
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7929": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4601,
        4630
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7930": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4758,
        4765
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 75,
      "value": "0x6"
    },
    "7932": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4758,
        4765
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7933": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4589,
        4630
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7934": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4589,
        4630
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7935": {
      "op": "POP"
    },
    "7936": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4758,
        4769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F16"
    },
    "7939": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4758,
        4769
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7942": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "7944": {
      "op": "SHL"
    },
    "7945": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4758,
        4765
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7946": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4758,
        4765
      ],
      "op": "DIV",
      "path": "1"
    },
    "7947": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4758,
        4765
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "7951": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4758,
        4765
      ],
      "op": "AND",
      "path": "1"
    },
    "7952": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4768,
        4769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "7954": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4758,
        4769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F29"
    },
    "7957": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4758,
        4769
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7958": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4758,
        4769
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7959": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4740,
        4747
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "7961": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4740,
        4747
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7962": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4722,
        4748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F2F"
    },
    "7965": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4722,
        4748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7968": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "7970": {
      "op": "SHL"
    },
    "7971": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4740,
        4747
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7972": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4740,
        4747
      ],
      "op": "DIV",
      "path": "1"
    },
    "7973": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4740,
        4747
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "7977": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4740,
        4747
      ],
      "op": "AND",
      "path": "1"
    },
    "7978": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4722,
        4731
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7979": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4722,
        4748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41DD"
    },
    "7982": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4722,
        4748
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7983": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4722,
        4748
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7984": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4721,
        4770
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F39"
    },
    "7987": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4721,
        4770
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7988": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4721,
        4770
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7989": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4721,
        4770
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x423C"
    },
    "7992": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4721,
        4770
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7993": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4721,
        4770
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7994": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4692,
        4699
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "7996": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4692,
        4699
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7997": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4674,
        4700
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F52"
    },
    "8000": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4674,
        4700
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8003": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "8005": {
      "op": "SHL"
    },
    "8006": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4692,
        4699
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8007": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4692,
        4699
      ],
      "op": "DIV",
      "path": "1"
    },
    "8008": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4692,
        4699
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "8012": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4692,
        4699
      ],
      "op": "AND",
      "path": "1"
    },
    "8013": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4674,
        4683
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8014": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4674,
        4700
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41DD"
    },
    "8017": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4674,
        4700
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8018": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4674,
        4700
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8019": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4673,
        4771
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F5C"
    },
    "8022": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4673,
        4771
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8023": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4673,
        4771
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8024": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4673,
        4771
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x425E"
    },
    "8027": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4673,
        4771
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8028": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4673,
        4771
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8029": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4834,
        4841
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 76,
      "value": "0x6"
    },
    "8031": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4834,
        4841
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8032": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4644,
        4771
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8033": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4644,
        4771
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "8034": {
      "op": "POP"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8037": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "8039": {
      "op": "SHL"
    },
    "8040": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4834,
        4841
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8041": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4834,
        4841
      ],
      "op": "DIV",
      "path": "1"
    },
    "8042": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4834,
        4841
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "8046": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4834,
        4841
      ],
      "op": "AND",
      "path": "1"
    },
    "8047": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4798,
        4825
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F78"
    },
    "8050": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4834,
        4841
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8051": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4644,
        4771
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8052": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4798,
        4825
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x425E"
    },
    "8055": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4798,
        4825
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8056": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4798,
        4825
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8057": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4798,
        4842
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F82"
    },
    "8060": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4798,
        4842
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8061": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4798,
        4842
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8062": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4798,
        4842
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x425E"
    },
    "8065": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4798,
        4842
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8066": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4798,
        4842
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8067": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4785,
        4842
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8068": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4785,
        4842
      ],
      "op": "POP",
      "path": "1"
    },
    "8069": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4957,
        4967
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 77
    },
    "8070": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5014,
        5025
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8071": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5072,
        5081
      ],
      "op": "DUP10",
      "path": "1"
    },
    "8072": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5128,
        5135
      ],
      "op": "DUP10",
      "path": "1"
    },
    "8073": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8075": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8076": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8078": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "ADD",
      "path": "1"
    },
    "8079": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F9B"
    },
    "8082": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "8083": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "8084": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8085": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8086": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8087": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4283"
    },
    "8090": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4888,
        5153
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8091": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8092": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8094": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8095": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8097": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8098": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8099": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "SUB",
      "path": "1"
    },
    "8100": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "SUB",
      "path": "1"
    },
    "8101": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8102": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8103": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8104": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8106": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4888,
        5153
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8107": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4856,
        4861
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "8109": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4856,
        5167
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8110": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4856,
        5167
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8111": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4856,
        5167
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FB8"
    },
    "8114": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4856,
        5167
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8115": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4856,
        5167
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8116": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4856,
        5167
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4361"
    },
    "8119": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        4856,
        5167
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8120": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4856,
        5167
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8121": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4856,
        5167
      ],
      "op": "POP",
      "path": "1"
    },
    "8122": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5279,
        5288
      ],
      "op": "DUP8",
      "path": "1",
      "statement": 78
    },
    "8123": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5335,
        5342
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8124": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5389,
        5399
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8125": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5446,
        5457
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8126": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8128": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8129": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8131": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "ADD",
      "path": "1"
    },
    "8132": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FD0"
    },
    "8135": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "8136": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "8137": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8138": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8139": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8140": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4421"
    },
    "8143": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        5215,
        5475
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8144": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8145": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8147": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8148": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8150": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8151": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8152": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "SUB",
      "path": "1"
    },
    "8153": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "SUB",
      "path": "1"
    },
    "8154": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8155": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8156": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8157": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8159": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5215,
        5475
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8160": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5181,
        5188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE"
    },
    "8162": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5181,
        5489
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8163": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5181,
        5489
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8164": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5181,
        5489
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FED"
    },
    "8167": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5181,
        5489
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8168": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5181,
        5489
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8169": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5181,
        5489
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4361"
    },
    "8172": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        5181,
        5489
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8173": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5181,
        5489
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8174": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5181,
        5489
      ],
      "op": "POP",
      "path": "1"
    },
    "8175": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4521,
        5500
      ],
      "op": "POP",
      "path": "1"
    },
    "8176": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4507,
        6475
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x213F"
    },
    "8179": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4507,
        6475
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8180": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4507,
        6475
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8181": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5520,
        5527
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 79,
      "value": "0x6"
    },
    "8183": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5520,
        5531
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8184": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5520,
        5531
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8185": {
      "op": "PUSH9",
      "value": "0xFFFFFF000000000000"
    },
    "8195": {
      "op": "NOT"
    },
    "8196": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5520,
        5531
      ],
      "op": "AND",
      "path": "1"
    },
    "8197": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5520,
        5531
      ],
      "op": "PUSH7",
      "path": "1",
      "value": "0x5000000000000"
    },
    "8205": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5520,
        5531
      ],
      "op": "OR",
      "path": "1"
    },
    "8206": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5520,
        5531
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8207": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5520,
        5531
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8208": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5520,
        5531
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8209": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5520,
        5531
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8210": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5661,
        5672
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 80,
      "value": "0x2029"
    },
    "8213": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5661,
        5672
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8214": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5520,
        5531
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8220": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "8222": {
      "op": "SHL"
    },
    "8223": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5661,
        5668
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8224": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5661,
        5668
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8225": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5661,
        5668
      ],
      "op": "DIV",
      "path": "1"
    },
    "8226": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5661,
        5668
      ],
      "op": "AND",
      "path": "1"
    },
    "8227": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5671,
        5672
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "8229": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5661,
        5672
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F29"
    },
    "8232": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        5661,
        5672
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8233": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5661,
        5672
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8234": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5643,
        5650
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "8236": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5643,
        5650
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8237": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5624,
        5651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2042"
    },
    "8240": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5624,
        5651
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8243": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "8245": {
      "op": "SHL"
    },
    "8246": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5643,
        5650
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8247": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5643,
        5650
      ],
      "op": "DIV",
      "path": "1"
    },
    "8248": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5643,
        5650
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "8252": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5643,
        5650
      ],
      "op": "AND",
      "path": "1"
    },
    "8253": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5624,
        5634
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8254": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5624,
        5651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41DD"
    },
    "8257": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        5624,
        5651
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8258": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5624,
        5651
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8259": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5623,
        5673
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x204C"
    },
    "8262": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5623,
        5673
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8263": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5623,
        5673
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8264": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5623,
        5673
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x423C"
    },
    "8267": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        5623,
        5673
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8268": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5623,
        5673
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8269": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5594,
        5601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "8271": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5594,
        5601
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8272": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5575,
        5602
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2065"
    },
    "8275": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5575,
        5602
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "8280": {
      "op": "SHL"
    },
    "8281": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5594,
        5601
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8282": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5594,
        5601
      ],
      "op": "DIV",
      "path": "1"
    },
    "8283": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5594,
        5601
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "8287": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5594,
        5601
      ],
      "op": "AND",
      "path": "1"
    },
    "8288": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5575,
        5585
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8289": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5575,
        5602
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41DD"
    },
    "8292": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        5575,
        5602
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8293": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5575,
        5602
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8294": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5574,
        5674
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x206F"
    },
    "8297": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5574,
        5674
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8298": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5574,
        5674
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8299": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5574,
        5674
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x425E"
    },
    "8302": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        5574,
        5674
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8303": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5574,
        5674
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8304": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5804,
        5811
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 81,
      "value": "0x6"
    },
    "8306": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5804,
        5811
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8307": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5545,
        5674
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8308": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5545,
        5674
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8309": {
      "op": "POP"
    },
    "8310": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5804,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x208C"
    },
    "8313": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5804,
        5815
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8316": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "8318": {
      "op": "SHL"
    },
    "8319": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5804,
        5811
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8320": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5804,
        5811
      ],
      "op": "DIV",
      "path": "1"
    },
    "8321": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5804,
        5811
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "8325": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5804,
        5811
      ],
      "op": "AND",
      "path": "1"
    },
    "8326": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5814,
        5815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "8328": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5804,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F29"
    },
    "8331": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        5804,
        5815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8332": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5804,
        5815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8333": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5786,
        5793
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "8335": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5786,
        5793
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8336": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5767,
        5794
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20A5"
    },
    "8339": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5767,
        5794
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8342": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "8344": {
      "op": "SHL"
    },
    "8345": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5786,
        5793
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8346": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5786,
        5793
      ],
      "op": "DIV",
      "path": "1"
    },
    "8347": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5786,
        5793
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "8351": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5786,
        5793
      ],
      "op": "AND",
      "path": "1"
    },
    "8352": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5767,
        5777
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8353": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5767,
        5794
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41DD"
    },
    "8356": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        5767,
        5794
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8357": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5767,
        5794
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8358": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5766,
        5816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20AF"
    },
    "8361": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5766,
        5816
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8362": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5766,
        5816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8363": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5766,
        5816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x423C"
    },
    "8366": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        5766,
        5816
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8367": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5766,
        5816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8368": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5737,
        5744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "8370": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5737,
        5744
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8371": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5718,
        5745
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20C8"
    },
    "8374": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5718,
        5745
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8377": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "8379": {
      "op": "SHL"
    },
    "8380": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5737,
        5744
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8381": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5737,
        5744
      ],
      "op": "DIV",
      "path": "1"
    },
    "8382": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5737,
        5744
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "8386": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5737,
        5744
      ],
      "op": "AND",
      "path": "1"
    },
    "8387": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5718,
        5728
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8388": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5718,
        5745
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41DD"
    },
    "8391": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        5718,
        5745
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8392": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5718,
        5745
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8393": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5717,
        5817
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20D2"
    },
    "8396": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5717,
        5817
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8397": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5717,
        5817
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8398": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5717,
        5817
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x425E"
    },
    "8401": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        5717,
        5817
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8402": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5717,
        5817
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8403": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5688,
        5817
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8404": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5688,
        5817
      ],
      "op": "POP",
      "path": "1"
    },
    "8405": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5932,
        5942
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 82
    },
    "8406": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5989,
        6000
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8407": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6047,
        6056
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8408": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6103,
        6110
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8409": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8411": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8412": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8414": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "ADD",
      "path": "1"
    },
    "8415": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20EB"
    },
    "8418": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "8419": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "8420": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8421": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8422": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8423": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44AC"
    },
    "8426": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        5863,
        6128
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8427": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8428": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8430": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8431": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8433": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8434": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8435": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "SUB",
      "path": "1"
    },
    "8436": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "SUB",
      "path": "1"
    },
    "8437": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8438": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8439": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8440": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8442": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5863,
        6128
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8443": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5831,
        5836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "8445": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5831,
        6142
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8446": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5831,
        6142
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8447": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5831,
        6142
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2108"
    },
    "8450": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5831,
        6142
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8451": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5831,
        6142
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8452": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5831,
        6142
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4361"
    },
    "8455": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        5831,
        6142
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8456": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5831,
        6142
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8457": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        5831,
        6142
      ],
      "op": "POP",
      "path": "1"
    },
    "8458": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6254,
        6263
      ],
      "op": "DUP7",
      "path": "1",
      "statement": 83
    },
    "8459": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6310,
        6317
      ],
      "op": "DUP7",
      "path": "1"
    },
    "8460": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6364,
        6374
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8461": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6421,
        6432
      ],
      "op": "DUP7",
      "path": "1"
    },
    "8462": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8464": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8465": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8467": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "ADD",
      "path": "1"
    },
    "8468": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2120"
    },
    "8471": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "8472": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "8473": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8474": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8475": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8476": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44CE"
    },
    "8479": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        6190,
        6450
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8480": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8481": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8483": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8484": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8486": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8487": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8488": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "SUB",
      "path": "1"
    },
    "8489": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "SUB",
      "path": "1"
    },
    "8490": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8491": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8492": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8493": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8495": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6190,
        6450
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8496": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6156,
        6163
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE"
    },
    "8498": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6156,
        6464
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8499": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6156,
        6464
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8500": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6156,
        6464
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x213D"
    },
    "8503": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6156,
        6464
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8504": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6156,
        6464
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8505": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6156,
        6464
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4361"
    },
    "8508": {
      "fn": "TokenisableRange.initProxy",
      "jump": "i",
      "offset": [
        6156,
        6464
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8509": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6156,
        6464
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8510": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6156,
        6464
      ],
      "op": "POP",
      "path": "1"
    },
    "8511": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        4507,
        6475
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8512": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6484,
        6493
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 84,
      "value": "0x6"
    },
    "8514": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6484,
        6506
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8515": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6484,
        6506
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8516": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6484,
        6506
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "8520": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6516,
        6538
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 85
    },
    "8521": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6516,
        6538
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8522": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6516,
        6538
      ],
      "op": "AND",
      "path": "1"
    },
    "8523": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6516,
        6538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1000000"
    },
    "8528": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6516,
        6538
      ],
      "op": "MUL",
      "path": "1"
    },
    "8529": {
      "op": "PUSH6",
      "value": "0xFFFFFFFFFFFF"
    },
    "8536": {
      "op": "NOT"
    },
    "8537": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6516,
        6538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8538": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6516,
        6538
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8539": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6516,
        6538
      ],
      "op": "AND",
      "path": "1"
    },
    "8540": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6484,
        6506
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8541": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6484,
        6506
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8542": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6484,
        6506
      ],
      "op": "AND",
      "path": "1"
    },
    "8543": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6516,
        6538
      ],
      "op": "OR",
      "path": "1"
    },
    "8544": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6516,
        6538
      ],
      "op": "OR",
      "path": "1"
    },
    "8545": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6516,
        6538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8546": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6516,
        6538
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8547": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6553,
        6611
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 86,
      "value": "0x40"
    },
    "8549": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6553,
        6611
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8550": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6553,
        6611
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8557": {
      "op": "SHL"
    },
    "8558": {
      "op": "SUB"
    },
    "8559": {
      "op": "DUP14"
    },
    "8560": {
      "op": "DUP2"
    },
    "8561": {
      "op": "AND"
    },
    "8562": {
      "op": "DUP3"
    },
    "8563": {
      "op": "MSTORE"
    },
    "8564": {
      "op": "DUP13"
    },
    "8565": {
      "op": "AND"
    },
    "8566": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8568": {
      "op": "DUP3"
    },
    "8569": {
      "op": "ADD"
    },
    "8570": {
      "op": "MSTORE"
    },
    "8571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8575": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8577": {
      "op": "SHL"
    },
    "8578": {
      "op": "SUB"
    },
    "8579": {
      "op": "DUP12"
    },
    "8580": {
      "op": "DUP2"
    },
    "8581": {
      "op": "AND"
    },
    "8582": {
      "op": "SWAP3"
    },
    "8583": {
      "op": "DUP3"
    },
    "8584": {
      "op": "ADD"
    },
    "8585": {
      "op": "SWAP3"
    },
    "8586": {
      "op": "SWAP1"
    },
    "8587": {
      "op": "SWAP3"
    },
    "8588": {
      "op": "MSTORE"
    },
    "8589": {
      "op": "SWAP1"
    },
    "8590": {
      "op": "DUP10"
    },
    "8591": {
      "op": "AND"
    },
    "8592": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8594": {
      "op": "DUP3"
    },
    "8595": {
      "op": "ADD"
    },
    "8596": {
      "op": "MSTORE"
    },
    "8597": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6553,
        6611
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xEB71465D71F7B18C376BA29F6EDB7953DC29C7AFB4FCAA4E1335C8827A8DD96E"
    },
    "8630": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6553,
        6611
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8631": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8633": {
      "op": "ADD"
    },
    "8634": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6553,
        6611
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8636": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6553,
        6611
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8637": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6553,
        6611
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8638": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6553,
        6611
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8639": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6553,
        6611
      ],
      "op": "SUB",
      "path": "1"
    },
    "8640": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6553,
        6611
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8641": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        6553,
        6611
      ],
      "op": "LOG1",
      "path": "1"
    },
    "8642": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3375,
        6618
      ],
      "op": "POP",
      "path": "1"
    },
    "8643": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3375,
        6618
      ],
      "op": "POP",
      "path": "1"
    },
    "8644": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3375,
        6618
      ],
      "op": "POP",
      "path": "1"
    },
    "8645": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3375,
        6618
      ],
      "op": "POP",
      "path": "1"
    },
    "8646": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "POP",
      "path": "1"
    },
    "8647": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "POP",
      "path": "1"
    },
    "8648": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "POP",
      "path": "1"
    },
    "8649": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "POP",
      "path": "1"
    },
    "8650": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "POP",
      "path": "1"
    },
    "8651": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "POP",
      "path": "1"
    },
    "8652": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "POP",
      "path": "1"
    },
    "8653": {
      "fn": "TokenisableRange.initProxy",
      "offset": [
        3131,
        6618
      ],
      "op": "POP",
      "path": "1"
    },
    "8654": {
      "fn": "TokenisableRange.initProxy",
      "jump": "o",
      "offset": [
        3131,
        6618
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8655": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11670,
        15856
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8656": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11764,
        11777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8658": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "8660": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x5"
    },
    "8662": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "8663": {
      "offset": [
        2325,
        2344
      ],
      "op": "SUB",
      "path": "42"
    },
    "8664": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2223"
    },
    "8667": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "8668": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8670": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8671": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8675": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8677": {
      "op": "SHL"
    },
    "8678": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8679": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8682": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "8684": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8685": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "42"
    },
    "8686": {
      "op": "MSTORE"
    },
    "8687": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8689": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8691": {
      "op": "DUP3"
    },
    "8692": {
      "op": "ADD"
    },
    "8693": {
      "op": "MSTORE"
    },
    "8694": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "8727": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8729": {
      "op": "DUP3"
    },
    "8730": {
      "op": "ADD"
    },
    "8731": {
      "op": "MSTORE"
    },
    "8732": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8734": {
      "op": "ADD"
    },
    "8735": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x6F3"
    },
    "8738": {
      "op": "JUMP"
    },
    "8739": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8740": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "8742": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x5"
    },
    "8744": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "8745": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12008,
        12009
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 87,
      "value": "0x0"
    },
    "8747": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11992,
        12005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2233"
    },
    "8750": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "8752": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "8753": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "8754": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "43"
    },
    "8755": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11992,
        12005
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8756": {
      "branch": 176,
      "fn": "TokenisableRange.deposit",
      "offset": [
        11992,
        12009
      ],
      "op": "GT",
      "path": "1"
    },
    "8757": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11984,
        12023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x226C"
    },
    "8760": {
      "branch": 176,
      "fn": "TokenisableRange.deposit",
      "offset": [
        11984,
        12023
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8761": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11984,
        12023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8763": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11984,
        12023
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8764": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8768": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8770": {
      "op": "SHL"
    },
    "8771": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11984,
        12023
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8772": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11984,
        12023
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8775": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11984,
        12023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8777": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11984,
        12023
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8778": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11984,
        12023
      ],
      "op": "ADD",
      "path": "1"
    },
    "8779": {
      "op": "MSTORE"
    },
    "8780": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "8782": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8784": {
      "op": "DUP3"
    },
    "8785": {
      "op": "ADD"
    },
    "8786": {
      "op": "MSTORE"
    },
    "8787": {
      "op": "PUSH9",
      "value": "0x15148810DB1BDCD959"
    },
    "8797": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "8799": {
      "op": "SHL"
    },
    "8800": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8802": {
      "op": "DUP3"
    },
    "8803": {
      "op": "ADD"
    },
    "8804": {
      "op": "MSTORE"
    },
    "8805": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8807": {
      "op": "ADD"
    },
    "8808": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11984,
        12023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F3"
    },
    "8811": {
      "op": "JUMP"
    },
    "8812": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11984,
        12023
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8813": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12034,
        12044
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 88,
      "value": "0x2274"
    },
    "8816": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12034,
        12042
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9BC"
    },
    "8819": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        12034,
        12044
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8820": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12034,
        12044
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8821": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12060
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 89,
      "value": "0xA"
    },
    "8823": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12066
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8824": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8826": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8827": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8834": {
      "op": "SHL"
    },
    "8835": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8836": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8837": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12080,
        12090
      ],
      "op": "CALLER",
      "path": "1"
    },
    "8838": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8840": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8841": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "ADD",
      "path": "1"
    },
    "8842": {
      "op": "MSTORE"
    },
    "8843": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12100,
        12104
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "8844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8846": {
      "op": "DUP3"
    },
    "8847": {
      "op": "ADD"
    },
    "8848": {
      "op": "MSTORE"
    },
    "8849": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8851": {
      "op": "DUP2"
    },
    "8852": {
      "op": "ADD"
    },
    "8853": {
      "op": "DUP6"
    },
    "8854": {
      "op": "SWAP1"
    },
    "8855": {
      "op": "MSTORE"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8862": {
      "op": "SHL"
    },
    "8863": {
      "op": "SUB"
    },
    "8864": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12066
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8865": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12066
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8866": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12066
      ],
      "op": "AND",
      "path": "1"
    },
    "8867": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12066
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8868": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12079
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "8873": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12079
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8874": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8876": {
      "op": "ADD"
    },
    "8877": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8879": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8881": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8882": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8883": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8884": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "SUB",
      "path": "1"
    },
    "8885": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8886": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8888": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8889": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "GAS",
      "path": "1"
    },
    "8890": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "CALL",
      "path": "1"
    },
    "8891": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8892": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8893": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8894": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22CB"
    },
    "8897": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8898": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8899": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8901": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8902": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "8903": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8904": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8906": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8907": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8908": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "POP",
      "path": "1"
    },
    "8909": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "POP",
      "path": "1"
    },
    "8910": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "POP",
      "path": "1"
    },
    "8911": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "POP",
      "path": "1"
    },
    "8912": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8914": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8915": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8916": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8918": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "NOT",
      "path": "1"
    },
    "8919": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8921": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8922": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "ADD",
      "path": "1"
    },
    "8923": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "AND",
      "path": "1"
    },
    "8924": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8925": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "ADD",
      "path": "1"
    },
    "8926": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8927": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8929": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8930": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "POP",
      "path": "1"
    },
    "8931": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8932": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "ADD",
      "path": "1"
    },
    "8933": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8934": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22EF"
    },
    "8937": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8938": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8939": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44EB"
    },
    "8942": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        12054,
        12110
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8943": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12054,
        12110
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8944": {
      "op": "POP"
    },
    "8945": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12126
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 90,
      "value": "0xB"
    },
    "8947": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12132
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8948": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8950": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8951": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "8956": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8958": {
      "op": "SHL"
    },
    "8959": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8960": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8961": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12146,
        12156
      ],
      "op": "CALLER",
      "path": "1"
    },
    "8962": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8964": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8965": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "ADD",
      "path": "1"
    },
    "8966": {
      "op": "MSTORE"
    },
    "8967": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12166,
        12170
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8970": {
      "op": "DUP3"
    },
    "8971": {
      "op": "ADD"
    },
    "8972": {
      "op": "MSTORE"
    },
    "8973": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8975": {
      "op": "DUP2"
    },
    "8976": {
      "op": "ADD"
    },
    "8977": {
      "op": "DUP5"
    },
    "8978": {
      "op": "SWAP1"
    },
    "8979": {
      "op": "MSTORE"
    },
    "8980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8986": {
      "op": "SHL"
    },
    "8987": {
      "op": "SUB"
    },
    "8988": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12132
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8989": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12132
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8990": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12132
      ],
      "op": "AND",
      "path": "1"
    },
    "8991": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12132
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8992": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12145
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "8997": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12145
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8998": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9000": {
      "op": "ADD"
    },
    "9001": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9003": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9005": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9006": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9007": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9008": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "SUB",
      "path": "1"
    },
    "9009": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9010": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9012": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "DUP8",
      "path": "1"
    },
    "9013": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "GAS",
      "path": "1"
    },
    "9014": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "CALL",
      "path": "1"
    },
    "9015": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9016": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9017": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9018": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2347"
    },
    "9021": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9022": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9023": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9025": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9026": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "9027": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9028": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9030": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9031": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9032": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "POP",
      "path": "1"
    },
    "9033": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "POP",
      "path": "1"
    },
    "9034": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "POP",
      "path": "1"
    },
    "9035": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "POP",
      "path": "1"
    },
    "9036": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9038": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9039": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9040": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9042": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "NOT",
      "path": "1"
    },
    "9043": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9045": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9046": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "ADD",
      "path": "1"
    },
    "9047": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "AND",
      "path": "1"
    },
    "9048": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9049": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "ADD",
      "path": "1"
    },
    "9050": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9051": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9053": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9054": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "POP",
      "path": "1"
    },
    "9055": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9056": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "ADD",
      "path": "1"
    },
    "9057": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9058": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x236B"
    },
    "9061": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9062": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9063": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44EB"
    },
    "9066": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        12120,
        12176
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9067": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9068": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12120,
        12176
      ],
      "op": "POP",
      "path": "1"
    },
    "9069": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12187,
        12199
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9071": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12209,
        12221
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9072": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12714,
        12715
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9074": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12707,
        12711
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "9076": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12707,
        12711
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9077": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "9079": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12704
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9080": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2381"
    },
    "9083": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12711
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9084": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12711
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9085": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "9088": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        12700,
        12711
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9089": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12711
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9090": {
      "branch": 177,
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12715
      ],
      "op": "GT",
      "path": "1"
    },
    "9091": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12740
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9092": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12740
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9093": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12740
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2398"
    },
    "9096": {
      "branch": 177,
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12740
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9097": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12740
      ],
      "op": "POP",
      "path": "1"
    },
    "9098": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12725,
        12726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9100": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12720,
        12722
      ],
      "op": "DUP6",
      "path": "1"
    },
    "9101": {
      "branch": 178,
      "fn": "TokenisableRange.deposit",
      "offset": [
        12720,
        12726
      ],
      "op": "GT",
      "path": "1"
    },
    "9102": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12720,
        12739
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9103": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12720,
        12739
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2398"
    },
    "9106": {
      "branch": 178,
      "fn": "TokenisableRange.deposit",
      "offset": [
        12720,
        12739
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9107": {
      "op": "POP"
    },
    "9108": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12730,
        12734
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "9110": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12730,
        12734
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9111": {
      "branch": 179,
      "fn": "TokenisableRange.deposit",
      "offset": [
        12730,
        12739
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9112": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12720,
        12739
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9113": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12765
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9114": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12765
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9115": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12765
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23AE"
    },
    "9118": {
      "branch": 179,
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12765
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9119": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12700,
        12765
      ],
      "op": "POP",
      "path": "1"
    },
    "9120": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12750,
        12751
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9122": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12745,
        12747
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9123": {
      "branch": 180,
      "fn": "TokenisableRange.deposit",
      "offset": [
        12745,
        12751
      ],
      "op": "GT",
      "path": "1"
    },
    "9124": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12745,
        12764
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9125": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12745,
        12764
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23AE"
    },
    "9128": {
      "branch": 180,
      "fn": "TokenisableRange.deposit",
      "offset": [
        12745,
        12764
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9129": {
      "op": "POP"
    },
    "9130": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12755,
        12759
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "9132": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12755,
        12759
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9133": {
      "branch": 181,
      "fn": "TokenisableRange.deposit",
      "offset": [
        12755,
        12764
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9134": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12745,
        12764
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9135": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12696,
        13667
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9136": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12696,
        13667
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D0"
    },
    "9139": {
      "branch": 181,
      "fn": "TokenisableRange.deposit",
      "offset": [
        12696,
        13667
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9140": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12840,
        12846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "9142": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12840,
        12852
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9143": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12879,
        12885
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "9145": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12879,
        12891
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9146": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12910,
        12917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "9148": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12910,
        12917
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9149": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12781,
        12793
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9151": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12781,
        12793
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9152": {
      "offset": [
        2128,
        2170
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x1F98431C8AD98523631AE4A59F267346EA31F984"
    },
    "9173": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        2128,
        2170
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9174": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12814
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1698EE82"
    },
    "9179": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12814
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9186": {
      "op": "SHL"
    },
    "9187": {
      "op": "SUB"
    },
    "9188": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12840,
        12852
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9189": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12840,
        12852
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9190": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12840,
        12852
      ],
      "op": "AND",
      "path": "1"
    },
    "9191": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12840,
        12852
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9192": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12879,
        12891
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9193": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12879,
        12891
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9194": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12879,
        12891
      ],
      "op": "AND",
      "path": "1"
    },
    "9195": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12879,
        12891
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9196": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12910,
        12923
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2402"
    },
    "9199": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12910,
        12923
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9202": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "9204": {
      "op": "SHL"
    },
    "9205": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12910,
        12917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9206": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12910,
        12917
      ],
      "op": "DIV",
      "path": "1"
    },
    "9207": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12910,
        12917
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFFFFFF"
    },
    "9211": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12910,
        12917
      ],
      "op": "AND",
      "path": "1"
    },
    "9212": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12920,
        12923
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "9214": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12910,
        12923
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F29"
    },
    "9217": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        12910,
        12923
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9218": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12910,
        12923
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9219": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9221": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9226": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9228": {
      "op": "SHL"
    },
    "9229": {
      "op": "SUB"
    },
    "9230": {
      "op": "NOT"
    },
    "9231": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "9233": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "DUP7",
      "path": "1"
    },
    "9234": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9235": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "SHL",
      "path": "1"
    },
    "9236": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "AND",
      "path": "1"
    },
    "9237": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9238": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9245": {
      "op": "SHL"
    },
    "9246": {
      "op": "SUB"
    },
    "9247": {
      "op": "SWAP4"
    },
    "9248": {
      "op": "DUP5"
    },
    "9249": {
      "op": "AND"
    },
    "9250": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9252": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9253": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "ADD",
      "path": "1"
    },
    "9254": {
      "op": "MSTORE"
    },
    "9255": {
      "op": "SWAP3"
    },
    "9256": {
      "op": "SWAP1"
    },
    "9257": {
      "op": "SWAP2"
    },
    "9258": {
      "op": "AND"
    },
    "9259": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9261": {
      "op": "DUP4"
    },
    "9262": {
      "op": "ADD"
    },
    "9263": {
      "op": "MSTORE"
    },
    "9264": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "9268": {
      "op": "AND"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9271": {
      "op": "DUP3"
    },
    "9272": {
      "op": "ADD"
    },
    "9273": {
      "op": "MSTORE"
    },
    "9274": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9276": {
      "op": "ADD"
    },
    "9277": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9279": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9281": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9282": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9283": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9284": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "SUB",
      "path": "1"
    },
    "9285": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9286": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "DUP7",
      "path": "1"
    },
    "9287": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "GAS",
      "path": "1"
    },
    "9288": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "9289": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9290": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9291": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9292": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2459"
    },
    "9295": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9296": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9297": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9299": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9300": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "9301": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9302": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9304": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9305": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9306": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "POP",
      "path": "1"
    },
    "9307": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "POP",
      "path": "1"
    },
    "9308": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "POP",
      "path": "1"
    },
    "9309": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "POP",
      "path": "1"
    },
    "9310": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9312": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9313": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9314": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9316": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "NOT",
      "path": "1"
    },
    "9317": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9319": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9320": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "ADD",
      "path": "1"
    },
    "9321": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "AND",
      "path": "1"
    },
    "9322": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9323": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "ADD",
      "path": "1"
    },
    "9324": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9325": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9327": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9328": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "POP",
      "path": "1"
    },
    "9329": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9330": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "ADD",
      "path": "1"
    },
    "9331": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9332": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x247D"
    },
    "9335": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9336": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9337": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4052"
    },
    "9340": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        12796,
        12937
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9341": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12796,
        12937
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9342": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12781,
        12937
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9343": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12781,
        12937
      ],
      "op": "POP",
      "path": "1"
    },
    "9344": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12952,
        12972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9346": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13003,
        13007
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9353": {
      "op": "SHL"
    },
    "9354": {
      "op": "SUB"
    },
    "9355": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13014
      ],
      "op": "AND",
      "path": "1"
    },
    "9356": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13014
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3850C7BD"
    },
    "9361": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9363": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9364": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9365": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "9370": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "AND",
      "path": "1"
    },
    "9371": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "9373": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "SHL",
      "path": "1"
    },
    "9374": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9375": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9376": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9378": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "ADD",
      "path": "1"
    },
    "9379": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "9381": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9383": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9384": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9385": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9386": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "SUB",
      "path": "1"
    },
    "9387": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9388": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "DUP7",
      "path": "1"
    },
    "9389": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "GAS",
      "path": "1"
    },
    "9390": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "9391": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9392": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9393": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9394": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24BF"
    },
    "9397": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9398": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9399": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9401": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9402": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "9403": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9404": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9406": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9407": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9408": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "POP",
      "path": "1"
    },
    "9409": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "POP",
      "path": "1"
    },
    "9410": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "POP",
      "path": "1"
    },
    "9411": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "POP",
      "path": "1"
    },
    "9412": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9414": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9415": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9416": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9418": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "NOT",
      "path": "1"
    },
    "9419": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9421": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9422": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "ADD",
      "path": "1"
    },
    "9423": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "AND",
      "path": "1"
    },
    "9424": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9425": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "ADD",
      "path": "1"
    },
    "9426": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9427": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9429": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9430": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "POP",
      "path": "1"
    },
    "9431": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9432": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "ADD",
      "path": "1"
    },
    "9433": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9434": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24E3"
    },
    "9437": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9438": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9439": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x40A4"
    },
    "9442": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        12988,
        13016
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9443": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12988,
        13016
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9444": {
      "op": "POP"
    },
    "9445": {
      "op": "POP"
    },
    "9446": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13217,
        13226
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "9448": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13217,
        13226
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9449": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9451": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9452": {
      "op": "PUSH4",
      "value": "0x986CFBA3"
    },
    "9457": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9459": {
      "op": "SHL"
    },
    "9460": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9461": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9462": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13217,
        13226
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "9464": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13217,
        13226
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9465": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13217,
        13226
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9466": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13217,
        13226
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9467": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13217,
        13226
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9468": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9470": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9471": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "ADD",
      "path": "1"
    },
    "9472": {
      "op": "MSTORE"
    },
    "9473": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12951,
        13016
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "9474": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12951,
        13016
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "9475": {
      "op": "POP"
    },
    "9476": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13031,
        13051
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9478": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13031,
        13051
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "9479": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13031,
        13051
      ],
      "op": "DUP6",
      "path": "1"
    },
    "9480": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13031,
        13051
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "9481": {
      "op": "POP"
    },
    "9482": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13077,
        13336
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2604"
    },
    "9485": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13077,
        13336
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "9486": {
      "op": "POP"
    },
    "9487": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12951,
        13016
      ],
      "op": "DUP7",
      "path": "1"
    },
    "9488": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12951,
        13016
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9489": {
      "op": "POP"
    },
    "9490": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13197
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x0"
    },
    "9511": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13197
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9512": {
      "op": "POP"
    },
    "9513": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13216
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x986CFBA3"
    },
    "9518": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13216
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9519": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9521": {
      "op": "ADD"
    },
    "9522": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9523": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9525": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9527": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9528": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9529": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9530": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "SUB",
      "path": "1"
    },
    "9531": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9532": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "DUP7",
      "path": "1"
    },
    "9533": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "GAS",
      "path": "1"
    },
    "9534": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "DELEGATECALL",
      "path": "1"
    },
    "9535": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9536": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9537": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9538": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x254F"
    },
    "9541": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9542": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9543": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9545": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9546": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "9547": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9548": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9550": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9551": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9552": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "POP",
      "path": "1"
    },
    "9553": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "POP",
      "path": "1"
    },
    "9554": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "POP",
      "path": "1"
    },
    "9555": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "POP",
      "path": "1"
    },
    "9556": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9558": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9559": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9560": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9562": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "NOT",
      "path": "1"
    },
    "9563": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9565": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9566": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "ADD",
      "path": "1"
    },
    "9567": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "AND",
      "path": "1"
    },
    "9568": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9569": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "ADD",
      "path": "1"
    },
    "9570": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9571": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9573": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9574": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "POP",
      "path": "1"
    },
    "9575": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9576": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "ADD",
      "path": "1"
    },
    "9577": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9578": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2573"
    },
    "9581": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9582": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9583": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4052"
    },
    "9586": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13189,
        13227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9587": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13189,
        13227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9588": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13277,
        13286
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "9590": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13277,
        13286
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9591": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9593": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9594": {
      "op": "PUSH4",
      "value": "0x986CFBA3"
    },
    "9599": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9601": {
      "op": "SHL"
    },
    "9602": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9603": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9604": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13277,
        13286
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1000000"
    },
    "9609": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13277,
        13286
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9610": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13277,
        13286
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9611": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13277,
        13286
      ],
      "op": "DIV",
      "path": "1"
    },
    "9612": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13277,
        13286
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "9614": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13277,
        13286
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9615": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9617": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9618": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "ADD",
      "path": "1"
    },
    "9619": {
      "op": "MSTORE"
    },
    "9620": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13257
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x0"
    },
    "9641": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13257
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9642": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13276
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x986CFBA3"
    },
    "9647": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13276
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9650": {
      "op": "ADD"
    },
    "9651": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9653": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9655": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9656": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9657": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9658": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "SUB",
      "path": "1"
    },
    "9659": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9660": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "DUP7",
      "path": "1"
    },
    "9661": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "GAS",
      "path": "1"
    },
    "9662": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "DELEGATECALL",
      "path": "1"
    },
    "9663": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9664": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9665": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9666": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25CF"
    },
    "9669": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9670": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9671": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9673": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9674": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "9675": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9676": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9678": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9679": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9680": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "POP",
      "path": "1"
    },
    "9681": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "POP",
      "path": "1"
    },
    "9682": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "POP",
      "path": "1"
    },
    "9683": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "POP",
      "path": "1"
    },
    "9684": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9686": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9687": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9688": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9690": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "NOT",
      "path": "1"
    },
    "9691": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9693": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9694": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "ADD",
      "path": "1"
    },
    "9695": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "AND",
      "path": "1"
    },
    "9696": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9697": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "ADD",
      "path": "1"
    },
    "9698": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9699": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9701": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9702": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "POP",
      "path": "1"
    },
    "9703": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9704": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "ADD",
      "path": "1"
    },
    "9705": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9706": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25F3"
    },
    "9709": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9710": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9711": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4052"
    },
    "9714": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13249,
        13287
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9715": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13249,
        13287
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9716": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13309,
        13318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x10"
    },
    "9718": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13309,
        13318
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9723": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9725": {
      "op": "SHL"
    },
    "9726": {
      "op": "SUB"
    },
    "9727": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13309,
        13318
      ],
      "op": "AND",
      "path": "1"
    },
    "9728": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13077,
        13133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3343"
    },
    "9731": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13077,
        13336
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9732": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13077,
        13336
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9733": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13030,
        13336
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9734": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13030,
        13336
      ],
      "op": "POP",
      "path": "1"
    },
    "9735": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13030,
        13336
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9736": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13030,
        13336
      ],
      "op": "POP",
      "path": "1"
    },
    "9737": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13376,
        13377
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9739": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13369,
        13373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "9741": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13369,
        13373
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9742": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13354,
        13366
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9743": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13354,
        13373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2618"
    },
    "9746": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13354,
        13373
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9747": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13354,
        13373
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9748": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13354,
        13373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "9751": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13354,
        13373
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9752": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13354,
        13373
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9753": {
      "branch": 182,
      "fn": "TokenisableRange.deposit",
      "offset": [
        13354,
        13377
      ],
      "op": "GT",
      "path": "1"
    },
    "9754": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13350,
        13440
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9755": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13350,
        13440
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2645"
    },
    "9758": {
      "branch": 182,
      "fn": "TokenisableRange.deposit",
      "offset": [
        13350,
        13440
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9759": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13435,
        13439
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 91,
      "value": "0x8"
    },
    "9761": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13435,
        13439
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9762": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13420,
        13439
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x262B"
    },
    "9765": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13420,
        13439
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9766": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13420,
        13432
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9767": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13420,
        13439
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "9770": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13420,
        13439
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9771": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13420,
        13439
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9772": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13411,
        13415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "9774": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13411,
        13415
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9775": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13406,
        13415
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2638"
    },
    "9778": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13406,
        13415
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9779": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13406,
        13408
      ],
      "op": "DUP12",
      "path": "1"
    },
    "9780": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13406,
        13415
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "9783": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13406,
        13415
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9784": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13406,
        13415
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9785": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13405,
        13440
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2642"
    },
    "9788": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13405,
        13440
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9789": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13405,
        13440
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9790": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13405,
        13440
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "9793": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13405,
        13440
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9794": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13405,
        13440
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9795": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13395,
        13440
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "9796": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13395,
        13440
      ],
      "op": "POP",
      "path": "1"
    },
    "9797": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13350,
        13440
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9798": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13480,
        13481
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9800": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13473,
        13477
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "9802": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13473,
        13477
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9803": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13458,
        13470
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9804": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13458,
        13477
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2655"
    },
    "9807": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13458,
        13477
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9808": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13458,
        13477
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9809": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13458,
        13477
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "9812": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13458,
        13477
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9813": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13458,
        13477
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9814": {
      "branch": 183,
      "fn": "TokenisableRange.deposit",
      "offset": [
        13458,
        13481
      ],
      "op": "GT",
      "path": "1"
    },
    "9815": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13454,
        13544
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9816": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13454,
        13544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2682"
    },
    "9819": {
      "branch": 183,
      "fn": "TokenisableRange.deposit",
      "offset": [
        13454,
        13544
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9820": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13539,
        13543
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 92,
      "value": "0x9"
    },
    "9822": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13539,
        13543
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9823": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13524,
        13543
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2668"
    },
    "9826": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13524,
        13543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9827": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13524,
        13536
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9828": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13524,
        13543
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "9831": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13524,
        13543
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9832": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13524,
        13543
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9833": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13515,
        13519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "9835": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13515,
        13519
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9836": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13510,
        13519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2675"
    },
    "9839": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13510,
        13519
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9840": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13510,
        13512
      ],
      "op": "DUP11",
      "path": "1"
    },
    "9841": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13510,
        13519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "9844": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13510,
        13519
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9845": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13510,
        13519
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9846": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13509,
        13544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x267F"
    },
    "9849": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13509,
        13544
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9850": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13509,
        13544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9851": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13509,
        13544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "9854": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13509,
        13544
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9855": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13509,
        13544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9856": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13499,
        13544
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "9857": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13499,
        13544
      ],
      "op": "POP",
      "path": "1"
    },
    "9858": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13454,
        13544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9859": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13566,
        13573
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 93
    },
    "9860": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "9862": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9864": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9865": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9866": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9867": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2694"
    },
    "9870": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9871": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9872": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "9875": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13558,
        13573
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9876": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9877": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9878": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "POP",
      "path": "1"
    },
    "9879": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "POP",
      "path": "1"
    },
    "9880": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9881": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9882": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9883": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13558,
        13573
      ],
      "op": "POP",
      "path": "1"
    },
    "9884": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13595,
        13602
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 94
    },
    "9885": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13587,
        13591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "9887": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13587,
        13591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9889": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13587,
        13602
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9890": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13587,
        13602
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9891": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13587,
        13602
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9892": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13587,
        13602
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26AD"
    },
    "9895": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13587,
        13602
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9896": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13587,
        13602
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9897": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13587,
        13602
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "9900": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13587,
        13602
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9901": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13587,
        13602
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9902": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13587,
        13602
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9903": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13587,
        13602
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9904": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13587,
        13602
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9905": {
      "op": "POP"
    },
    "9906": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13616,
        13629
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 95,
      "value": "0x26BD"
    },
    "9909": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13616,
        13629
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9910": {
      "op": "POP"
    },
    "9911": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13622,
        13629
      ],
      "op": "DUP7",
      "path": "1"
    },
    "9912": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13616,
        13629
      ],
      "op": "DUP11",
      "path": "1"
    },
    "9913": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13616,
        13629
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E74"
    },
    "9916": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13616,
        13629
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9917": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13616,
        13629
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9918": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13616,
        13629
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "9919": {
      "op": "POP"
    },
    "9920": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13643,
        13656
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 96,
      "value": "0x26C9"
    },
    "9923": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13649,
        13656
      ],
      "op": "DUP6",
      "path": "1"
    },
    "9924": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13643,
        13656
      ],
      "op": "DUP10",
      "path": "1"
    },
    "9925": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13643,
        13656
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E74"
    },
    "9928": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13643,
        13656
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9929": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13643,
        13656
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9930": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13643,
        13656
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "9931": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13643,
        13656
      ],
      "op": "POP",
      "path": "1"
    },
    "9932": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12767,
        13667
      ],
      "op": "POP",
      "path": "1"
    },
    "9933": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12767,
        13667
      ],
      "op": "POP",
      "path": "1"
    },
    "9934": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12767,
        13667
      ],
      "op": "POP",
      "path": "1"
    },
    "9935": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12767,
        13667
      ],
      "op": "POP",
      "path": "1"
    },
    "9936": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        12696,
        13667
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9937": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13677,
        13683
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 97,
      "value": "0xA"
    },
    "9939": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13677,
        13689
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9940": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13677,
        13733
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26F5"
    },
    "9943": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13677,
        13733
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9950": {
      "op": "SHL"
    },
    "9951": {
      "op": "SUB"
    },
    "9952": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13677,
        13689
      ],
      "op": "AND",
      "path": "1"
    },
    "9953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9955": {
      "op": "DUP1"
    },
    "9956": {
      "op": "MLOAD"
    },
    "9957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9959": {
      "op": "PUSH2",
      "value": "0x4545"
    },
    "9962": {
      "op": "DUP4"
    },
    "9963": {
      "op": "CODECOPY"
    },
    "9964": {
      "op": "DUP2"
    },
    "9965": {
      "op": "MLOAD"
    },
    "9966": {
      "op": "SWAP2"
    },
    "9967": {
      "op": "MSTORE"
    },
    "9968": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13730,
        13732
      ],
      "op": "DUP8",
      "path": "1"
    },
    "9969": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13677,
        13711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302C"
    },
    "9972": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13677,
        13733
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9973": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13677,
        13733
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9974": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13743,
        13749
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 98,
      "value": "0xB"
    },
    "9976": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13743,
        13755
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9977": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13743,
        13799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x271A"
    },
    "9980": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13743,
        13799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9987": {
      "op": "SHL"
    },
    "9988": {
      "op": "SUB"
    },
    "9989": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13743,
        13755
      ],
      "op": "AND",
      "path": "1"
    },
    "9990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9992": {
      "op": "DUP1"
    },
    "9993": {
      "op": "MLOAD"
    },
    "9994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9996": {
      "op": "PUSH2",
      "value": "0x4545"
    },
    "9999": {
      "op": "DUP4"
    },
    "10000": {
      "op": "CODECOPY"
    },
    "10001": {
      "op": "DUP2"
    },
    "10002": {
      "op": "MLOAD"
    },
    "10003": {
      "op": "SWAP2"
    },
    "10004": {
      "op": "MSTORE"
    },
    "10005": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13796,
        13798
      ],
      "op": "DUP7",
      "path": "1"
    },
    "10006": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13743,
        13777
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302C"
    },
    "10009": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13743,
        13799
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10010": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13743,
        13799
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10011": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13929,
        13949
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10013": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13951,
        13965
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10014": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13967,
        13981
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10018": {
      "op": "DUP1"
    },
    "10019": {
      "op": "MLOAD"
    },
    "10020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10022": {
      "op": "PUSH2",
      "value": "0x4545"
    },
    "10025": {
      "op": "DUP4"
    },
    "10026": {
      "op": "CODECOPY"
    },
    "10027": {
      "op": "DUP2"
    },
    "10028": {
      "op": "MLOAD"
    },
    "10029": {
      "op": "SWAP2"
    },
    "10030": {
      "op": "MSTORE"
    },
    "10031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10037": {
      "op": "SHL"
    },
    "10038": {
      "op": "SUB"
    },
    "10039": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14023
      ],
      "op": "AND",
      "path": "1"
    },
    "10040": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14023
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x219F5D17"
    },
    "10045": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10047": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10048": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10049": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "10051": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "ADD",
      "path": "1"
    },
    "10052": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10054": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10055": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10056": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14124,
        14131
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "10058": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14124,
        14131
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10059": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10060": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10061": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10063": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "ADD",
      "path": "1"
    },
    "10064": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14169,
        14171
      ],
      "op": "DUP12",
      "path": "1"
    },
    "10065": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10066": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10067": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10069": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "ADD",
      "path": "1"
    },
    "10070": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14209,
        14211
      ],
      "op": "DUP11",
      "path": "1"
    },
    "10071": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10072": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10073": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10075": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "ADD",
      "path": "1"
    },
    "10076": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14257,
        14260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "10078": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14246,
        14248
      ],
      "op": "DUP13",
      "path": "1"
    },
    "10079": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14251,
        14253
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5F"
    },
    "10081": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14246,
        14253
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x276A"
    },
    "10084": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14246,
        14253
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10085": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14246,
        14253
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10086": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14246,
        14253
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "10089": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        14246,
        14253
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10090": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14246,
        14253
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10091": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14245,
        14260
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2774"
    },
    "10094": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14245,
        14260
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10095": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14245,
        14260
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10096": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14245,
        14260
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "10099": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        14245,
        14260
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10100": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14245,
        14260
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10101": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10102": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10103": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10105": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "ADD",
      "path": "1"
    },
    "10106": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14306,
        14309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "10108": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14295,
        14302
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2786"
    },
    "10111": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14295,
        14297
      ],
      "op": "DUP13",
      "path": "1"
    },
    "10112": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14300,
        14302
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5F"
    },
    "10114": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14295,
        14302
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "10117": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        14295,
        14302
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10118": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14295,
        14302
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10119": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14294,
        14309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2790"
    },
    "10122": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14294,
        14309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10123": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14294,
        14309
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10124": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14294,
        14309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "10127": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        14294,
        14309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10128": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14294,
        14309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10129": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10130": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10131": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10133": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "ADD",
      "path": "1"
    },
    "10134": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14341,
        14356
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "10135": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10136": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10137": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14041,
        14375
      ],
      "op": "POP",
      "path": "1"
    },
    "10138": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10140": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10141": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10142": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "10147": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "AND",
      "path": "1"
    },
    "10148": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "10150": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "SHL",
      "path": "1"
    },
    "10151": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10152": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10153": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10155": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "ADD",
      "path": "1"
    },
    "10156": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27B5"
    },
    "10159": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10160": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10161": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E87"
    },
    "10164": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13985,
        14389
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10165": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10166": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "10168": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10170": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10171": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10172": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10173": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "SUB",
      "path": "1"
    },
    "10174": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10175": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10177": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "DUP8",
      "path": "1"
    },
    "10178": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "GAS",
      "path": "1"
    },
    "10179": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "CALL",
      "path": "1"
    },
    "10180": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10181": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10182": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10183": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27D4"
    },
    "10186": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10187": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10188": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10190": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10191": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "10192": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10193": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10195": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "REVERT",
      "path": "1"
    },
    "10196": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10197": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "POP",
      "path": "1"
    },
    "10198": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "POP",
      "path": "1"
    },
    "10199": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "POP",
      "path": "1"
    },
    "10200": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "POP",
      "path": "1"
    },
    "10201": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10203": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10204": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10205": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "10207": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "NOT",
      "path": "1"
    },
    "10208": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "10210": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10211": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "ADD",
      "path": "1"
    },
    "10212": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "AND",
      "path": "1"
    },
    "10213": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10214": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "ADD",
      "path": "1"
    },
    "10215": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10216": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10218": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10219": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "POP",
      "path": "1"
    },
    "10220": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10221": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "ADD",
      "path": "1"
    },
    "10222": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10223": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27F8"
    },
    "10226": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10227": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10228": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ECB"
    },
    "10231": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        13985,
        14389
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10232": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13985,
        14389
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10233": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13928,
        14389
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10234": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13928,
        14389
      ],
      "op": "POP",
      "path": "1"
    },
    "10235": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13928,
        14389
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10236": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13928,
        14389
      ],
      "op": "POP",
      "path": "1"
    },
    "10237": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13928,
        14389
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10238": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        13928,
        14389
      ],
      "op": "POP",
      "path": "1"
    },
    "10239": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14400,
        14420
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10241": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14626,
        14633
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10242": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14637,
        14638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10244": {
      "branch": 184,
      "fn": "TokenisableRange.deposit",
      "offset": [
        14626,
        14638
      ],
      "op": "EQ",
      "path": "1"
    },
    "10245": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14626,
        14654
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10246": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14626,
        14654
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10247": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14626,
        14654
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x280E"
    },
    "10250": {
      "branch": 184,
      "fn": "TokenisableRange.deposit",
      "offset": [
        14626,
        14654
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10251": {
      "op": "POP"
    },
    "10252": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14642,
        14654
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10253": {
      "branch": 185,
      "fn": "TokenisableRange.deposit",
      "offset": [
        14642,
        14654
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10254": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14626,
        14654
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10255": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14622,
        15530
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10256": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14622,
        15530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A43"
    },
    "10259": {
      "branch": 185,
      "fn": "TokenisableRange.deposit",
      "offset": [
        14622,
        15530
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10260": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14699
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC"
    },
    "10262": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14699
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10263": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14722,
        14728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "10265": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14722,
        14734
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10266": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10268": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10269": {
      "op": "PUSH4",
      "value": "0xB3596F07"
    },
    "10274": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10276": {
      "op": "SHL"
    },
    "10277": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10278": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10285": {
      "op": "SHL"
    },
    "10286": {
      "op": "SUB"
    },
    "10287": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14722,
        14734
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10288": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14722,
        14734
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10289": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14722,
        14734
      ],
      "op": "AND",
      "path": "1"
    },
    "10290": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10292": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10293": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "ADD",
      "path": "1"
    },
    "10294": {
      "op": "MSTORE"
    },
    "10295": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14670,
        14690
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10297": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14670,
        14690
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10298": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14699
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10299": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14699
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10300": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14699
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10301": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14699
      ],
      "op": "AND",
      "path": "1"
    },
    "10302": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14699
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10303": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14713
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB3596F07"
    },
    "10308": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14713
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10309": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10311": {
      "op": "ADD"
    },
    "10312": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10314": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10316": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10317": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10318": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10319": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "SUB",
      "path": "1"
    },
    "10320": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10321": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "DUP7",
      "path": "1"
    },
    "10322": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "GAS",
      "path": "1"
    },
    "10323": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "10324": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10325": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10326": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10327": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2864"
    },
    "10330": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10331": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10332": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10334": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10335": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "10336": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10337": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10339": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "REVERT",
      "path": "1"
    },
    "10340": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10341": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "POP",
      "path": "1"
    },
    "10342": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "POP",
      "path": "1"
    },
    "10343": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "POP",
      "path": "1"
    },
    "10344": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "POP",
      "path": "1"
    },
    "10345": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10347": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10348": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10349": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "10351": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "NOT",
      "path": "1"
    },
    "10352": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "10354": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10355": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "ADD",
      "path": "1"
    },
    "10356": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "AND",
      "path": "1"
    },
    "10357": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10358": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "ADD",
      "path": "1"
    },
    "10359": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10360": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10362": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10363": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "POP",
      "path": "1"
    },
    "10364": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10365": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "ADD",
      "path": "1"
    },
    "10366": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10367": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2888"
    },
    "10370": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10371": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10372": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DF4"
    },
    "10375": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        14693,
        14736
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10376": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14693,
        14736
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10377": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC"
    },
    "10379": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14779
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10380": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14802,
        14808
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "10382": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14802,
        14814
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10383": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10385": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10386": {
      "op": "PUSH4",
      "value": "0xB3596F07"
    },
    "10391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10393": {
      "op": "SHL"
    },
    "10394": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10395": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10402": {
      "op": "SHL"
    },
    "10403": {
      "op": "SUB"
    },
    "10404": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14802,
        14814
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10405": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14802,
        14814
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10406": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14802,
        14814
      ],
      "op": "AND",
      "path": "1"
    },
    "10407": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10409": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10410": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "ADD",
      "path": "1"
    },
    "10411": {
      "op": "MSTORE"
    },
    "10412": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14670,
        14736
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10413": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14670,
        14736
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "10414": {
      "op": "POP"
    },
    "10415": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14750,
        14770
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10417": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14750,
        14770
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10418": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14779
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10419": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14779
      ],
      "op": "AND",
      "path": "1"
    },
    "10420": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14779
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10421": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14793
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB3596F07"
    },
    "10426": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14793
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10427": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10429": {
      "op": "ADD"
    },
    "10430": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10432": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10434": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10435": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10436": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10437": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "SUB",
      "path": "1"
    },
    "10438": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10439": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "DUP7",
      "path": "1"
    },
    "10440": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "GAS",
      "path": "1"
    },
    "10441": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "10442": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10443": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10444": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10445": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28DA"
    },
    "10448": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10449": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10450": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10452": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10453": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "10454": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10455": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10457": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "REVERT",
      "path": "1"
    },
    "10458": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10459": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "POP",
      "path": "1"
    },
    "10460": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "POP",
      "path": "1"
    },
    "10461": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "POP",
      "path": "1"
    },
    "10462": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "POP",
      "path": "1"
    },
    "10463": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10465": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10466": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10467": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "10469": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "NOT",
      "path": "1"
    },
    "10470": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "10472": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10473": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "ADD",
      "path": "1"
    },
    "10474": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "AND",
      "path": "1"
    },
    "10475": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10476": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "ADD",
      "path": "1"
    },
    "10477": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10478": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10480": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10481": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "POP",
      "path": "1"
    },
    "10482": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10483": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "ADD",
      "path": "1"
    },
    "10484": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10485": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28FE"
    },
    "10488": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10489": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10490": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DF4"
    },
    "10493": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        14773,
        14816
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10494": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14773,
        14816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10495": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14750,
        14816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10496": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14750,
        14816
      ],
      "op": "POP",
      "path": "1"
    },
    "10497": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14870,
        14871
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 99,
      "value": "0x0"
    },
    "10499": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14855,
        14867
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10500": {
      "branch": 186,
      "fn": "TokenisableRange.deposit",
      "offset": [
        14855,
        14871
      ],
      "op": "GT",
      "path": "1"
    },
    "10501": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14855,
        14891
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10502": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14855,
        14891
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10503": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14855,
        14891
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2910"
    },
    "10506": {
      "branch": 186,
      "fn": "TokenisableRange.deposit",
      "offset": [
        14855,
        14891
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10507": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14855,
        14891
      ],
      "op": "POP",
      "path": "1"
    },
    "10508": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14890,
        14891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10510": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14875,
        14887
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10511": {
      "branch": 187,
      "fn": "TokenisableRange.deposit",
      "offset": [
        14875,
        14891
      ],
      "op": "GT",
      "path": "1"
    },
    "10512": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14855,
        14891
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10513": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14830,
        14945
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2953"
    },
    "10516": {
      "branch": 187,
      "fn": "TokenisableRange.deposit",
      "offset": [
        14830,
        14945
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10517": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14830,
        14945
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10519": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14830,
        14945
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10520": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10524": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10526": {
      "op": "SHL"
    },
    "10527": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14830,
        14945
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10528": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14830,
        14945
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10531": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14830,
        14945
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10533": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14830,
        14945
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10534": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14830,
        14945
      ],
      "op": "ADD",
      "path": "1"
    },
    "10535": {
      "op": "MSTORE"
    },
    "10536": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "10538": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10540": {
      "op": "DUP3"
    },
    "10541": {
      "op": "ADD"
    },
    "10542": {
      "op": "MSTORE"
    },
    "10543": {
      "op": "PUSH20",
      "value": "0x496E76616C6964204F7261636C65205072696365"
    },
    "10564": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10566": {
      "op": "SHL"
    },
    "10567": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10569": {
      "op": "DUP3"
    },
    "10570": {
      "op": "ADD"
    },
    "10571": {
      "op": "MSTORE"
    },
    "10572": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10574": {
      "op": "ADD"
    },
    "10575": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14830,
        14945
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F3"
    },
    "10578": {
      "op": "JUMP"
    },
    "10579": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14830,
        14945
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10580": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15502,
        15508
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 100,
      "value": "0xB"
    },
    "10582": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15502,
        15517
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10583": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15496,
        15517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x296B"
    },
    "10586": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15496,
        15517
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10591": {
      "op": "SHL"
    },
    "10592": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15502,
        15517
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10593": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15502,
        15517
      ],
      "op": "DIV",
      "path": "1"
    },
    "10594": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15502,
        15517
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10596": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15502,
        15517
      ],
      "op": "AND",
      "path": "1"
    },
    "10597": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15496,
        15498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "10599": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15496,
        15517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "10602": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15496,
        15517
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10603": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15496,
        15517
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10604": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15471,
        15492
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2975"
    },
    "10607": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15480,
        15492
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10608": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15471,
        15477
      ],
      "op": "DUP7",
      "path": "1"
    },
    "10609": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15471,
        15492
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "10612": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15471,
        15492
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10613": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15471,
        15492
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10614": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15470,
        15517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x297F"
    },
    "10617": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15470,
        15517
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10618": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15470,
        15517
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10619": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15470,
        15517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "10622": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15470,
        15517
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10623": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15470,
        15517
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10624": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15430,
        15436
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "10626": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15430,
        15445
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10627": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15430,
        15445
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10628": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15424,
        15445
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2998"
    },
    "10631": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15424,
        15445
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10636": {
      "op": "SHL"
    },
    "10637": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15430,
        15445
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10638": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15430,
        15445
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10639": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15430,
        15445
      ],
      "op": "DIV",
      "path": "1"
    },
    "10640": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15430,
        15445
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10642": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15430,
        15445
      ],
      "op": "AND",
      "path": "1"
    },
    "10643": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15430,
        15445
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10644": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15424,
        15445
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "10647": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15424,
        15445
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10648": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15424,
        15445
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10649": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15399,
        15420
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29A2"
    },
    "10652": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15408,
        15420
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10653": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15399,
        15405
      ],
      "op": "DUP9",
      "path": "1"
    },
    "10654": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15399,
        15420
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "10657": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15399,
        15420
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10658": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15399,
        15420
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10659": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15398,
        15445
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29AC"
    },
    "10662": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15398,
        15445
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10663": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15398,
        15445
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10664": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15398,
        15445
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "10667": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15398,
        15445
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10668": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15398,
        15445
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10669": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15397,
        15518
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29B6"
    },
    "10672": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15397,
        15518
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10673": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15397,
        15518
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10674": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15397,
        15518
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "10677": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15397,
        15518
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10678": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15397,
        15518
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10679": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15359,
        15365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "10681": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15359,
        15374
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10682": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15353,
        15374
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29CE"
    },
    "10685": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15353,
        15374
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10690": {
      "op": "SHL"
    },
    "10691": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15359,
        15374
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10692": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15359,
        15374
      ],
      "op": "DIV",
      "path": "1"
    },
    "10693": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15359,
        15374
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10695": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15359,
        15374
      ],
      "op": "AND",
      "path": "1"
    },
    "10696": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15353,
        15355
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "10698": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15353,
        15374
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "10701": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15353,
        15374
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10702": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15353,
        15374
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10703": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15337,
        15349
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10704": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15330,
        15334
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "10706": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15330,
        15334
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10707": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15330,
        15349
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29DC"
    },
    "10710": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15330,
        15349
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10711": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15330,
        15349
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10712": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15330,
        15349
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "10715": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15330,
        15349
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10716": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15330,
        15349
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10717": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15329,
        15374
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29E6"
    },
    "10720": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15329,
        15374
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10721": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15329,
        15374
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10722": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15329,
        15374
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "10725": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15329,
        15374
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10726": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15329,
        15374
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10727": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15285,
        15291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "10729": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15285,
        15300
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10730": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15285,
        15300
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10731": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15279,
        15300
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29FF"
    },
    "10734": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15279,
        15300
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10739": {
      "op": "SHL"
    },
    "10740": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15285,
        15300
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10741": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15285,
        15300
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10742": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15285,
        15300
      ],
      "op": "DIV",
      "path": "1"
    },
    "10743": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15285,
        15300
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10745": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15285,
        15300
      ],
      "op": "AND",
      "path": "1"
    },
    "10746": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15285,
        15300
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10747": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15279,
        15300
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "10750": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15279,
        15300
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10751": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15279,
        15300
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10752": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15263,
        15275
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10753": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15256,
        15260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "10755": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15256,
        15260
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10756": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15256,
        15275
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A0D"
    },
    "10759": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15256,
        15275
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10760": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15256,
        15275
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10761": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15256,
        15275
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "10764": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15256,
        15275
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10765": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15256,
        15275
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10766": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15255,
        15300
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A17"
    },
    "10769": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15255,
        15300
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10770": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15255,
        15300
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10771": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15255,
        15300
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "10774": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15255,
        15300
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10775": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15255,
        15300
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10776": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15254,
        15375
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A21"
    },
    "10779": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15254,
        15375
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10780": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15254,
        15375
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10781": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15254,
        15375
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "10784": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15254,
        15375
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10785": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15254,
        15375
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10786": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15218,
        15376
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A34"
    },
    "10789": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15218,
        15376
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10794": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10796": {
      "op": "SHL"
    },
    "10797": {
      "op": "SUB"
    },
    "10798": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15218,
        15376
      ],
      "op": "DUP10",
      "path": "1"
    },
    "10799": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15218,
        15376
      ],
      "op": "AND",
      "path": "1"
    },
    "10800": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15218,
        15376
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "10803": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15218,
        15376
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10804": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15218,
        15376
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10805": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15217,
        15519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A3E"
    },
    "10808": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15217,
        15519
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10809": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15217,
        15519
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10810": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15217,
        15519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "10813": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15217,
        15519
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10814": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15217,
        15519
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10815": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15186,
        15519
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10816": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15186,
        15519
      ],
      "op": "POP",
      "path": "1"
    },
    "10817": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14656,
        15530
      ],
      "op": "POP",
      "path": "1"
    },
    "10818": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14656,
        15530
      ],
      "op": "POP",
      "path": "1"
    },
    "10819": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        14622,
        15530
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10820": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15582,
        15591
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 101,
      "value": "0x10"
    },
    "10822": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15582,
        15591
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10823": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15582,
        15606
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A5A"
    },
    "10826": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15582,
        15606
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10827": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15594,
        15606
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10828": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15594,
        15606
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10833": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10835": {
      "op": "SHL"
    },
    "10836": {
      "op": "SUB"
    },
    "10837": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15582,
        15591
      ],
      "op": "AND",
      "path": "1"
    },
    "10838": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15582,
        15606
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "10841": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15582,
        15606
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10842": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15582,
        15606
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10843": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15565,
        15577
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10848": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10850": {
      "op": "SHL"
    },
    "10851": {
      "op": "SUB"
    },
    "10852": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15549,
        15577
      ],
      "op": "AND",
      "path": "1"
    },
    "10853": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15549,
        15562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A6D"
    },
    "10856": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "10858": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "10859": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "10860": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "43"
    },
    "10861": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15549,
        15562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10862": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15549,
        15577
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A77"
    },
    "10865": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15549,
        15577
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10866": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15549,
        15577
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10867": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15549,
        15577
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "10870": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15549,
        15577
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10871": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15549,
        15577
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10872": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15548,
        15607
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A81"
    },
    "10875": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15548,
        15607
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10876": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15548,
        15607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10877": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15548,
        15607
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "10880": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15548,
        15607
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10881": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15548,
        15607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10882": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15629,
        15638
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 102,
      "value": "0x10"
    },
    "10884": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15629,
        15638
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10885": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15540,
        15607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10886": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15540,
        15607
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "10887": {
      "op": "POP"
    },
    "10888": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15629,
        15653
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A9B"
    },
    "10891": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15629,
        15653
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10892": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15641,
        15653
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10893": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15641,
        15653
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10898": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10900": {
      "op": "SHL"
    },
    "10901": {
      "op": "SUB"
    },
    "10902": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15629,
        15638
      ],
      "op": "AND",
      "path": "1"
    },
    "10903": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15629,
        15653
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F02"
    },
    "10906": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15629,
        15653
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10907": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15629,
        15653
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10908": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15617,
        15626
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x10"
    },
    "10910": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15617,
        15653
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10911": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15617,
        15653
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10916": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10918": {
      "op": "SHL"
    },
    "10919": {
      "op": "SUB"
    },
    "10920": {
      "op": "NOT"
    },
    "10921": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15617,
        15653
      ],
      "op": "AND",
      "path": "1"
    },
    "10922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10926": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10928": {
      "op": "SHL"
    },
    "10929": {
      "op": "SUB"
    },
    "10930": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15617,
        15653
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10931": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15617,
        15653
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10932": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15617,
        15653
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10933": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15617,
        15653
      ],
      "op": "AND",
      "path": "1"
    },
    "10934": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15617,
        15653
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10935": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15617,
        15653
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10936": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15617,
        15653
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10937": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15617,
        15653
      ],
      "op": "OR",
      "path": "1"
    },
    "10938": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15617,
        15653
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10939": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15617,
        15653
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10940": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15664,
        15688
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 103,
      "value": "0x2AC5"
    },
    "10943": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15670,
        15680
      ],
      "op": "CALLER",
      "path": "1"
    },
    "10944": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15682,
        15687
      ],
      "op": "DUP9",
      "path": "1"
    },
    "10945": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15664,
        15669
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3264"
    },
    "10948": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15664,
        15688
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10949": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15664,
        15688
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10950": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15698,
        15748
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 104,
      "value": "0x2AD3"
    },
    "10953": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15724,
        15734
      ],
      "op": "CALLER",
      "path": "1"
    },
    "10954": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15736,
        15747
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11F5"
    },
    "10957": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15741,
        15747
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10958": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15736,
        15738
      ],
      "op": "DUP13",
      "path": "1"
    },
    "10959": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15736,
        15747
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E74"
    },
    "10962": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15736,
        15747
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10963": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15698,
        15748
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10964": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15758,
        15808
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 105,
      "value": "0x2AE1"
    },
    "10967": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15784,
        15794
      ],
      "op": "CALLER",
      "path": "1"
    },
    "10968": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15796,
        15807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1294"
    },
    "10971": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15801,
        15807
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10972": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15796,
        15798
      ],
      "op": "DUP12",
      "path": "1"
    },
    "10973": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15796,
        15807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E74"
    },
    "10976": {
      "fn": "TokenisableRange.deposit",
      "jump": "i",
      "offset": [
        15796,
        15807
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10977": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15758,
        15808
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10978": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15823,
        15849
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 106,
      "value": "0x40"
    },
    "10980": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15823,
        15849
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10981": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15823,
        15849
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10982": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15831,
        15841
      ],
      "op": "CALLER",
      "path": "1"
    },
    "10983": {
      "op": "DUP2"
    },
    "10984": {
      "op": "MSTORE"
    },
    "10985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10987": {
      "op": "DUP2"
    },
    "10988": {
      "op": "ADD"
    },
    "10989": {
      "op": "DUP10"
    },
    "10990": {
      "op": "SWAP1"
    },
    "10991": {
      "op": "MSTORE"
    },
    "10992": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15823,
        15849
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
    },
    "11025": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15823,
        15849
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11026": {
      "op": "ADD"
    },
    "11027": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15823,
        15849
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11029": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15823,
        15849
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11030": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15823,
        15849
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11031": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15823,
        15849
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11032": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15823,
        15849
      ],
      "op": "SUB",
      "path": "1"
    },
    "11033": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15823,
        15849
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11034": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        15823,
        15849
      ],
      "op": "LOG1",
      "path": "1"
    },
    "11035": {
      "op": "POP"
    },
    "11036": {
      "op": "POP"
    },
    "11037": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "11039": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x5"
    },
    "11041": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "11042": {
      "op": "POP"
    },
    "11043": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11670,
        15856
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11044": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11670,
        15856
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "11045": {
      "fn": "TokenisableRange.deposit",
      "offset": [
        11670,
        15856
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "11046": {
      "op": "POP"
    },
    "11047": {
      "op": "POP"
    },
    "11048": {
      "op": "POP"
    },
    "11049": {
      "op": "POP"
    },
    "11050": {
      "op": "POP"
    },
    "11051": {
      "fn": "TokenisableRange.deposit",
      "jump": "o",
      "offset": [
        11670,
        15856
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11052": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "11053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11059": {
      "op": "SHL"
    },
    "11060": {
      "op": "SUB"
    },
    "11061": {
      "fn": "ERC20._approve",
      "offset": [
        10150,
        10169
      ],
      "op": "DUP4",
      "path": "43",
      "statement": 107
    },
    "11062": {
      "branch": 195,
      "fn": "ERC20._approve",
      "offset": [
        10150,
        10169
      ],
      "op": "AND",
      "path": "43"
    },
    "11063": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2B8E"
    },
    "11066": {
      "branch": 195,
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "11067": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "11069": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "11070": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11074": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11076": {
      "op": "SHL"
    },
    "11077": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11078": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "11079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11081": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "11083": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "DUP3",
      "path": "43"
    },
    "11084": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "ADD",
      "path": "43"
    },
    "11085": {
      "op": "MSTORE"
    },
    "11086": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11088": {
      "op": "DUP1"
    },
    "11089": {
      "op": "DUP3"
    },
    "11090": {
      "op": "ADD"
    },
    "11091": {
      "op": "MSTORE"
    },
    "11092": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "11125": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11127": {
      "op": "DUP3"
    },
    "11128": {
      "op": "ADD"
    },
    "11129": {
      "op": "MSTORE"
    },
    "11130": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "11135": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11137": {
      "op": "SHL"
    },
    "11138": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11140": {
      "op": "DUP3"
    },
    "11141": {
      "op": "ADD"
    },
    "11142": {
      "op": "MSTORE"
    },
    "11143": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11145": {
      "op": "ADD"
    },
    "11146": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6F3"
    },
    "11149": {
      "op": "JUMP"
    },
    "11150": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "11151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11157": {
      "op": "SHL"
    },
    "11158": {
      "op": "SUB"
    },
    "11159": {
      "fn": "ERC20._approve",
      "offset": [
        10228,
        10249
      ],
      "op": "DUP3",
      "path": "43",
      "statement": 108
    },
    "11160": {
      "branch": 196,
      "fn": "ERC20._approve",
      "offset": [
        10228,
        10249
      ],
      "op": "AND",
      "path": "43"
    },
    "11161": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2BEF"
    },
    "11164": {
      "branch": 196,
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "11165": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "11167": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "11168": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11172": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11174": {
      "op": "SHL"
    },
    "11175": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11176": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "11177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11179": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "11181": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "DUP3",
      "path": "43"
    },
    "11182": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "ADD",
      "path": "43"
    },
    "11183": {
      "op": "MSTORE"
    },
    "11184": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11186": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11188": {
      "op": "DUP3"
    },
    "11189": {
      "op": "ADD"
    },
    "11190": {
      "op": "MSTORE"
    },
    "11191": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "11224": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11226": {
      "op": "DUP3"
    },
    "11227": {
      "op": "ADD"
    },
    "11228": {
      "op": "MSTORE"
    },
    "11229": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "11232": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "11234": {
      "op": "SHL"
    },
    "11235": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11237": {
      "op": "DUP3"
    },
    "11238": {
      "op": "ADD"
    },
    "11239": {
      "op": "MSTORE"
    },
    "11240": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11242": {
      "op": "ADD"
    },
    "11243": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6F3"
    },
    "11246": {
      "op": "JUMP"
    },
    "11247": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "11248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11254": {
      "op": "SHL"
    },
    "11255": {
      "op": "SUB"
    },
    "11256": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP4",
      "path": "43",
      "statement": 109
    },
    "11257": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11258": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "AND",
      "path": "43"
    },
    "11259": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "11261": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11262": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11263": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "11264": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10310
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1"
    },
    "11266": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "11268": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11269": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11270": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "11271": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "11273": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP1",
      "path": "43"
    },
    "11274": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP4",
      "path": "43"
    },
    "11275": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "11276": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP5",
      "path": "43"
    },
    "11277": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP8",
      "path": "43"
    },
    "11278": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "AND",
      "path": "43"
    },
    "11279": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP1",
      "path": "43"
    },
    "11280": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP5",
      "path": "43"
    },
    "11281": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "11282": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP5",
      "path": "43"
    },
    "11283": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP3",
      "path": "43"
    },
    "11284": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "11285": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "11286": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP3",
      "path": "43"
    },
    "11287": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11288": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "11289": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10335
      ],
      "op": "DUP6",
      "path": "43"
    },
    "11290": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10335
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11291": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10335
      ],
      "op": "SSTORE",
      "path": "43"
    },
    "11292": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP1",
      "path": "43",
      "statement": 110
    },
    "11293": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "11294": {
      "op": "DUP5"
    },
    "11295": {
      "op": "DUP2"
    },
    "11296": {
      "op": "MSTORE"
    },
    "11297": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "PUSH32",
      "path": "43",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "11330": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "11331": {
      "op": "ADD"
    },
    "11332": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "11334": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "11335": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "DUP1",
      "path": "43"
    },
    "11336": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "11337": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SUB",
      "path": "43"
    },
    "11338": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11339": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "LOG3",
      "path": "43"
    },
    "11340": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "POP",
      "path": "43"
    },
    "11341": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "POP",
      "path": "43"
    },
    "11342": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "POP",
      "path": "43"
    },
    "11343": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10019,
        10389
      ],
      "op": "JUMP",
      "path": "43"
    },
    "11344": {
      "fn": "ERC20._transfer",
      "offset": [
        7322,
        8035
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "11345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11351": {
      "op": "SHL"
    },
    "11352": {
      "op": "SUB"
    },
    "11353": {
      "fn": "ERC20._transfer",
      "offset": [
        7457,
        7477
      ],
      "op": "DUP4",
      "path": "43",
      "statement": 111
    },
    "11354": {
      "branch": 197,
      "fn": "ERC20._transfer",
      "offset": [
        7457,
        7477
      ],
      "op": "AND",
      "path": "43"
    },
    "11355": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2CB4"
    },
    "11358": {
      "branch": 197,
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "11359": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "11361": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "11362": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11366": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11368": {
      "op": "SHL"
    },
    "11369": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11370": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "11371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11373": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "11375": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "DUP3",
      "path": "43"
    },
    "11376": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "ADD",
      "path": "43"
    },
    "11377": {
      "op": "MSTORE"
    },
    "11378": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "11380": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11382": {
      "op": "DUP3"
    },
    "11383": {
      "op": "ADD"
    },
    "11384": {
      "op": "MSTORE"
    },
    "11385": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "11418": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11420": {
      "op": "DUP3"
    },
    "11421": {
      "op": "ADD"
    },
    "11422": {
      "op": "MSTORE"
    },
    "11423": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "11429": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "11431": {
      "op": "SHL"
    },
    "11432": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11434": {
      "op": "DUP3"
    },
    "11435": {
      "op": "ADD"
    },
    "11436": {
      "op": "MSTORE"
    },
    "11437": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11439": {
      "op": "ADD"
    },
    "11440": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6F3"
    },
    "11443": {
      "op": "JUMP"
    },
    "11444": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "11445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11451": {
      "op": "SHL"
    },
    "11452": {
      "op": "SUB"
    },
    "11453": {
      "fn": "ERC20._transfer",
      "offset": [
        7537,
        7560
      ],
      "op": "DUP3",
      "path": "43",
      "statement": 112
    },
    "11454": {
      "branch": 198,
      "fn": "ERC20._transfer",
      "offset": [
        7537,
        7560
      ],
      "op": "AND",
      "path": "43"
    },
    "11455": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2D16"
    },
    "11458": {
      "branch": 198,
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "11459": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "11461": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "11462": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11466": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11468": {
      "op": "SHL"
    },
    "11469": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11470": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "11471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11473": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "11475": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "DUP3",
      "path": "43"
    },
    "11476": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "ADD",
      "path": "43"
    },
    "11477": {
      "op": "MSTORE"
    },
    "11478": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "11480": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11482": {
      "op": "DUP3"
    },
    "11483": {
      "op": "ADD"
    },
    "11484": {
      "op": "MSTORE"
    },
    "11485": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "11518": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11520": {
      "op": "DUP3"
    },
    "11521": {
      "op": "ADD"
    },
    "11522": {
      "op": "MSTORE"
    },
    "11523": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "11527": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "11529": {
      "op": "SHL"
    },
    "11530": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11532": {
      "op": "DUP3"
    },
    "11533": {
      "op": "ADD"
    },
    "11534": {
      "op": "MSTORE"
    },
    "11535": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11537": {
      "op": "ADD"
    },
    "11538": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6F3"
    },
    "11541": {
      "op": "JUMP"
    },
    "11542": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "11543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11549": {
      "op": "SHL"
    },
    "11550": {
      "op": "SUB"
    },
    "11551": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "DUP4",
      "path": "43"
    },
    "11552": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "AND",
      "path": "43"
    },
    "11553": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7690
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "11555": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11556": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11557": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "11558": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "11560": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11561": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11562": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "11563": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "11565": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11566": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "11567": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "11568": {
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "DUP2",
      "path": "43",
      "statement": 113
    },
    "11569": {
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11570": {
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "LT",
      "path": "43"
    },
    "11571": {
      "branch": 199,
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "11572": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2D8E"
    },
    "11575": {
      "branch": 199,
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "11576": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "11578": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "11579": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11583": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11585": {
      "op": "SHL"
    },
    "11586": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11587": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "11588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11590": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "11592": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "DUP3",
      "path": "43"
    },
    "11593": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "ADD",
      "path": "43"
    },
    "11594": {
      "op": "MSTORE"
    },
    "11595": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "11597": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11599": {
      "op": "DUP3"
    },
    "11600": {
      "op": "ADD"
    },
    "11601": {
      "op": "MSTORE"
    },
    "11602": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "11635": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11637": {
      "op": "DUP3"
    },
    "11638": {
      "op": "ADD"
    },
    "11639": {
      "op": "MSTORE"
    },
    "11640": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "11647": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "11649": {
      "op": "SHL"
    },
    "11650": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11652": {
      "op": "DUP3"
    },
    "11653": {
      "op": "ADD"
    },
    "11654": {
      "op": "MSTORE"
    },
    "11655": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11657": {
      "op": "ADD"
    },
    "11658": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6F3"
    },
    "11661": {
      "op": "JUMP"
    },
    "11662": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "11663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11669": {
      "op": "SHL"
    },
    "11670": {
      "op": "SUB"
    },
    "11671": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP1",
      "path": "43",
      "statement": 114
    },
    "11672": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP6",
      "path": "43"
    },
    "11673": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "AND",
      "path": "43"
    },
    "11674": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7837
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "11676": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11677": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11678": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "11679": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "11681": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11682": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11683": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "11684": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "11686": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP1",
      "path": "43"
    },
    "11687": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP3",
      "path": "43"
    },
    "11688": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "11689": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7870
      ],
      "op": "DUP6",
      "path": "43"
    },
    "11690": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7870
      ],
      "op": "DUP6",
      "path": "43"
    },
    "11691": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7870
      ],
      "op": "SUB",
      "path": "43"
    },
    "11692": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7870
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11693": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7870
      ],
      "op": "SSTORE",
      "path": "43"
    },
    "11694": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "SWAP2",
      "path": "43",
      "statement": 115
    },
    "11695": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "DUP6",
      "path": "43"
    },
    "11696": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "AND",
      "path": "43"
    },
    "11697": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11698": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "11699": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11700": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11701": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "11702": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "DUP1",
      "path": "43"
    },
    "11703": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "11704": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "DUP5",
      "path": "43"
    },
    "11705": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "11706": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7837
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11707": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2DC5"
    },
    "11710": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11711": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "DUP5",
      "path": "43"
    },
    "11712": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11713": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x3CAD"
    },
    "11716": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7890,
        7920
      ],
      "op": "JUMP",
      "path": "43"
    },
    "11717": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "11718": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "11719": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "POP",
      "path": "43"
    },
    "11720": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "POP",
      "path": "43"
    },
    "11721": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "DUP2",
      "path": "43"
    },
    "11722": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11723": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SSTORE",
      "path": "43"
    },
    "11724": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "POP",
      "path": "43"
    },
    "11725": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7962
      ],
      "op": "DUP3",
      "path": "43",
      "statement": 116
    },
    "11726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11732": {
      "op": "SHL"
    },
    "11733": {
      "op": "SUB"
    },
    "11734": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "AND",
      "path": "43"
    },
    "11735": {
      "fn": "ERC20._transfer",
      "offset": [
        7945,
        7951
      ],
      "op": "DUP5",
      "path": "43"
    },
    "11736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11742": {
      "op": "SHL"
    },
    "11743": {
      "op": "SUB"
    },
    "11744": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "AND",
      "path": "43"
    },
    "11745": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH32",
      "path": "43",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11778": {
      "fn": "ERC20._transfer",
      "offset": [
        7964,
        7970
      ],
      "op": "DUP5",
      "path": "43"
    },
    "11779": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "11781": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "11782": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2E11"
    },
    "11785": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "11786": {
      "op": "DUP2"
    },
    "11787": {
      "op": "MSTORE"
    },
    "11788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11790": {
      "op": "ADD"
    },
    "11791": {
      "op": "SWAP1"
    },
    "11792": {
      "op": "JUMP"
    },
    "11793": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "11794": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "11796": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "11797": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "DUP1",
      "path": "43"
    },
    "11798": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "11799": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SUB",
      "path": "43"
    },
    "11800": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "11801": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "LOG3",
      "path": "43"
    },
    "11802": {
      "fn": "ERC20._transfer",
      "offset": [
        7982,
        8028
      ],
      "op": "JUMPDEST",
      "path": "43",
      "statement": 117
    },
    "11803": {
      "fn": "ERC20._transfer",
      "offset": [
        7439,
        8035
      ],
      "op": "POP",
      "path": "43"
    },
    "11804": {
      "fn": "ERC20._transfer",
      "offset": [
        7322,
        8035
      ],
      "op": "POP",
      "path": "43"
    },
    "11805": {
      "fn": "ERC20._transfer",
      "offset": [
        7322,
        8035
      ],
      "op": "POP",
      "path": "43"
    },
    "11806": {
      "fn": "ERC20._transfer",
      "offset": [
        7322,
        8035
      ],
      "op": "POP",
      "path": "43"
    },
    "11807": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7322,
        8035
      ],
      "op": "JUMP",
      "path": "43"
    },
    "11808": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        17771,
        18620
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11809": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        17896,
        17908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11811": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        17910,
        17922
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11812": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        17976,
        17988
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11813": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        17992,
        17993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11815": {
      "branch": 188,
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        17976,
        17993
      ],
      "op": "SUB",
      "path": "1"
    },
    "11816": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        17972,
        18065
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E9E"
    },
    "11819": {
      "branch": 188,
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        17972,
        18065
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11820": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18028
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 118,
      "value": "0xC"
    },
    "11822": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18028
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11823": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18051,
        18057
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "11825": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18051,
        18063
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11826": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11828": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11829": {
      "op": "PUSH4",
      "value": "0xB3596F07"
    },
    "11834": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11836": {
      "op": "SHL"
    },
    "11837": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11838": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11845": {
      "op": "SHL"
    },
    "11846": {
      "op": "SUB"
    },
    "11847": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18051,
        18063
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11848": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18051,
        18063
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11849": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18051,
        18063
      ],
      "op": "AND",
      "path": "1"
    },
    "11850": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11852": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11853": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "ADD",
      "path": "1"
    },
    "11854": {
      "op": "MSTORE"
    },
    "11855": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18028
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11856": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18028
      ],
      "op": "AND",
      "path": "1"
    },
    "11857": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18028
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11858": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18042
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB3596F07"
    },
    "11863": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18042
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11864": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11866": {
      "op": "ADD"
    },
    "11867": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11869": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11871": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11872": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11873": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11874": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "SUB",
      "path": "1"
    },
    "11875": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11876": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "DUP7",
      "path": "1"
    },
    "11877": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "GAS",
      "path": "1"
    },
    "11878": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "11879": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11880": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11881": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11882": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E77"
    },
    "11885": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11886": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "11887": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11889": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11890": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "11891": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "11892": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11894": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "REVERT",
      "path": "1"
    },
    "11895": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11896": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "POP",
      "path": "1"
    },
    "11897": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "POP",
      "path": "1"
    },
    "11898": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "POP",
      "path": "1"
    },
    "11899": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "POP",
      "path": "1"
    },
    "11900": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11902": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11903": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "11904": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "11906": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "NOT",
      "path": "1"
    },
    "11907": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "11909": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11910": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "ADD",
      "path": "1"
    },
    "11911": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "AND",
      "path": "1"
    },
    "11912": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11913": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "ADD",
      "path": "1"
    },
    "11914": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11915": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11917": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11918": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "POP",
      "path": "1"
    },
    "11919": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11920": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "ADD",
      "path": "1"
    },
    "11921": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11922": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E9B"
    },
    "11925": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11926": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11927": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DF4"
    },
    "11930": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "jump": "i",
      "offset": [
        18022,
        18065
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11931": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18022,
        18065
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11932": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18007,
        18065
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "11933": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18007,
        18065
      ],
      "op": "POP",
      "path": "1"
    },
    "11934": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        17972,
        18065
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11935": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18079,
        18091
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11936": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18095,
        18096
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11938": {
      "branch": 189,
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18079,
        18096
      ],
      "op": "SUB",
      "path": "1"
    },
    "11939": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18075,
        18168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F19"
    },
    "11942": {
      "branch": 189,
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18075,
        18168
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11943": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18131
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 119,
      "value": "0xC"
    },
    "11945": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18131
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11946": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18154,
        18160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "11948": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18154,
        18166
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11949": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11951": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11952": {
      "op": "PUSH4",
      "value": "0xB3596F07"
    },
    "11957": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11959": {
      "op": "SHL"
    },
    "11960": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11961": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11968": {
      "op": "SHL"
    },
    "11969": {
      "op": "SUB"
    },
    "11970": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18154,
        18166
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11971": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18154,
        18166
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11972": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18154,
        18166
      ],
      "op": "AND",
      "path": "1"
    },
    "11973": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11975": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11976": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "ADD",
      "path": "1"
    },
    "11977": {
      "op": "MSTORE"
    },
    "11978": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18131
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11979": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18131
      ],
      "op": "AND",
      "path": "1"
    },
    "11980": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18131
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11981": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18145
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB3596F07"
    },
    "11986": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18145
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11987": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11989": {
      "op": "ADD"
    },
    "11990": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11992": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11994": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11995": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11996": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11997": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "SUB",
      "path": "1"
    },
    "11998": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11999": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "DUP7",
      "path": "1"
    },
    "12000": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "GAS",
      "path": "1"
    },
    "12001": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "12002": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "12003": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12004": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "12005": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EF2"
    },
    "12008": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12009": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "12010": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12012": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12013": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "12014": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "12015": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12017": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "REVERT",
      "path": "1"
    },
    "12018": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12019": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "POP",
      "path": "1"
    },
    "12020": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "POP",
      "path": "1"
    },
    "12021": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "POP",
      "path": "1"
    },
    "12022": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "POP",
      "path": "1"
    },
    "12023": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12025": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12026": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "12027": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "12029": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "NOT",
      "path": "1"
    },
    "12030": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "12032": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12033": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "ADD",
      "path": "1"
    },
    "12034": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "AND",
      "path": "1"
    },
    "12035": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12036": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "ADD",
      "path": "1"
    },
    "12037": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12038": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12040": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12041": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "POP",
      "path": "1"
    },
    "12042": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12043": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "ADD",
      "path": "1"
    },
    "12044": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12045": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F16"
    },
    "12048": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12049": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12050": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DF4"
    },
    "12053": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "jump": "i",
      "offset": [
        18125,
        18168
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12054": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18125,
        18168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12055": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18110,
        18168
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "12056": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18110,
        18168
      ],
      "op": "POP",
      "path": "1"
    },
    "12057": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18075,
        18168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12058": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18194,
        18613
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 120,
      "value": "0x2FB9"
    },
    "12061": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18272,
        18462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F7A"
    },
    "12064": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18428,
        18434
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "12066": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18428,
        18443
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12068": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18428,
        18443
      ],
      "op": "ADD",
      "path": "1"
    },
    "12069": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18428,
        18443
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x14"
    },
    "12071": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18428,
        18443
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12072": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18428,
        18443
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12073": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18428,
        18443
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12074": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18428,
        18443
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "12077": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18428,
        18443
      ],
      "op": "EXP",
      "path": "1"
    },
    "12078": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18428,
        18443
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12079": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18428,
        18443
      ],
      "op": "DIV",
      "path": "1"
    },
    "12080": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18428,
        18443
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "12082": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18428,
        18443
      ],
      "op": "AND",
      "path": "1"
    },
    "12083": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18422,
        18424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "12085": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18422,
        18443
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F3E"
    },
    "12088": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18422,
        18443
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12089": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18422,
        18443
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12090": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18422,
        18443
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "12093": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "jump": "i",
      "offset": [
        18422,
        18443
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12094": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18422,
        18443
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12095": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18357,
        18363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "12097": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18357,
        18372
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12098": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18404,
        18416
      ],
      "op": "DUP7",
      "path": "1"
    },
    "12099": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18404,
        18416
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12100": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18351,
        18372
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F58"
    },
    "12103": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18351,
        18372
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12108": {
      "op": "SHL"
    },
    "12109": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18357,
        18372
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12110": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18357,
        18372
      ],
      "op": "DIV",
      "path": "1"
    },
    "12111": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18357,
        18372
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "12113": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18357,
        18372
      ],
      "op": "AND",
      "path": "1"
    },
    "12114": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18351,
        18353
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "12116": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18351,
        18372
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE5"
    },
    "12119": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "jump": "i",
      "offset": [
        18351,
        18372
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12120": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18351,
        18372
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12121": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18336,
        18372
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F62"
    },
    "12124": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18336,
        18372
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12125": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18336,
        18348
      ],
      "op": "DUP10",
      "path": "1"
    },
    "12126": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18336,
        18372
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "12129": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "jump": "i",
      "offset": [
        18336,
        18372
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12130": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18336,
        18372
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12131": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18335,
        18416
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F6C"
    },
    "12134": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18335,
        18416
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12135": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18335,
        18416
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12136": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18335,
        18416
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "12139": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "jump": "i",
      "offset": [
        18335,
        18416
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12140": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18335,
        18416
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12141": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18299,
        18417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D83"
    },
    "12144": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18299,
        18417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12147": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12149": {
      "op": "SHL"
    },
    "12150": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18299,
        18417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC0"
    },
    "12153": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "jump": "i",
      "offset": [
        18299,
        18417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12154": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18272,
        18462
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12155": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18518,
        18527
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "12157": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18518,
        18527
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12158": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18490,
        18528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12160": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18490,
        18528
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12161": {
      "op": "PUSH4",
      "value": "0x986CFBA3"
    },
    "12166": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12168": {
      "op": "SHL"
    },
    "12169": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18490,
        18528
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12170": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18490,
        18528
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12171": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18518,
        18527
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "12173": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18518,
        18527
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12174": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18518,
        18527
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12175": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18518,
        18527
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12176": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18518,
        18527
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12177": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18490,
        18528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12179": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18490,
        18528
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12180": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18490,
        18528
      ],
      "op": "ADD",
      "path": "1"
    },
    "12181": {
      "op": "MSTORE"
    },
    "12182": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18490,
        18498
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x0"
    },
    "12203": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18490,
        18498
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12204": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18490,
        18517
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x986CFBA3"
    },
    "12209": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18490,
        18517
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12210": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12212": {
      "op": "ADD"
    },
    "12213": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18490,
        18528
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2532"
    },
    "12216": {
      "op": "JUMP"
    },
    "12217": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18194,
        18613
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12218": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18179,
        18613
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12219": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18179,
        18613
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "12220": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18179,
        18613
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12221": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        18179,
        18613
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "12222": {
      "op": "POP"
    },
    "12223": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "offset": [
        17771,
        18620
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "12224": {
      "op": "POP"
    },
    "12225": {
      "op": "POP"
    },
    "12226": {
      "op": "POP"
    },
    "12227": {
      "fn": "TokenisableRange.returnExpectedBalanceWithoutFees",
      "jump": "o",
      "offset": [
        17771,
        18620
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12228": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "12229": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "58",
      "statement": 121,
      "value": "0x40"
    },
    "12231": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "12232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12238": {
      "op": "SHL"
    },
    "12239": {
      "op": "SUB"
    },
    "12240": {
      "op": "DUP4"
    },
    "12241": {
      "op": "AND"
    },
    "12242": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x24"
    },
    "12244": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "58"
    },
    "12245": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "58"
    },
    "12246": {
      "op": "MSTORE"
    },
    "12247": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12249": {
      "op": "DUP2"
    },
    "12250": {
      "op": "ADD"
    },
    "12251": {
      "op": "DUP3"
    },
    "12252": {
      "op": "SWAP1"
    },
    "12253": {
      "op": "MSTORE"
    },
    "12254": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x3027"
    },
    "12257": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12258": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "58"
    },
    "12259": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12260": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "12265": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12267": {
      "op": "SHL"
    },
    "12268": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        886
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12269": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12271": {
      "op": "ADD"
    },
    "12272": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "12273": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "12275": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "58"
    },
    "12276": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "12277": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12279": {
      "op": "NOT"
    },
    "12280": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "58"
    },
    "12281": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP5",
      "path": "58"
    },
    "12282": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SUB",
      "path": "58"
    },
    "12283": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "58"
    },
    "12284": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "58"
    },
    "12285": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "12286": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "12287": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12288": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "12289": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "12291": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "58"
    },
    "12292": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "58"
    },
    "12293": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "58"
    },
    "12294": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "12295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12299": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12301": {
      "op": "SHL"
    },
    "12302": {
      "op": "SUB"
    },
    "12303": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "58"
    },
    "12304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12308": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12310": {
      "op": "SHL"
    },
    "12311": {
      "op": "SUB"
    },
    "12312": {
      "op": "NOT"
    },
    "12313": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12314": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP4",
      "path": "58"
    },
    "12315": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "58"
    },
    "12316": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP3",
      "path": "58"
    },
    "12317": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12318": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP3",
      "path": "58"
    },
    "12319": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "OR",
      "path": "58"
    },
    "12320": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12321": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "12322": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "12323": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        832
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x3439"
    },
    "12326": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        813,
        899
      ],
      "op": "JUMP",
      "path": "58"
    },
    "12327": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "12328": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "58"
    },
    "12329": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "58"
    },
    "12330": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "58"
    },
    "12331": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "58"
    },
    "12332": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2022,
        2332
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "12333": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "12335": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "12336": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "12341": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12343": {
      "op": "SHL"
    },
    "12344": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP2",
      "path": "58"
    },
    "12345": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "12346": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2195,
        2199
      ],
      "op": "ADDRESS",
      "path": "58"
    },
    "12347": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x4"
    },
    "12349": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP3",
      "path": "58"
    },
    "12350": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ADD",
      "path": "58"
    },
    "12351": {
      "op": "MSTORE"
    },
    "12352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12358": {
      "op": "SHL"
    },
    "12359": {
      "op": "SUB"
    },
    "12360": {
      "op": "DUP4"
    },
    "12361": {
      "op": "DUP2"
    },
    "12362": {
      "op": "AND"
    },
    "12363": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12365": {
      "op": "DUP4"
    },
    "12366": {
      "op": "ADD"
    },
    "12367": {
      "op": "MSTORE"
    },
    "12368": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2148,
        2168
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x0"
    },
    "12370": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2148,
        2168
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "12371": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2213,
        2218
      ],
      "op": "DUP4",
      "path": "58"
    },
    "12372": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2213,
        2218
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "12373": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "DUP7",
      "path": "58"
    },
    "12374": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "AND",
      "path": "58"
    },
    "12375": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12376": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "PUSH4",
      "path": "58",
      "value": "0xDD62ED3E"
    },
    "12381": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12382": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12384": {
      "op": "ADD"
    },
    "12385": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "12387": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "12389": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "12390": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP1",
      "path": "58"
    },
    "12391": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP4",
      "path": "58"
    },
    "12392": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "SUB",
      "path": "58"
    },
    "12393": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP2",
      "path": "58"
    },
    "12394": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP7",
      "path": "58"
    },
    "12395": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "GAS",
      "path": "58"
    },
    "12396": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "STATICCALL",
      "path": "58"
    },
    "12397": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ISZERO",
      "path": "58"
    },
    "12398": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP1",
      "path": "58"
    },
    "12399": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ISZERO",
      "path": "58"
    },
    "12400": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x307D"
    },
    "12403": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "JUMPI",
      "path": "58"
    },
    "12404": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "RETURNDATASIZE",
      "path": "58"
    },
    "12405": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x0"
    },
    "12407": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP1",
      "path": "58"
    },
    "12408": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "RETURNDATACOPY",
      "path": "58"
    },
    "12409": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "RETURNDATASIZE",
      "path": "58"
    },
    "12410": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x0"
    },
    "12412": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "REVERT",
      "path": "58"
    },
    "12413": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "12414": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "58"
    },
    "12415": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "58"
    },
    "12416": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "58"
    },
    "12417": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "58"
    },
    "12418": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "12420": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "12421": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "RETURNDATASIZE",
      "path": "58"
    },
    "12422": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x1F"
    },
    "12424": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "NOT",
      "path": "58"
    },
    "12425": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x1F"
    },
    "12427": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP3",
      "path": "58"
    },
    "12428": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ADD",
      "path": "58"
    },
    "12429": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "AND",
      "path": "58"
    },
    "12430": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP3",
      "path": "58"
    },
    "12431": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ADD",
      "path": "58"
    },
    "12432": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP1",
      "path": "58"
    },
    "12433": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "12435": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "12436": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "58"
    },
    "12437": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP2",
      "path": "58"
    },
    "12438": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ADD",
      "path": "58"
    },
    "12439": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12440": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x30A1"
    },
    "12443": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "12444": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12445": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x3DF4"
    },
    "12448": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "jump": "i",
      "offset": [
        2171,
        2210
      ],
      "op": "JUMP",
      "path": "58"
    },
    "12449": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "12450": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x30AB"
    },
    "12453": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "12454": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12455": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x3CAD"
    },
    "12458": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "jump": "i",
      "offset": [
        2171,
        2218
      ],
      "op": "JUMP",
      "path": "58"
    },
    "12459": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "12460": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "PUSH1",
      "path": "58",
      "statement": 122,
      "value": "0x40"
    },
    "12462": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "12463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12469": {
      "op": "SHL"
    },
    "12470": {
      "op": "SUB"
    },
    "12471": {
      "op": "DUP6"
    },
    "12472": {
      "op": "AND"
    },
    "12473": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x24"
    },
    "12475": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "DUP3",
      "path": "58"
    },
    "12476": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "ADD",
      "path": "58"
    },
    "12477": {
      "op": "MSTORE"
    },
    "12478": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12480": {
      "op": "DUP2"
    },
    "12481": {
      "op": "ADD"
    },
    "12482": {
      "op": "DUP3"
    },
    "12483": {
      "op": "SWAP1"
    },
    "12484": {
      "op": "MSTORE"
    },
    "12485": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2148,
        2218
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12486": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2148,
        2218
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "12487": {
      "op": "POP"
    },
    "12488": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2228,
        2325
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x2E1A"
    },
    "12491": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2228,
        2325
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12492": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2248,
        2253
      ],
      "op": "DUP6",
      "path": "58"
    },
    "12493": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2248,
        2253
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12494": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "12499": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12501": {
      "op": "SHL"
    },
    "12502": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2278,
        2300
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12503": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12505": {
      "op": "ADD"
    },
    "12506": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x2FF0"
    },
    "12509": {
      "op": "JUMP"
    },
    "12510": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9596
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "12511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12517": {
      "op": "SHL"
    },
    "12518": {
      "op": "SUB"
    },
    "12519": {
      "fn": "ERC20._burn",
      "offset": [
        9103,
        9124
      ],
      "op": "DUP3",
      "path": "43",
      "statement": 123
    },
    "12520": {
      "branch": 200,
      "fn": "ERC20._burn",
      "offset": [
        9103,
        9124
      ],
      "op": "AND",
      "path": "43"
    },
    "12521": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x313E"
    },
    "12524": {
      "branch": 200,
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "12525": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "12527": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "12528": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12532": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12534": {
      "op": "SHL"
    },
    "12535": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "DUP2",
      "path": "43"
    },
    "12536": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "12537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12539": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "12541": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "DUP3",
      "path": "43"
    },
    "12542": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "ADD",
      "path": "43"
    },
    "12543": {
      "op": "MSTORE"
    },
    "12544": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "12546": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12548": {
      "op": "DUP3"
    },
    "12549": {
      "op": "ADD"
    },
    "12550": {
      "op": "MSTORE"
    },
    "12551": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "12584": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12586": {
      "op": "DUP3"
    },
    "12587": {
      "op": "ADD"
    },
    "12588": {
      "op": "MSTORE"
    },
    "12589": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "12591": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12593": {
      "op": "SHL"
    },
    "12594": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12596": {
      "op": "DUP3"
    },
    "12597": {
      "op": "ADD"
    },
    "12598": {
      "op": "MSTORE"
    },
    "12599": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12601": {
      "op": "ADD"
    },
    "12602": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6F3"
    },
    "12605": {
      "op": "JUMP"
    },
    "12606": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "12607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12613": {
      "op": "SHL"
    },
    "12614": {
      "op": "SUB"
    },
    "12615": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "DUP3",
      "path": "43"
    },
    "12616": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "AND",
      "path": "43"
    },
    "12617": {
      "fn": "ERC20._burn",
      "offset": [
        9233,
        9255
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "12619": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "12620": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "DUP2",
      "path": "43"
    },
    "12621": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "12622": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "12624": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "DUP2",
      "path": "43"
    },
    "12625": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "12626": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "12627": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "12629": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "12630": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "12631": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "12632": {
      "fn": "ERC20._burn",
      "offset": [
        9294,
        9318
      ],
      "op": "DUP2",
      "path": "43",
      "statement": 124
    },
    "12633": {
      "fn": "ERC20._burn",
      "offset": [
        9294,
        9318
      ],
      "op": "DUP2",
      "path": "43"
    },
    "12634": {
      "fn": "ERC20._burn",
      "offset": [
        9294,
        9318
      ],
      "op": "LT",
      "path": "43"
    },
    "12635": {
      "branch": 201,
      "fn": "ERC20._burn",
      "offset": [
        9294,
        9318
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "12636": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x31B2"
    },
    "12639": {
      "branch": 201,
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "12640": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "12642": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "12643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12649": {
      "op": "SHL"
    },
    "12650": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "DUP2",
      "path": "43"
    },
    "12651": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "12652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12654": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "12656": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "DUP3",
      "path": "43"
    },
    "12657": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "ADD",
      "path": "43"
    },
    "12658": {
      "op": "MSTORE"
    },
    "12659": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12663": {
      "op": "DUP3"
    },
    "12664": {
      "op": "ADD"
    },
    "12665": {
      "op": "MSTORE"
    },
    "12666": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "12699": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12701": {
      "op": "DUP3"
    },
    "12702": {
      "op": "ADD"
    },
    "12703": {
      "op": "MSTORE"
    },
    "12704": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "12707": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "12709": {
      "op": "SHL"
    },
    "12710": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12712": {
      "op": "DUP3"
    },
    "12713": {
      "op": "ADD"
    },
    "12714": {
      "op": "MSTORE"
    },
    "12715": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12717": {
      "op": "ADD"
    },
    "12718": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6F3"
    },
    "12721": {
      "op": "JUMP"
    },
    "12722": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "12723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12729": {
      "op": "SHL"
    },
    "12730": {
      "op": "SUB"
    },
    "12731": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "DUP4",
      "path": "43",
      "statement": 125
    },
    "12732": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "AND",
      "path": "43"
    },
    "12733": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9400
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "12735": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "12736": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "DUP2",
      "path": "43"
    },
    "12737": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "12738": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "12740": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "DUP2",
      "path": "43"
    },
    "12741": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "12742": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "12743": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "12745": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "DUP2",
      "path": "43"
    },
    "12746": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "12747": {
      "fn": "ERC20._burn",
      "offset": [
        9412,
        9435
      ],
      "op": "DUP4",
      "path": "43"
    },
    "12748": {
      "fn": "ERC20._burn",
      "offset": [
        9412,
        9435
      ],
      "op": "DUP4",
      "path": "43"
    },
    "12749": {
      "fn": "ERC20._burn",
      "offset": [
        9412,
        9435
      ],
      "op": "SUB",
      "path": "43"
    },
    "12750": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9435
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "12751": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9435
      ],
      "op": "SSTORE",
      "path": "43"
    },
    "12752": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9467
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 126,
      "value": "0x2"
    },
    "12754": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "DUP1",
      "path": "43"
    },
    "12755": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "12756": {
      "fn": "ERC20._burn",
      "offset": [
        9429,
        9435
      ],
      "op": "DUP5",
      "path": "43"
    },
    "12757": {
      "fn": "ERC20._burn",
      "offset": [
        9429,
        9435
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "12758": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9400
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "12759": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x31E1"
    },
    "12762": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "12763": {
      "fn": "ERC20._burn",
      "offset": [
        9429,
        9435
      ],
      "op": "DUP5",
      "path": "43"
    },
    "12764": {
      "fn": "ERC20._burn",
      "offset": [
        9429,
        9435
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "12765": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x3E74"
    },
    "12768": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9455,
        9477
      ],
      "op": "JUMP",
      "path": "43"
    },
    "12769": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "12770": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "12771": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "12772": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "SSTORE",
      "path": "43"
    },
    "12773": {
      "op": "POP"
    },
    "12774": {
      "op": "POP"
    },
    "12775": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 127,
      "value": "0x40"
    },
    "12777": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "12778": {
      "op": "DUP3"
    },
    "12779": {
      "op": "DUP2"
    },
    "12780": {
      "op": "MSTORE"
    },
    "12781": {
      "fn": "ERC20._burn",
      "offset": [
        9519,
        9520
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "12783": {
      "fn": "ERC20._burn",
      "offset": [
        9519,
        9520
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "12784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12790": {
      "op": "SHL"
    },
    "12791": {
      "op": "SUB"
    },
    "12792": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "DUP6",
      "path": "43"
    },
    "12793": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "AND",
      "path": "43"
    },
    "12794": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "12795": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "PUSH32",
      "path": "43",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "12828": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "12829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12831": {
      "op": "ADD"
    },
    "12832": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "12834": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "12835": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "DUP1",
      "path": "43"
    },
    "12836": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "12837": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "SUB",
      "path": "43"
    },
    "12838": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "12839": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "LOG3",
      "path": "43"
    },
    "12840": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "58"
    },
    "12841": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "58"
    },
    "12842": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "58"
    },
    "12843": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "58"
    },
    "12844": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "12845": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "58",
      "statement": 128,
      "value": "0x40"
    },
    "12847": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "12848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12854": {
      "op": "SHL"
    },
    "12855": {
      "op": "SUB"
    },
    "12856": {
      "op": "DUP1"
    },
    "12857": {
      "op": "DUP6"
    },
    "12858": {
      "op": "AND"
    },
    "12859": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x24"
    },
    "12861": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "58"
    },
    "12862": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "58"
    },
    "12863": {
      "op": "MSTORE"
    },
    "12864": {
      "op": "DUP4"
    },
    "12865": {
      "op": "AND"
    },
    "12866": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12868": {
      "op": "DUP3"
    },
    "12869": {
      "op": "ADD"
    },
    "12870": {
      "op": "MSTORE"
    },
    "12871": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12873": {
      "op": "DUP2"
    },
    "12874": {
      "op": "ADD"
    },
    "12875": {
      "op": "DUP3"
    },
    "12876": {
      "op": "SWAP1"
    },
    "12877": {
      "op": "MSTORE"
    },
    "12878": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x2E1A"
    },
    "12881": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12882": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "DUP6",
      "path": "58"
    },
    "12883": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12884": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "12889": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12891": {
      "op": "SHL"
    },
    "12892": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1100,
        1127
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "12893": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12895": {
      "op": "ADD"
    },
    "12896": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x2FF0"
    },
    "12899": {
      "op": "JUMP"
    },
    "12900": {
      "fn": "ERC20._mint",
      "offset": [
        8311,
        8700
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "12901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12907": {
      "op": "SHL"
    },
    "12908": {
      "op": "SUB"
    },
    "12909": {
      "fn": "ERC20._mint",
      "offset": [
        8394,
        8415
      ],
      "op": "DUP3",
      "path": "43",
      "statement": 129
    },
    "12910": {
      "branch": 202,
      "fn": "ERC20._mint",
      "offset": [
        8394,
        8415
      ],
      "op": "AND",
      "path": "43"
    },
    "12911": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x32BA"
    },
    "12914": {
      "branch": 202,
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "12915": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "12917": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "12918": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12922": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12924": {
      "op": "SHL"
    },
    "12925": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "DUP2",
      "path": "43"
    },
    "12926": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "12927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12929": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "12931": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "DUP3",
      "path": "43"
    },
    "12932": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "ADD",
      "path": "43"
    },
    "12933": {
      "op": "MSTORE"
    },
    "12934": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12936": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12938": {
      "op": "DUP3"
    },
    "12939": {
      "op": "ADD"
    },
    "12940": {
      "op": "MSTORE"
    },
    "12941": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "12974": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12976": {
      "op": "DUP3"
    },
    "12977": {
      "op": "ADD"
    },
    "12978": {
      "op": "MSTORE"
    },
    "12979": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12981": {
      "op": "ADD"
    },
    "12982": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6F3"
    },
    "12985": {
      "op": "JUMP"
    },
    "12986": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "12987": {
      "fn": "ERC20._mint",
      "offset": [
        8538,
        8544
      ],
      "op": "DUP1",
      "path": "43",
      "statement": 130
    },
    "12988": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8534
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "12990": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8534
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "12992": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "DUP3",
      "path": "43"
    },
    "12993": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "DUP3",
      "path": "43"
    },
    "12994": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "12995": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x32CC"
    },
    "12998": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "12999": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "13000": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x3CAD"
    },
    "13003": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8522,
        8544
      ],
      "op": "JUMP",
      "path": "43"
    },
    "13004": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "13005": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "13006": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "13007": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "SSTORE",
      "path": "43"
    },
    "13008": {
      "op": "POP"
    },
    "13009": {
      "op": "POP"
    },
    "13010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13016": {
      "op": "SHL"
    },
    "13017": {
      "op": "SUB"
    },
    "13018": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "DUP3",
      "path": "43",
      "statement": 131
    },
    "13019": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "AND",
      "path": "43"
    },
    "13020": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8563
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "13022": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "13023": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "DUP2",
      "path": "43"
    },
    "13024": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "13025": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "13027": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "DUP2",
      "path": "43"
    },
    "13028": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "13029": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "13030": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "13032": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "DUP2",
      "path": "43"
    },
    "13033": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "13034": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "DUP1",
      "path": "43"
    },
    "13035": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "13036": {
      "fn": "ERC20._mint",
      "offset": [
        8576,
        8582
      ],
      "op": "DUP4",
      "path": "43"
    },
    "13037": {
      "fn": "ERC20._mint",
      "offset": [
        8576,
        8582
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "13038": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8563
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "13039": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x32F9"
    },
    "13042": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "13043": {
      "fn": "ERC20._mint",
      "offset": [
        8576,
        8582
      ],
      "op": "DUP5",
      "path": "43"
    },
    "13044": {
      "fn": "ERC20._mint",
      "offset": [
        8576,
        8582
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "13045": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x3CAD"
    },
    "13048": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8554,
        8582
      ],
      "op": "JUMP",
      "path": "43"
    },
    "13049": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "13050": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "13051": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "13052": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "SSTORE",
      "path": "43"
    },
    "13053": {
      "op": "POP"
    },
    "13054": {
      "op": "POP"
    },
    "13055": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 132,
      "value": "0x40"
    },
    "13057": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "13058": {
      "op": "DUP2"
    },
    "13059": {
      "op": "DUP2"
    },
    "13060": {
      "op": "MSTORE"
    },
    "13061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13067": {
      "op": "SHL"
    },
    "13068": {
      "op": "SUB"
    },
    "13069": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "DUP4",
      "path": "43"
    },
    "13070": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "AND",
      "path": "43"
    },
    "13071": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "13072": {
      "fn": "ERC20._mint",
      "offset": [
        8614,
        8615
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "13074": {
      "fn": "ERC20._mint",
      "offset": [
        8614,
        8615
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "13075": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "PUSH32",
      "path": "43",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "13108": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "13109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13111": {
      "op": "ADD"
    },
    "13112": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "13114": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "13115": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "DUP1",
      "path": "43"
    },
    "13116": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "13117": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "SUB",
      "path": "43"
    },
    "13118": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "13119": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "LOG3",
      "path": "43"
    },
    "13120": {
      "fn": "ERC20._mint",
      "offset": [
        8311,
        8700
      ],
      "op": "POP",
      "path": "43"
    },
    "13121": {
      "fn": "ERC20._mint",
      "offset": [
        8311,
        8700
      ],
      "op": "POP",
      "path": "43"
    },
    "13122": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8311,
        8700
      ],
      "op": "JUMP",
      "path": "43"
    },
    "13123": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5250,
        6308
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13124": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5430,
        5445
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "13126": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5447,
        5462
      ],
      "op": "DUP1",
      "path": "4"
    },
    "13127": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5494,
        5507
      ],
      "op": "DUP4",
      "path": "4"
    },
    "13128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13134": {
      "op": "SHL"
    },
    "13135": {
      "op": "SUB"
    },
    "13136": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5478,
        5507
      ],
      "op": "AND",
      "path": "4"
    },
    "13137": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5478,
        5491
      ],
      "op": "DUP6",
      "path": "4"
    },
    "13138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13144": {
      "op": "SHL"
    },
    "13145": {
      "op": "SUB"
    },
    "13146": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5478,
        5507
      ],
      "op": "AND",
      "path": "4"
    },
    "13147": {
      "branch": 206,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5478,
        5507
      ],
      "op": "GT",
      "path": "4"
    },
    "13148": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5474,
        5584
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "13149": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5474,
        5584
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3364"
    },
    "13152": {
      "branch": 206,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5474,
        5584
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "13153": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5555,
        5568
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 133
    },
    "13154": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5555,
        5568
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "13155": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5570,
        5583
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "13156": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5474,
        5584
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13157": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5614,
        5627
      ],
      "op": "DUP5",
      "path": "4"
    },
    "13158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13164": {
      "op": "SHL"
    },
    "13165": {
      "op": "SUB"
    },
    "13166": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5599,
        5627
      ],
      "op": "AND",
      "path": "4"
    },
    "13167": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5599,
        5611
      ],
      "op": "DUP7",
      "path": "4"
    },
    "13168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13174": {
      "op": "SHL"
    },
    "13175": {
      "op": "SUB"
    },
    "13176": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5599,
        5627
      ],
      "op": "AND",
      "path": "4"
    },
    "13177": {
      "branch": 207,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5599,
        5627
      ],
      "op": "LT",
      "path": "4"
    },
    "13178": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5595,
        6302
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "13179": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5595,
        6302
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3390"
    },
    "13182": {
      "branch": 207,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5595,
        6302
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "13183": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5653,
        5778
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 134,
      "value": "0x3389"
    },
    "13186": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5693,
        5706
      ],
      "op": "DUP6",
      "path": "4"
    },
    "13187": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5724,
        5737
      ],
      "op": "DUP6",
      "path": "4"
    },
    "13188": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5755,
        5764
      ],
      "op": "DUP6",
      "path": "4"
    },
    "13189": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5653,
        5675
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x350B"
    },
    "13192": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "i",
      "offset": [
        5653,
        5778
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13193": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5653,
        5778
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13194": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5643,
        5778
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "13195": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5643,
        5778
      ],
      "op": "POP",
      "path": "4"
    },
    "13196": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5595,
        6302
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x33D7"
    },
    "13199": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5595,
        6302
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13200": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5595,
        6302
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13201": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5814,
        5827
      ],
      "op": "DUP4",
      "path": "4"
    },
    "13202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13208": {
      "op": "SHL"
    },
    "13209": {
      "op": "SUB"
    },
    "13210": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5799,
        5827
      ],
      "op": "AND",
      "path": "4"
    },
    "13211": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5799,
        5811
      ],
      "op": "DUP7",
      "path": "4"
    },
    "13212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13218": {
      "op": "SHL"
    },
    "13219": {
      "op": "SUB"
    },
    "13220": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5799,
        5827
      ],
      "op": "AND",
      "path": "4"
    },
    "13221": {
      "branch": 208,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5799,
        5827
      ],
      "op": "LT",
      "path": "4"
    },
    "13222": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5795,
        6302
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "13223": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5795,
        6302
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x33C9"
    },
    "13226": {
      "branch": 208,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5795,
        6302
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "13227": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5853,
        5977
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 135,
      "value": "0x33B5"
    },
    "13230": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5893,
        5905
      ],
      "op": "DUP7",
      "path": "4"
    },
    "13231": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5923,
        5936
      ],
      "op": "DUP6",
      "path": "4"
    },
    "13232": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5954,
        5963
      ],
      "op": "DUP6",
      "path": "4"
    },
    "13233": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5853,
        5875
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x350B"
    },
    "13236": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "i",
      "offset": [
        5853,
        5977
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13237": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5853,
        5977
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13238": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5843,
        5977
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "13239": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5843,
        5977
      ],
      "op": "POP",
      "path": "4"
    },
    "13240": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6001,
        6125
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 136,
      "value": "0x33C2"
    },
    "13243": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6041,
        6054
      ],
      "op": "DUP6",
      "path": "4"
    },
    "13244": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6072,
        6084
      ],
      "op": "DUP8",
      "path": "4"
    },
    "13245": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6102,
        6111
      ],
      "op": "DUP6",
      "path": "4"
    },
    "13246": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6001,
        6023
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3586"
    },
    "13249": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "i",
      "offset": [
        6001,
        6125
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13250": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6001,
        6125
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13251": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5991,
        6125
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "13252": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5991,
        6125
      ],
      "op": "POP",
      "path": "4"
    },
    "13253": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5795,
        6302
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x33D7"
    },
    "13256": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5795,
        6302
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13257": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5795,
        6302
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13258": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6166,
        6291
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 137,
      "value": "0x33D4"
    },
    "13261": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6206,
        6219
      ],
      "op": "DUP6",
      "path": "4"
    },
    "13262": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6237,
        6250
      ],
      "op": "DUP6",
      "path": "4"
    },
    "13263": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6268,
        6277
      ],
      "op": "DUP6",
      "path": "4"
    },
    "13264": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6166,
        6188
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3586"
    },
    "13267": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "i",
      "offset": [
        6166,
        6291
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13268": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6166,
        6291
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13269": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6156,
        6291
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "13270": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6156,
        6291
      ],
      "op": "POP",
      "path": "4"
    },
    "13271": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5795,
        6302
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13272": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5250,
        6308
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "13273": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5250,
        6308
      ],
      "op": "POP",
      "path": "4"
    },
    "13274": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5250,
        6308
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "13275": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5250,
        6308
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "13276": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5250,
        6308
      ],
      "op": "POP",
      "path": "4"
    },
    "13277": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5250,
        6308
      ],
      "op": "POP",
      "path": "4"
    },
    "13278": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        5250,
        6308
      ],
      "op": "POP",
      "path": "4"
    },
    "13279": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "o",
      "offset": [
        5250,
        6308
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13280": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2417,
        2608
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13281": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2462,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13283": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2462,
        2468
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13284": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2499,
        2500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "13286": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2490,
        2495
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33F0"
    },
    "13289": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2490,
        2491
      ],
      "op": "DUP5",
      "path": "1"
    },
    "13290": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2494,
        2495
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "13292": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2490,
        2495
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "13295": {
      "fn": "TokenisableRange.sqrt",
      "jump": "i",
      "offset": [
        2490,
        2495
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13296": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2490,
        2495
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13297": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2489,
        2500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33FA"
    },
    "13300": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2489,
        2500
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13301": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2489,
        2500
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13302": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2489,
        2500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "13305": {
      "fn": "TokenisableRange.sqrt",
      "jump": "i",
      "offset": [
        2489,
        2500
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13306": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2489,
        2500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13307": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2480,
        2500
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13308": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2480,
        2500
      ],
      "op": "POP",
      "path": "1"
    },
    "13309": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2514,
        2515
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 138
    },
    "13310": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2510,
        2515
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13311": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2510,
        2515
      ],
      "op": "POP",
      "path": "1"
    },
    "13312": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2525,
        2602
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13313": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2536,
        2537
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13314": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2532,
        2533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13315": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2532,
        2537
      ],
      "op": "LT",
      "path": "1"
    },
    "13316": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2525,
        2602
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "13317": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2525,
        2602
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3433"
    },
    "13320": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2525,
        2602
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13321": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2557,
        2558
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 139
    },
    "13322": {
      "op": "POP"
    },
    "13323": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2557,
        2558
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13324": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2590,
        2591
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 140,
      "value": "0x2"
    },
    "13326": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2557,
        2558
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13327": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2577,
        2582
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3418"
    },
    "13330": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2557,
        2558
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13331": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2577,
        2578
      ],
      "op": "DUP7",
      "path": "1"
    },
    "13332": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2577,
        2582
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "13335": {
      "fn": "TokenisableRange.sqrt",
      "jump": "i",
      "offset": [
        2577,
        2582
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13336": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2577,
        2582
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13337": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2577,
        2586
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3422"
    },
    "13340": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2577,
        2586
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13341": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2577,
        2586
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13342": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2577,
        2586
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAD"
    },
    "13345": {
      "fn": "TokenisableRange.sqrt",
      "jump": "i",
      "offset": [
        2577,
        2586
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13346": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2577,
        2586
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13347": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2576,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x342C"
    },
    "13350": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2576,
        2591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13351": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2576,
        2591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13352": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2576,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CED"
    },
    "13355": {
      "fn": "TokenisableRange.sqrt",
      "jump": "i",
      "offset": [
        2576,
        2591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13356": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2576,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13357": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2572,
        2591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13358": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2572,
        2591
      ],
      "op": "POP",
      "path": "1"
    },
    "13359": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2525,
        2602
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3400"
    },
    "13362": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2525,
        2602
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13363": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2525,
        2602
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13364": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2470,
        2608
      ],
      "op": "POP",
      "path": "1"
    },
    "13365": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2417,
        2608
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13366": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2417,
        2608
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13367": {
      "fn": "TokenisableRange.sqrt",
      "offset": [
        2417,
        2608
      ],
      "op": "POP",
      "path": "1"
    },
    "13368": {
      "fn": "TokenisableRange.sqrt",
      "jump": "o",
      "offset": [
        2417,
        2608
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13369": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "13370": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x0"
    },
    "13372": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x348E"
    },
    "13375": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "58"
    },
    "13376": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "13378": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "13379": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "58"
    },
    "13380": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "13382": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "58"
    },
    "13383": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "13385": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "13386": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "58"
    },
    "13387": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "13389": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "58"
    },
    "13390": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "13391": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "13393": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "58"
    },
    "13394": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "58",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "13427": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "58"
    },
    "13428": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "13429": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "58"
    },
    "13430": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "58"
    },
    "13431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13437": {
      "op": "SHL"
    },
    "13438": {
      "op": "SUB"
    },
    "13439": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "58"
    },
    "13440": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x35D0"
    },
    "13443": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "13444": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "58"
    },
    "13445": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "13446": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "13447": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "58",
      "value": "0xFFFFFFFF"
    },
    "13452": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "58"
    },
    "13453": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "58"
    },
    "13454": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "13455": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "58"
    },
    "13456": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "13457": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "13458": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "13459": {
      "op": "POP"
    },
    "13460": {
      "branch": 211,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "58"
    },
    "13461": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x3027"
    },
    "13464": {
      "branch": 211,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "58"
    },
    "13465": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "58",
      "statement": 141
    },
    "13466": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "58"
    },
    "13467": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "13469": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "58"
    },
    "13470": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "13471": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "13472": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "58"
    },
    "13473": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "58"
    },
    "13474": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "13475": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x34AC"
    },
    "13478": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "13479": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "13480": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x44EB"
    },
    "13483": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "58"
    },
    "13484": {
      "branch": 212,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "13485": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x3027"
    },
    "13488": {
      "branch": 212,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "58"
    },
    "13489": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "13491": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "13492": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13496": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13498": {
      "op": "SHL"
    },
    "13499": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "58"
    },
    "13500": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "13501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13503": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x4"
    },
    "13505": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "58"
    },
    "13506": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "58"
    },
    "13507": {
      "op": "MSTORE"
    },
    "13508": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "13510": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13512": {
      "op": "DUP3"
    },
    "13513": {
      "op": "ADD"
    },
    "13514": {
      "op": "MSTORE"
    },
    "13515": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "13548": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13550": {
      "op": "DUP3"
    },
    "13551": {
      "op": "ADD"
    },
    "13552": {
      "op": "MSTORE"
    },
    "13553": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "13564": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "13566": {
      "op": "SHL"
    },
    "13567": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13569": {
      "op": "DUP3"
    },
    "13570": {
      "op": "ADD"
    },
    "13571": {
      "op": "MSTORE"
    },
    "13572": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13574": {
      "op": "ADD"
    },
    "13575": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x6F3"
    },
    "13578": {
      "op": "JUMP"
    },
    "13579": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        3837,
        4347
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13580": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        3987,
        4002
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "13582": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4034,
        4047
      ],
      "op": "DUP3",
      "path": "4"
    },
    "13583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13589": {
      "op": "SHL"
    },
    "13590": {
      "op": "SUB"
    },
    "13591": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4018,
        4047
      ],
      "op": "AND",
      "path": "4"
    },
    "13592": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4018,
        4031
      ],
      "op": "DUP5",
      "path": "4"
    },
    "13593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13599": {
      "op": "SHL"
    },
    "13600": {
      "op": "SUB"
    },
    "13601": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4018,
        4047
      ],
      "op": "AND",
      "path": "4"
    },
    "13602": {
      "branch": 209,
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4018,
        4047
      ],
      "op": "GT",
      "path": "4"
    },
    "13603": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4014,
        4124
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "13604": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4014,
        4124
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x352B"
    },
    "13607": {
      "branch": 209,
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4014,
        4124
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "13608": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4095,
        4108
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 142
    },
    "13609": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4095,
        4108
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "13610": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4110,
        4123
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "13611": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4014,
        4124
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13618": {
      "op": "SHL"
    },
    "13619": {
      "op": "SUB"
    },
    "13620": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4154,
        4340
      ],
      "op": "DUP5",
      "path": "4",
      "statement": 143
    },
    "13621": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4154,
        4340
      ],
      "op": "AND",
      "path": "4"
    },
    "13622": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4154,
        4324
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3574"
    },
    "13625": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "13642": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13644": {
      "op": "SHL"
    },
    "13645": {
      "offset": [
        309,
        311
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "13647": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4187,
        4232
      ],
      "op": "DUP6",
      "path": "4"
    },
    "13648": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4187,
        4232
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "13649": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4187,
        4232
      ],
      "op": "SHL",
      "path": "4"
    },
    "13650": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4187,
        4232
      ],
      "op": "AND",
      "path": "4"
    },
    "13651": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4250,
        4279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x355C"
    },
    "13654": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4327,
        4340
      ],
      "op": "DUP8",
      "path": "4"
    },
    "13655": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4250,
        4263
      ],
      "op": "DUP8",
      "path": "4"
    },
    "13656": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4250,
        4279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4508"
    },
    "13659": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "jump": "i",
      "offset": [
        4250,
        4279
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13660": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4250,
        4279
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13667": {
      "op": "SHL"
    },
    "13668": {
      "op": "SUB"
    },
    "13669": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4154,
        4324
      ],
      "op": "AND",
      "path": "4"
    },
    "13670": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4297,
        4310
      ],
      "op": "DUP7",
      "path": "4"
    },
    "13671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13677": {
      "op": "SHL"
    },
    "13678": {
      "op": "SUB"
    },
    "13679": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4154,
        4324
      ],
      "op": "AND",
      "path": "4"
    },
    "13680": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4154,
        4169
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35DF"
    },
    "13683": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "jump": "i",
      "offset": [
        4154,
        4324
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13684": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4154,
        4324
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13685": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4154,
        4340
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x357E"
    },
    "13688": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4154,
        4340
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "13689": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4154,
        4340
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "13690": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4154,
        4340
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3CED"
    },
    "13693": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "jump": "i",
      "offset": [
        4154,
        4340
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13694": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4154,
        4340
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13695": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4135,
        4340
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "13696": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        3837,
        4347
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "13697": {
      "op": "POP"
    },
    "13698": {
      "op": "POP"
    },
    "13699": {
      "op": "POP"
    },
    "13700": {
      "op": "POP"
    },
    "13701": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "jump": "o",
      "offset": [
        3837,
        4347
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13702": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4627,
        5088
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13703": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4777,
        4792
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "13705": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4824,
        4837
      ],
      "op": "DUP3",
      "path": "4"
    },
    "13706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13712": {
      "op": "SHL"
    },
    "13713": {
      "op": "SUB"
    },
    "13714": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4808,
        4837
      ],
      "op": "AND",
      "path": "4"
    },
    "13715": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4808,
        4821
      ],
      "op": "DUP5",
      "path": "4"
    },
    "13716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13722": {
      "op": "SHL"
    },
    "13723": {
      "op": "SUB"
    },
    "13724": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4808,
        4837
      ],
      "op": "AND",
      "path": "4"
    },
    "13725": {
      "branch": 210,
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4808,
        4837
      ],
      "op": "GT",
      "path": "4"
    },
    "13726": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4804,
        4914
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "13727": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4804,
        4914
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35A6"
    },
    "13730": {
      "branch": 210,
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4804,
        4914
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "13731": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4885,
        4898
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 144
    },
    "13732": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4885,
        4898
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "13733": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4900,
        4913
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "13734": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4804,
        4914
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13735": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4944,
        5081
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 145,
      "value": "0x357E"
    },
    "13738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13742": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13744": {
      "op": "SHL"
    },
    "13745": {
      "op": "SUB"
    },
    "13746": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4944,
        5081
      ],
      "op": "DUP4",
      "path": "4"
    },
    "13747": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4944,
        5081
      ],
      "op": "AND",
      "path": "4"
    },
    "13748": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5004,
        5033
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35BD"
    },
    "13751": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5020,
        5033
      ],
      "op": "DUP7",
      "path": "4"
    },
    "13752": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5004,
        5017
      ],
      "op": "DUP7",
      "path": "4"
    },
    "13753": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5004,
        5033
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4508"
    },
    "13756": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "jump": "i",
      "offset": [
        5004,
        5033
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13757": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5004,
        5033
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13764": {
      "op": "SHL"
    },
    "13765": {
      "op": "SUB"
    },
    "13766": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4944,
        5081
      ],
      "op": "AND",
      "path": "4"
    },
    "13767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13769": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13771": {
      "op": "SHL"
    },
    "13772": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        4944,
        4959
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35DF"
    },
    "13775": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "jump": "i",
      "offset": [
        4944,
        5081
      ],
      "op": "JUMP",
      "path": "4"
    },
    "13776": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "13777": {
      "fn": "Address.functionCall",
      "offset": [
        3979,
        3991
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x60"
    },
    "13779": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4062
      ],
      "op": "PUSH2",
      "path": "68",
      "statement": 146,
      "value": "0x357E"
    },
    "13782": {
      "fn": "Address.functionCall",
      "offset": [
        4032,
        4038
      ],
      "op": "DUP5",
      "path": "68"
    },
    "13783": {
      "fn": "Address.functionCall",
      "offset": [
        4040,
        4044
      ],
      "op": "DUP5",
      "path": "68"
    },
    "13784": {
      "fn": "Address.functionCall",
      "offset": [
        4046,
        4047
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "13786": {
      "fn": "Address.functionCall",
      "offset": [
        4049,
        4061
      ],
      "op": "DUP6",
      "path": "68"
    },
    "13787": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4031
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3758"
    },
    "13790": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4010,
        4062
      ],
      "op": "JUMP",
      "path": "68"
    },
    "13791": {
      "fn": "FullMath.mulDiv",
      "offset": [
        745,
        4682
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13792": {
      "fn": "FullMath.mulDiv",
      "offset": [
        857,
        871
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13794": {
      "fn": "FullMath.mulDiv",
      "offset": [
        857,
        871
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13795": {
      "fn": "FullMath.mulDiv",
      "offset": [
        857,
        871
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13798": {
      "op": "NOT"
    },
    "13799": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1364,
        1365
      ],
      "op": "DUP6",
      "path": "3"
    },
    "13800": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1361,
        1362
      ],
      "op": "DUP8",
      "path": "3"
    },
    "13801": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1354,
        1374
      ],
      "op": "MULMOD",
      "path": "3"
    },
    "13802": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1403,
        1404
      ],
      "op": "DUP6",
      "path": "3"
    },
    "13803": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1400,
        1401
      ],
      "op": "DUP8",
      "path": "3"
    },
    "13804": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1396,
        1405
      ],
      "op": "MUL",
      "path": "3"
    },
    "13805": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1387,
        1405
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "13806": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1387,
        1405
      ],
      "op": "POP",
      "path": "3"
    },
    "13807": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1454,
        1459
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13808": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1450,
        1452
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13809": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1447,
        1460
      ],
      "op": "LT",
      "path": "3"
    },
    "13810": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1439,
        1444
      ],
      "op": "DUP4",
      "path": "3"
    },
    "13811": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1435,
        1437
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13812": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1431,
        1445
      ],
      "op": "SUB",
      "path": "3"
    },
    "13813": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1427,
        1461
      ],
      "op": "SUB",
      "path": "3"
    },
    "13814": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1418,
        1461
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "13815": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1418,
        1461
      ],
      "op": "POP",
      "path": "3"
    },
    "13816": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1418,
        1461
      ],
      "op": "POP",
      "path": "3"
    },
    "13817": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1543,
        1548
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13818": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1552,
        1553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13820": {
      "branch": 203,
      "fn": "FullMath.mulDiv",
      "offset": [
        1543,
        1553
      ],
      "op": "SUB",
      "path": "3"
    },
    "13821": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1539,
        1718
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3618"
    },
    "13824": {
      "branch": 203,
      "fn": "FullMath.mulDiv",
      "offset": [
        1539,
        1718
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13825": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1591,
        1592
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 147,
      "value": "0x0"
    },
    "13827": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1577,
        1588
      ],
      "op": "DUP5",
      "path": "3"
    },
    "13828": {
      "branch": 204,
      "fn": "FullMath.mulDiv",
      "offset": [
        1577,
        1592
      ],
      "op": "GT",
      "path": "3"
    },
    "13829": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1569,
        1593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x360D"
    },
    "13832": {
      "branch": 204,
      "fn": "FullMath.mulDiv",
      "offset": [
        1569,
        1593
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13833": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1569,
        1593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13835": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1569,
        1593
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13836": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1569,
        1593
      ],
      "op": "REVERT",
      "path": "3"
    },
    "13837": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1569,
        1593
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13838": {
      "op": "POP"
    },
    "13839": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1644,
        1667
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13840": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1644,
        1667
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13841": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1644,
        1667
      ],
      "op": "DIV",
      "path": "3"
    },
    "13842": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1644,
        1667
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13843": {
      "op": "POP"
    },
    "13844": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1694,
        1707
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 148,
      "value": "0x71A"
    },
    "13847": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1694,
        1707
      ],
      "op": "JUMP",
      "path": "3"
    },
    "13848": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1539,
        1718
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13849": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1845,
        1850
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 149
    },
    "13850": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1831,
        1842
      ],
      "op": "DUP5",
      "path": "3"
    },
    "13851": {
      "branch": 205,
      "fn": "FullMath.mulDiv",
      "offset": [
        1831,
        1850
      ],
      "op": "GT",
      "path": "3"
    },
    "13852": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1823,
        1851
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3624"
    },
    "13855": {
      "branch": 205,
      "fn": "FullMath.mulDiv",
      "offset": [
        1823,
        1851
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13856": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1823,
        1851
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13858": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1823,
        1851
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13859": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1823,
        1851
      ],
      "op": "REVERT",
      "path": "3"
    },
    "13860": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1823,
        1851
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13861": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2128,
        2145
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13863": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2204,
        2215
      ],
      "op": "DUP5",
      "path": "3"
    },
    "13864": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2201,
        2202
      ],
      "op": "DUP7",
      "path": "3"
    },
    "13865": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2198,
        2199
      ],
      "op": "DUP9",
      "path": "3"
    },
    "13866": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2191,
        2216
      ],
      "op": "MULMOD",
      "path": "3"
    },
    "13867": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2376,
        2397
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13868": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2376,
        2397
      ],
      "op": "DUP5",
      "path": "3"
    },
    "13869": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2376,
        2397
      ],
      "op": "SUB",
      "path": "3"
    },
    "13870": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2376,
        2397
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "13871": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2333,
        2353
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13872": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2333,
        2353
      ],
      "op": "GT",
      "path": "3"
    },
    "13873": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2322,
        2354
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13874": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2322,
        2354
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "13875": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2322,
        2354
      ],
      "op": "SUB",
      "path": "3"
    },
    "13876": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2322,
        2354
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "13877": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2178,
        2216
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13878": {
      "op": "POP"
    },
    "13879": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2711,
        2723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13881": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2741,
        2757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3644"
    },
    "13884": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP7",
      "path": "3"
    },
    "13885": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2741,
        2753
      ],
      "op": "NOT",
      "path": "3"
    },
    "13886": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2756,
        2757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "13888": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2741,
        2757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CAD"
    },
    "13891": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        2741,
        2757
      ],
      "op": "JUMP",
      "path": "3"
    },
    "13892": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2741,
        2757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13893": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2726,
        2758
      ],
      "op": "DUP7",
      "path": "3"
    },
    "13894": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2726,
        2758
      ],
      "op": "AND",
      "path": "3"
    },
    "13895": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2852,
        2874
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "13896": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2852,
        2874
      ],
      "op": "DUP7",
      "path": "3"
    },
    "13897": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2852,
        2874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13898": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2852,
        2874
      ],
      "op": "DIV",
      "path": "3"
    },
    "13899": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2852,
        2874
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "13900": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2980,
        2996
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "13901": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2980,
        2996
      ],
      "op": "DUP5",
      "path": "3"
    },
    "13902": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2980,
        2996
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13903": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2980,
        2996
      ],
      "op": "DIV",
      "path": "3"
    },
    "13904": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2980,
        2996
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "13905": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3228,
        3229
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13907": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3224,
        3236
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13908": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3224,
        3236
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13909": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3224,
        3236
      ],
      "op": "SUB",
      "path": "3"
    },
    "13910": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3220,
        3243
      ],
      "op": "DIV",
      "path": "3"
    },
    "13911": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3245,
        3246
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "13913": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3216,
        3247
      ],
      "op": "ADD",
      "path": "3"
    },
    "13914": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3216,
        3247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13915": {
      "op": "POP"
    },
    "13916": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3275,
        3287
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 150,
      "value": "0x3665"
    },
    "13919": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3216,
        3247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13920": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3275,
        3280
      ],
      "op": "DUP5",
      "path": "3"
    },
    "13921": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3275,
        3287
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "13924": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        3275,
        3287
      ],
      "op": "JUMP",
      "path": "3"
    },
    "13925": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3275,
        3287
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13926": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3266,
        3287
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13927": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3266,
        3287
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "13928": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3266,
        3287
      ],
      "op": "OR",
      "path": "3"
    },
    "13929": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3266,
        3287
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "13930": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3621,
        3632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13932": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3636,
        3651
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3676"
    },
    "13935": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3640,
        3651
      ],
      "op": "DUP8",
      "path": "3"
    },
    "13936": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3636,
        3637
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "13938": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3636,
        3651
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "13941": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        3636,
        3651
      ],
      "op": "JUMP",
      "path": "3"
    },
    "13942": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3636,
        3651
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13943": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3655,
        3656
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "13945": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3635,
        3656
      ],
      "op": "XOR",
      "path": "3"
    },
    "13946": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3635,
        3656
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13947": {
      "op": "POP"
    },
    "13948": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3882,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 151,
      "value": "0x3685"
    },
    "13951": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3635,
        3656
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13952": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3882,
        3893
      ],
      "op": "DUP9",
      "path": "3"
    },
    "13953": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3882,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "13956": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        3882,
        3899
      ],
      "op": "JUMP",
      "path": "3"
    },
    "13957": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3882,
        3899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13958": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3878,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3690"
    },
    "13961": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3878,
        3899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13962": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3878,
        3879
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "13964": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3878,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E74"
    },
    "13967": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        3878,
        3899
      ],
      "op": "JUMP",
      "path": "3"
    },
    "13968": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3878,
        3899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13969": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3871,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x369A"
    },
    "13972": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3871,
        3899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13973": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3871,
        3899
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13974": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3871,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "13977": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        3871,
        3899
      ],
      "op": "JUMP",
      "path": "3"
    },
    "13978": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3871,
        3899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13979": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3871,
        3899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13980": {
      "op": "POP"
    },
    "13981": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3940,
        3957
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 152,
      "value": "0x36A6"
    },
    "13984": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3871,
        3899
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13985": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3940,
        3951
      ],
      "op": "DUP9",
      "path": "3"
    },
    "13986": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3940,
        3957
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "13989": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        3940,
        3957
      ],
      "op": "JUMP",
      "path": "3"
    },
    "13990": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3940,
        3957
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13991": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3936,
        3957
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36B1"
    },
    "13994": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3936,
        3957
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13995": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3936,
        3937
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "13997": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3936,
        3957
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E74"
    },
    "14000": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        3936,
        3957
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14001": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3936,
        3957
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14002": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3929,
        3957
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36BB"
    },
    "14005": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3929,
        3957
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14006": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3929,
        3957
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14007": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3929,
        3957
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "14010": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        3929,
        3957
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14011": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3929,
        3957
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14012": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3929,
        3957
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14013": {
      "op": "POP"
    },
    "14014": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3999,
        4016
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 153,
      "value": "0x36C7"
    },
    "14017": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3929,
        3957
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14018": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3999,
        4010
      ],
      "op": "DUP9",
      "path": "3"
    },
    "14019": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3999,
        4016
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "14022": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        3999,
        4016
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14023": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3999,
        4016
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14024": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3995,
        4016
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36D2"
    },
    "14027": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3995,
        4016
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14028": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3995,
        3996
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "14030": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3995,
        4016
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E74"
    },
    "14033": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        3995,
        4016
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14034": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3995,
        4016
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14035": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3988,
        4016
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36DC"
    },
    "14038": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3988,
        4016
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14039": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3988,
        4016
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14040": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3988,
        4016
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "14043": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        3988,
        4016
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14044": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3988,
        4016
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14045": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3988,
        4016
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14046": {
      "op": "POP"
    },
    "14047": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4058,
        4075
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 154,
      "value": "0x36E8"
    },
    "14050": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3988,
        4016
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14051": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4058,
        4069
      ],
      "op": "DUP9",
      "path": "3"
    },
    "14052": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4058,
        4075
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "14055": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        4058,
        4075
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14056": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4058,
        4075
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14057": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4054,
        4075
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36F3"
    },
    "14060": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4054,
        4075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14061": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4054,
        4055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "14063": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4054,
        4075
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E74"
    },
    "14066": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        4054,
        4075
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14067": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4054,
        4075
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14068": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4047,
        4075
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36FD"
    },
    "14071": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4047,
        4075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14072": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4047,
        4075
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14073": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4047,
        4075
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "14076": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        4047,
        4075
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14077": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4047,
        4075
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14078": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4047,
        4075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14079": {
      "op": "POP"
    },
    "14080": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4117,
        4134
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 155,
      "value": "0x3709"
    },
    "14083": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4047,
        4075
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14084": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4117,
        4128
      ],
      "op": "DUP9",
      "path": "3"
    },
    "14085": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4117,
        4134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "14088": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        4117,
        4134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14089": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4117,
        4134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14090": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4113,
        4134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3714"
    },
    "14093": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4113,
        4134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14094": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4113,
        4114
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "14096": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4113,
        4134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E74"
    },
    "14099": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        4113,
        4134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14100": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4113,
        4134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14101": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4106,
        4134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x371E"
    },
    "14104": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4106,
        4134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14105": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4106,
        4134
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14106": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4106,
        4134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "14109": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        4106,
        4134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14110": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4106,
        4134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14111": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4106,
        4134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14112": {
      "op": "POP"
    },
    "14113": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4177,
        4194
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 156,
      "value": "0x372A"
    },
    "14116": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4106,
        4134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14117": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4177,
        4188
      ],
      "op": "DUP9",
      "path": "3"
    },
    "14118": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4177,
        4194
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "14121": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        4177,
        4194
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14122": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4177,
        4194
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14123": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4173,
        4194
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3735"
    },
    "14126": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4173,
        4194
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14127": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4173,
        4174
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "14129": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4173,
        4194
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E74"
    },
    "14132": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        4173,
        4194
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14133": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4173,
        4194
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14134": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4166,
        4194
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x373F"
    },
    "14137": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4166,
        4194
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14138": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4166,
        4194
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14139": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4166,
        4194
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "14142": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        4166,
        4194
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14143": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4166,
        4194
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14144": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4166,
        4194
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14145": {
      "op": "POP"
    },
    "14146": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4641,
        4652
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 157,
      "value": "0x374B"
    },
    "14149": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4166,
        4194
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14150": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4641,
        4646
      ],
      "op": "DUP7",
      "path": "3"
    },
    "14151": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4641,
        4652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC0"
    },
    "14154": {
      "fn": "FullMath.mulDiv",
      "jump": "i",
      "offset": [
        4641,
        4652
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14155": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4641,
        4652
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14156": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4632,
        4652
      ],
      "op": "SWAP10",
      "path": "3"
    },
    "14157": {
      "fn": "FullMath.mulDiv",
      "offset": [
        745,
        4682
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "14158": {
      "op": "POP"
    },
    "14159": {
      "op": "POP"
    },
    "14160": {
      "op": "POP"
    },
    "14161": {
      "op": "POP"
    },
    "14162": {
      "op": "POP"
    },
    "14163": {
      "op": "POP"
    },
    "14164": {
      "op": "POP"
    },
    "14165": {
      "op": "POP"
    },
    "14166": {
      "op": "POP"
    },
    "14167": {
      "fn": "FullMath.mulDiv",
      "jump": "o",
      "offset": [
        745,
        4682
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14168": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4933,
        5432
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "14169": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5098,
        5110
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x60"
    },
    "14171": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5155,
        5160
      ],
      "op": "DUP3",
      "path": "68",
      "statement": 158
    },
    "14172": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5151
      ],
      "op": "SELFBALANCE",
      "path": "68"
    },
    "14173": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5160
      ],
      "op": "LT",
      "path": "68"
    },
    "14174": {
      "branch": 190,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5160
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "14175": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x37B9"
    },
    "14178": {
      "branch": 190,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "14179": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "14181": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "14182": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14186": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14188": {
      "op": "SHL"
    },
    "14189": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "DUP2",
      "path": "68"
    },
    "14190": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "14191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14193": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "14195": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "DUP3",
      "path": "68"
    },
    "14196": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "ADD",
      "path": "68"
    },
    "14197": {
      "op": "MSTORE"
    },
    "14198": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "14200": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14202": {
      "op": "DUP3"
    },
    "14203": {
      "op": "ADD"
    },
    "14204": {
      "op": "MSTORE"
    },
    "14205": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "14238": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14240": {
      "op": "DUP3"
    },
    "14241": {
      "op": "ADD"
    },
    "14242": {
      "op": "MSTORE"
    },
    "14243": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "14250": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "14252": {
      "op": "SHL"
    },
    "14253": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14255": {
      "op": "DUP3"
    },
    "14256": {
      "op": "ADD"
    },
    "14257": {
      "op": "MSTORE"
    },
    "14258": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14260": {
      "op": "ADD"
    },
    "14261": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x6F3"
    },
    "14264": {
      "op": "JUMP"
    },
    "14265": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "14266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14272": {
      "op": "SHL"
    },
    "14273": {
      "op": "SUB"
    },
    "14274": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "DUP6",
      "path": "68",
      "statement": 159
    },
    "14275": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "AND",
      "path": "68"
    },
    "14276": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "EXTCODESIZE",
      "path": "68"
    },
    "14277": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH2",
      "path": "68",
      "statement": 160,
      "value": "0x3810"
    },
    "14280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "14281": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "14283": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "14284": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14288": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14290": {
      "op": "SHL"
    },
    "14291": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "DUP2",
      "path": "68"
    },
    "14292": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "14293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14295": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "14297": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "DUP3",
      "path": "68"
    },
    "14298": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "ADD",
      "path": "68"
    },
    "14299": {
      "op": "MSTORE"
    },
    "14300": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "14302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14304": {
      "op": "DUP3"
    },
    "14305": {
      "op": "ADD"
    },
    "14306": {
      "op": "MSTORE"
    },
    "14307": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "14340": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14342": {
      "op": "DUP3"
    },
    "14343": {
      "op": "ADD"
    },
    "14344": {
      "op": "MSTORE"
    },
    "14345": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14347": {
      "op": "ADD"
    },
    "14348": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x6F3"
    },
    "14351": {
      "op": "JUMP"
    },
    "14352": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "14353": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5285,
        5297
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "14355": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5322
      ],
      "op": "DUP1",
      "path": "68"
    },
    "14356": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5332
      ],
      "op": "DUP7",
      "path": "68"
    },
    "14357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14363": {
      "op": "SHL"
    },
    "14364": {
      "op": "SUB"
    },
    "14365": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5337
      ],
      "op": "AND",
      "path": "68"
    },
    "14366": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5345,
        5350
      ],
      "op": "DUP6",
      "path": "68"
    },
    "14367": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5352,
        5356
      ],
      "op": "DUP8",
      "path": "68"
    },
    "14368": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "14370": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "14371": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x382C"
    },
    "14374": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "14375": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "14376": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x4528"
    },
    "14379": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMP",
      "path": "68"
    },
    "14380": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "14381": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "14383": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "14385": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "14386": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP1",
      "path": "68"
    },
    "14387": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP4",
      "path": "68"
    },
    "14388": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SUB",
      "path": "68"
    },
    "14389": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP2",
      "path": "68"
    },
    "14390": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP6",
      "path": "68"
    },
    "14391": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP8",
      "path": "68"
    },
    "14392": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "GAS",
      "path": "68"
    },
    "14393": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "CALL",
      "path": "68"
    },
    "14394": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP3",
      "path": "68"
    },
    "14395": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "14396": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "14397": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "14398": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "14399": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP1",
      "path": "68"
    },
    "14400": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "14402": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP2",
      "path": "68"
    },
    "14403": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "EQ",
      "path": "68"
    },
    "14404": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3869"
    },
    "14407": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "14408": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "14410": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "14411": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "14412": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "14413": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "14415": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "NOT",
      "path": "68"
    },
    "14416": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x3F"
    },
    "14418": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "14419": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "68"
    },
    "14420": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "AND",
      "path": "68"
    },
    "14421": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP3",
      "path": "68"
    },
    "14422": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "68"
    },
    "14423": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "14425": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "14426": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "14427": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP3",
      "path": "68"
    },
    "14428": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "14429": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "14430": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "14432": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "14434": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP5",
      "path": "68"
    },
    "14435": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "68"
    },
    "14436": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "14437": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x386E"
    },
    "14440": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMP",
      "path": "68"
    },
    "14441": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "14442": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x60"
    },
    "14444": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "14445": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "14446": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "14447": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "14448": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "14449": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "14450": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "14451": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "14452": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5425
      ],
      "op": "PUSH2",
      "path": "68",
      "statement": 161,
      "value": "0x387E"
    },
    "14455": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5391,
        5398
      ],
      "op": "DUP3",
      "path": "68"
    },
    "14456": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5400,
        5410
      ],
      "op": "DUP3",
      "path": "68"
    },
    "14457": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5412,
        5424
      ],
      "op": "DUP7",
      "path": "68"
    },
    "14458": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5390
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3889"
    },
    "14461": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5374,
        5425
      ],
      "op": "JUMP",
      "path": "68"
    },
    "14462": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5425
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "14463": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5425
      ],
      "op": "SWAP8",
      "path": "68"
    },
    "14464": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4933,
        5432
      ],
      "op": "SWAP7",
      "path": "68"
    },
    "14465": {
      "op": "POP"
    },
    "14466": {
      "op": "POP"
    },
    "14467": {
      "op": "POP"
    },
    "14468": {
      "op": "POP"
    },
    "14469": {
      "op": "POP"
    },
    "14470": {
      "op": "POP"
    },
    "14471": {
      "op": "POP"
    },
    "14472": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4933,
        5432
      ],
      "op": "JUMP",
      "path": "68"
    },
    "14473": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7546,
        8238
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "14474": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7692,
        7704
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x60"
    },
    "14476": {
      "branch": 191,
      "fn": "Address.verifyCallResult",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "68"
    },
    "14477": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "14478": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3898"
    },
    "14481": {
      "branch": 191,
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "14482": {
      "op": "POP"
    },
    "14483": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7750,
        7760
      ],
      "op": "DUP2",
      "path": "68",
      "statement": 162
    },
    "14484": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7743,
        7760
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x71A"
    },
    "14487": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7743,
        7760
      ],
      "op": "JUMP",
      "path": "68"
    },
    "14488": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "14489": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7878
      ],
      "op": "DUP3",
      "path": "68"
    },
    "14490": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7878
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "14491": {
      "branch": 192,
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7882
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "14492": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x38A8"
    },
    "14495": {
      "branch": 192,
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "14496": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8055,
        8065
      ],
      "op": "DUP3",
      "path": "68"
    },
    "14497": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8049,
        8066
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "14498": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8115,
        8130
      ],
      "op": "DUP1",
      "path": "68"
    },
    "14499": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8112
      ],
      "op": "DUP5",
      "path": "68"
    },
    "14500": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8098,
        8100
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "14502": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8094,
        8113
      ],
      "op": "ADD",
      "path": "68"
    },
    "14503": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8087,
        8131
      ],
      "op": "REVERT",
      "path": "68"
    },
    "14504": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "14505": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8194,
        8206
      ],
      "op": "DUP2",
      "path": "68",
      "statement": 163
    },
    "14506": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "14508": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "14509": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14513": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14515": {
      "op": "SHL"
    },
    "14516": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "DUP2",
      "path": "68"
    },
    "14517": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "14518": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "14520": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "ADD",
      "path": "68"
    },
    "14521": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x6F3"
    },
    "14524": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "14525": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "14526": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x38E6"
    },
    "14529": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8187,
        8207
      ],
      "op": "JUMP",
      "path": "68"
    },
    "14530": {
      "op": "JUMPDEST"
    },
    "14531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14533": {
      "op": "JUMPDEST"
    },
    "14534": {
      "op": "DUP4"
    },
    "14535": {
      "op": "DUP2"
    },
    "14536": {
      "op": "LT"
    },
    "14537": {
      "op": "ISZERO"
    },
    "14538": {
      "op": "PUSH2",
      "value": "0x38DD"
    },
    "14541": {
      "op": "JUMPI"
    },
    "14542": {
      "op": "DUP2"
    },
    "14543": {
      "op": "DUP2"
    },
    "14544": {
      "op": "ADD"
    },
    "14545": {
      "op": "MLOAD"
    },
    "14546": {
      "op": "DUP4"
    },
    "14547": {
      "op": "DUP3"
    },
    "14548": {
      "op": "ADD"
    },
    "14549": {
      "op": "MSTORE"
    },
    "14550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14552": {
      "op": "ADD"
    },
    "14553": {
      "op": "PUSH2",
      "value": "0x38C5"
    },
    "14556": {
      "op": "JUMP"
    },
    "14557": {
      "op": "JUMPDEST"
    },
    "14558": {
      "op": "POP"
    },
    "14559": {
      "op": "POP"
    },
    "14560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14562": {
      "op": "SWAP2"
    },
    "14563": {
      "op": "ADD"
    },
    "14564": {
      "op": "MSTORE"
    },
    "14565": {
      "jump": "o",
      "op": "JUMP"
    },
    "14566": {
      "op": "JUMPDEST"
    },
    "14567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14569": {
      "op": "DUP2"
    },
    "14570": {
      "op": "MSTORE"
    },
    "14571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14573": {
      "op": "DUP3"
    },
    "14574": {
      "op": "MLOAD"
    },
    "14575": {
      "op": "DUP1"
    },
    "14576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14578": {
      "op": "DUP5"
    },
    "14579": {
      "op": "ADD"
    },
    "14580": {
      "op": "MSTORE"
    },
    "14581": {
      "op": "PUSH2",
      "value": "0x3905"
    },
    "14584": {
      "op": "DUP2"
    },
    "14585": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14587": {
      "op": "DUP6"
    },
    "14588": {
      "op": "ADD"
    },
    "14589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14591": {
      "op": "DUP8"
    },
    "14592": {
      "op": "ADD"
    },
    "14593": {
      "op": "PUSH2",
      "value": "0x38C2"
    },
    "14596": {
      "jump": "i",
      "op": "JUMP"
    },
    "14597": {
      "op": "JUMPDEST"
    },
    "14598": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14600": {
      "op": "ADD"
    },
    "14601": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14603": {
      "op": "NOT"
    },
    "14604": {
      "op": "AND"
    },
    "14605": {
      "op": "SWAP2"
    },
    "14606": {
      "op": "SWAP1"
    },
    "14607": {
      "op": "SWAP2"
    },
    "14608": {
      "op": "ADD"
    },
    "14609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14611": {
      "op": "ADD"
    },
    "14612": {
      "op": "SWAP3"
    },
    "14613": {
      "op": "SWAP2"
    },
    "14614": {
      "op": "POP"
    },
    "14615": {
      "op": "POP"
    },
    "14616": {
      "jump": "o",
      "op": "JUMP"
    },
    "14617": {
      "op": "JUMPDEST"
    },
    "14618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14624": {
      "op": "SHL"
    },
    "14625": {
      "op": "SUB"
    },
    "14626": {
      "op": "DUP2"
    },
    "14627": {
      "op": "AND"
    },
    "14628": {
      "op": "DUP2"
    },
    "14629": {
      "op": "EQ"
    },
    "14630": {
      "op": "PUSH2",
      "value": "0x392E"
    },
    "14633": {
      "op": "JUMPI"
    },
    "14634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14636": {
      "op": "DUP1"
    },
    "14637": {
      "op": "REVERT"
    },
    "14638": {
      "op": "JUMPDEST"
    },
    "14639": {
      "op": "POP"
    },
    "14640": {
      "jump": "o",
      "op": "JUMP"
    },
    "14641": {
      "op": "JUMPDEST"
    },
    "14642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14644": {
      "op": "DUP1"
    },
    "14645": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14647": {
      "op": "DUP4"
    },
    "14648": {
      "op": "DUP6"
    },
    "14649": {
      "op": "SUB"
    },
    "14650": {
      "op": "SLT"
    },
    "14651": {
      "op": "ISZERO"
    },
    "14652": {
      "op": "PUSH2",
      "value": "0x3944"
    },
    "14655": {
      "op": "JUMPI"
    },
    "14656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14658": {
      "op": "DUP1"
    },
    "14659": {
      "op": "REVERT"
    },
    "14660": {
      "op": "JUMPDEST"
    },
    "14661": {
      "op": "DUP3"
    },
    "14662": {
      "op": "CALLDATALOAD"
    },
    "14663": {
      "op": "PUSH2",
      "value": "0x394F"
    },
    "14666": {
      "op": "DUP2"
    },
    "14667": {
      "op": "PUSH2",
      "value": "0x3919"
    },
    "14670": {
      "jump": "i",
      "op": "JUMP"
    },
    "14671": {
      "op": "JUMPDEST"
    },
    "14672": {
      "op": "SWAP5"
    },
    "14673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14675": {
      "op": "SWAP4"
    },
    "14676": {
      "op": "SWAP1"
    },
    "14677": {
      "op": "SWAP4"
    },
    "14678": {
      "op": "ADD"
    },
    "14679": {
      "op": "CALLDATALOAD"
    },
    "14680": {
      "op": "SWAP4"
    },
    "14681": {
      "op": "POP"
    },
    "14682": {
      "op": "POP"
    },
    "14683": {
      "op": "POP"
    },
    "14684": {
      "jump": "o",
      "op": "JUMP"
    },
    "14685": {
      "op": "JUMPDEST"
    },
    "14686": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14691": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14693": {
      "op": "SHL"
    },
    "14694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14696": {
      "op": "MSTORE"
    },
    "14697": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "14699": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14701": {
      "op": "MSTORE"
    },
    "14702": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14706": {
      "op": "REVERT"
    },
    "14707": {
      "op": "JUMPDEST"
    },
    "14708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14710": {
      "op": "DUP2"
    },
    "14711": {
      "op": "ADD"
    },
    "14712": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "14714": {
      "op": "DUP4"
    },
    "14715": {
      "op": "LT"
    },
    "14716": {
      "op": "PUSH2",
      "value": "0x3995"
    },
    "14719": {
      "op": "JUMPI"
    },
    "14720": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14725": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14727": {
      "op": "SHL"
    },
    "14728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14730": {
      "op": "MSTORE"
    },
    "14731": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "14733": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14735": {
      "op": "MSTORE"
    },
    "14736": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14740": {
      "op": "REVERT"
    },
    "14741": {
      "op": "JUMPDEST"
    },
    "14742": {
      "op": "SWAP2"
    },
    "14743": {
      "op": "SWAP1"
    },
    "14744": {
      "op": "MSTORE"
    },
    "14745": {
      "op": "SWAP1"
    },
    "14746": {
      "jump": "o",
      "op": "JUMP"
    },
    "14747": {
      "op": "JUMPDEST"
    },
    "14748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14750": {
      "op": "DUP1"
    },
    "14751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14753": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14755": {
      "op": "DUP5"
    },
    "14756": {
      "op": "DUP7"
    },
    "14757": {
      "op": "SUB"
    },
    "14758": {
      "op": "SLT"
    },
    "14759": {
      "op": "ISZERO"
    },
    "14760": {
      "op": "PUSH2",
      "value": "0x39B0"
    },
    "14763": {
      "op": "JUMPI"
    },
    "14764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14766": {
      "op": "DUP1"
    },
    "14767": {
      "op": "REVERT"
    },
    "14768": {
      "op": "JUMPDEST"
    },
    "14769": {
      "op": "DUP4"
    },
    "14770": {
      "op": "CALLDATALOAD"
    },
    "14771": {
      "op": "PUSH2",
      "value": "0x39BB"
    },
    "14774": {
      "op": "DUP2"
    },
    "14775": {
      "op": "PUSH2",
      "value": "0x3919"
    },
    "14778": {
      "jump": "i",
      "op": "JUMP"
    },
    "14779": {
      "op": "JUMPDEST"
    },
    "14780": {
      "op": "SWAP3"
    },
    "14781": {
      "op": "POP"
    },
    "14782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14784": {
      "op": "DUP5"
    },
    "14785": {
      "op": "ADD"
    },
    "14786": {
      "op": "CALLDATALOAD"
    },
    "14787": {
      "op": "PUSH2",
      "value": "0x39CB"
    },
    "14790": {
      "op": "DUP2"
    },
    "14791": {
      "op": "PUSH2",
      "value": "0x3919"
    },
    "14794": {
      "jump": "i",
      "op": "JUMP"
    },
    "14795": {
      "op": "JUMPDEST"
    },
    "14796": {
      "op": "SWAP3"
    },
    "14797": {
      "op": "SWAP6"
    },
    "14798": {
      "op": "SWAP3"
    },
    "14799": {
      "op": "SWAP5"
    },
    "14800": {
      "op": "POP"
    },
    "14801": {
      "op": "POP"
    },
    "14802": {
      "op": "POP"
    },
    "14803": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14805": {
      "op": "SWAP2"
    },
    "14806": {
      "op": "SWAP1"
    },
    "14807": {
      "op": "SWAP2"
    },
    "14808": {
      "op": "ADD"
    },
    "14809": {
      "op": "CALLDATALOAD"
    },
    "14810": {
      "op": "SWAP1"
    },
    "14811": {
      "jump": "o",
      "op": "JUMP"
    },
    "14812": {
      "op": "JUMPDEST"
    },
    "14813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14817": {
      "op": "DUP3"
    },
    "14818": {
      "op": "DUP5"
    },
    "14819": {
      "op": "SUB"
    },
    "14820": {
      "op": "SLT"
    },
    "14821": {
      "op": "ISZERO"
    },
    "14822": {
      "op": "PUSH2",
      "value": "0x39EE"
    },
    "14825": {
      "op": "JUMPI"
    },
    "14826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14828": {
      "op": "DUP1"
    },
    "14829": {
      "op": "REVERT"
    },
    "14830": {
      "op": "JUMPDEST"
    },
    "14831": {
      "op": "POP"
    },
    "14832": {
      "op": "CALLDATALOAD"
    },
    "14833": {
      "op": "SWAP2"
    },
    "14834": {
      "op": "SWAP1"
    },
    "14835": {
      "op": "POP"
    },
    "14836": {
      "jump": "o",
      "op": "JUMP"
    },
    "14837": {
      "op": "JUMPDEST"
    },
    "14838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14840": {
      "op": "DUP1"
    },
    "14841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14843": {
      "op": "DUP4"
    },
    "14844": {
      "op": "DUP6"
    },
    "14845": {
      "op": "SUB"
    },
    "14846": {
      "op": "SLT"
    },
    "14847": {
      "op": "ISZERO"
    },
    "14848": {
      "op": "PUSH2",
      "value": "0x3A08"
    },
    "14851": {
      "op": "JUMPI"
    },
    "14852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14854": {
      "op": "DUP1"
    },
    "14855": {
      "op": "REVERT"
    },
    "14856": {
      "op": "JUMPDEST"
    },
    "14857": {
      "op": "POP"
    },
    "14858": {
      "op": "POP"
    },
    "14859": {
      "op": "DUP1"
    },
    "14860": {
      "op": "CALLDATALOAD"
    },
    "14861": {
      "op": "SWAP3"
    },
    "14862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14864": {
      "op": "SWAP1"
    },
    "14865": {
      "op": "SWAP2"
    },
    "14866": {
      "op": "ADD"
    },
    "14867": {
      "op": "CALLDATALOAD"
    },
    "14868": {
      "op": "SWAP2"
    },
    "14869": {
      "op": "POP"
    },
    "14870": {
      "jump": "o",
      "op": "JUMP"
    },
    "14871": {
      "op": "JUMPDEST"
    },
    "14872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14876": {
      "op": "DUP3"
    },
    "14877": {
      "op": "DUP5"
    },
    "14878": {
      "op": "SUB"
    },
    "14879": {
      "op": "SLT"
    },
    "14880": {
      "op": "ISZERO"
    },
    "14881": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "14884": {
      "op": "JUMPI"
    },
    "14885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14887": {
      "op": "DUP1"
    },
    "14888": {
      "op": "REVERT"
    },
    "14889": {
      "op": "JUMPDEST"
    },
    "14890": {
      "op": "DUP2"
    },
    "14891": {
      "op": "CALLDATALOAD"
    },
    "14892": {
      "op": "PUSH2",
      "value": "0x71A"
    },
    "14895": {
      "op": "DUP2"
    },
    "14896": {
      "op": "PUSH2",
      "value": "0x3919"
    },
    "14899": {
      "jump": "i",
      "op": "JUMP"
    },
    "14900": {
      "op": "JUMPDEST"
    },
    "14901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14903": {
      "op": "DUP1"
    },
    "14904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14906": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14908": {
      "op": "DUP5"
    },
    "14909": {
      "op": "DUP7"
    },
    "14910": {
      "op": "SUB"
    },
    "14911": {
      "op": "SLT"
    },
    "14912": {
      "op": "ISZERO"
    },
    "14913": {
      "op": "PUSH2",
      "value": "0x3A49"
    },
    "14916": {
      "op": "JUMPI"
    },
    "14917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14919": {
      "op": "DUP1"
    },
    "14920": {
      "op": "REVERT"
    },
    "14921": {
      "op": "JUMPDEST"
    },
    "14922": {
      "op": "POP"
    },
    "14923": {
      "op": "POP"
    },
    "14924": {
      "op": "DUP2"
    },
    "14925": {
      "op": "CALLDATALOAD"
    },
    "14926": {
      "op": "SWAP4"
    },
    "14927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14929": {
      "op": "DUP4"
    },
    "14930": {
      "op": "ADD"
    },
    "14931": {
      "op": "CALLDATALOAD"
    },
    "14932": {
      "op": "SWAP4"
    },
    "14933": {
      "op": "POP"
    },
    "14934": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14936": {
      "op": "SWAP1"
    },
    "14937": {
      "op": "SWAP3"
    },
    "14938": {
      "op": "ADD"
    },
    "14939": {
      "op": "CALLDATALOAD"
    },
    "14940": {
      "op": "SWAP2"
    },
    "14941": {
      "op": "SWAP1"
    },
    "14942": {
      "op": "POP"
    },
    "14943": {
      "jump": "o",
      "op": "JUMP"
    },
    "14944": {
      "op": "JUMPDEST"
    },
    "14945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14949": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14951": {
      "op": "SHL"
    },
    "14952": {
      "op": "SUB"
    },
    "14953": {
      "op": "DUP2"
    },
    "14954": {
      "op": "AND"
    },
    "14955": {
      "op": "DUP2"
    },
    "14956": {
      "op": "EQ"
    },
    "14957": {
      "op": "PUSH2",
      "value": "0x392E"
    },
    "14960": {
      "op": "JUMPI"
    },
    "14961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14963": {
      "op": "DUP1"
    },
    "14964": {
      "op": "REVERT"
    },
    "14965": {
      "op": "JUMPDEST"
    },
    "14966": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14971": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14973": {
      "op": "SHL"
    },
    "14974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14976": {
      "op": "MSTORE"
    },
    "14977": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "14979": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14981": {
      "op": "MSTORE"
    },
    "14982": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14986": {
      "op": "REVERT"
    },
    "14987": {
      "op": "JUMPDEST"
    },
    "14988": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14990": {
      "op": "MLOAD"
    },
    "14991": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14993": {
      "op": "DUP3"
    },
    "14994": {
      "op": "ADD"
    },
    "14995": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14997": {
      "op": "NOT"
    },
    "14998": {
      "op": "AND"
    },
    "14999": {
      "op": "DUP2"
    },
    "15000": {
      "op": "ADD"
    },
    "15001": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15010": {
      "op": "DUP2"
    },
    "15011": {
      "op": "GT"
    },
    "15012": {
      "op": "DUP3"
    },
    "15013": {
      "op": "DUP3"
    },
    "15014": {
      "op": "LT"
    },
    "15015": {
      "op": "OR"
    },
    "15016": {
      "op": "ISZERO"
    },
    "15017": {
      "op": "PUSH2",
      "value": "0x3AB4"
    },
    "15020": {
      "op": "JUMPI"
    },
    "15021": {
      "op": "PUSH2",
      "value": "0x3AB4"
    },
    "15024": {
      "op": "PUSH2",
      "value": "0x3A75"
    },
    "15027": {
      "jump": "i",
      "op": "JUMP"
    },
    "15028": {
      "op": "JUMPDEST"
    },
    "15029": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15031": {
      "op": "MSTORE"
    },
    "15032": {
      "op": "SWAP2"
    },
    "15033": {
      "op": "SWAP1"
    },
    "15034": {
      "op": "POP"
    },
    "15035": {
      "jump": "o",
      "op": "JUMP"
    },
    "15036": {
      "op": "JUMPDEST"
    },
    "15037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15039": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15048": {
      "op": "DUP3"
    },
    "15049": {
      "op": "GT"
    },
    "15050": {
      "op": "ISZERO"
    },
    "15051": {
      "op": "PUSH2",
      "value": "0x3AD6"
    },
    "15054": {
      "op": "JUMPI"
    },
    "15055": {
      "op": "PUSH2",
      "value": "0x3AD6"
    },
    "15058": {
      "op": "PUSH2",
      "value": "0x3A75"
    },
    "15061": {
      "jump": "i",
      "op": "JUMP"
    },
    "15062": {
      "op": "JUMPDEST"
    },
    "15063": {
      "op": "POP"
    },
    "15064": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15066": {
      "op": "ADD"
    },
    "15067": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15069": {
      "op": "NOT"
    },
    "15070": {
      "op": "AND"
    },
    "15071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15073": {
      "op": "ADD"
    },
    "15074": {
      "op": "SWAP1"
    },
    "15075": {
      "jump": "o",
      "op": "JUMP"
    },
    "15076": {
      "op": "JUMPDEST"
    },
    "15077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15079": {
      "op": "DUP3"
    },
    "15080": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15082": {
      "op": "DUP4"
    },
    "15083": {
      "op": "ADD"
    },
    "15084": {
      "op": "SLT"
    },
    "15085": {
      "op": "PUSH2",
      "value": "0x3AF5"
    },
    "15088": {
      "op": "JUMPI"
    },
    "15089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15091": {
      "op": "DUP1"
    },
    "15092": {
      "op": "REVERT"
    },
    "15093": {
      "op": "JUMPDEST"
    },
    "15094": {
      "op": "DUP2"
    },
    "15095": {
      "op": "CALLDATALOAD"
    },
    "15096": {
      "op": "PUSH2",
      "value": "0x3B08"
    },
    "15099": {
      "op": "PUSH2",
      "value": "0x3B03"
    },
    "15102": {
      "op": "DUP3"
    },
    "15103": {
      "op": "PUSH2",
      "value": "0x3ABC"
    },
    "15106": {
      "jump": "i",
      "op": "JUMP"
    },
    "15107": {
      "op": "JUMPDEST"
    },
    "15108": {
      "op": "PUSH2",
      "value": "0x3A8B"
    },
    "15111": {
      "jump": "i",
      "op": "JUMP"
    },
    "15112": {
      "op": "JUMPDEST"
    },
    "15113": {
      "op": "DUP2"
    },
    "15114": {
      "op": "DUP2"
    },
    "15115": {
      "op": "MSTORE"
    },
    "15116": {
      "op": "DUP5"
    },
    "15117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15119": {
      "op": "DUP4"
    },
    "15120": {
      "op": "DUP7"
    },
    "15121": {
      "op": "ADD"
    },
    "15122": {
      "op": "ADD"
    },
    "15123": {
      "op": "GT"
    },
    "15124": {
      "op": "ISZERO"
    },
    "15125": {
      "op": "PUSH2",
      "value": "0x3B1D"
    },
    "15128": {
      "op": "JUMPI"
    },
    "15129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15131": {
      "op": "DUP1"
    },
    "15132": {
      "op": "REVERT"
    },
    "15133": {
      "op": "JUMPDEST"
    },
    "15134": {
      "op": "DUP2"
    },
    "15135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15137": {
      "op": "DUP6"
    },
    "15138": {
      "op": "ADD"
    },
    "15139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15141": {
      "op": "DUP4"
    },
    "15142": {
      "op": "ADD"
    },
    "15143": {
      "op": "CALLDATACOPY"
    },
    "15144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15146": {
      "op": "SWAP2"
    },
    "15147": {
      "op": "DUP2"
    },
    "15148": {
      "op": "ADD"
    },
    "15149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15151": {
      "op": "ADD"
    },
    "15152": {
      "op": "SWAP2"
    },
    "15153": {
      "op": "SWAP1"
    },
    "15154": {
      "op": "SWAP2"
    },
    "15155": {
      "op": "MSTORE"
    },
    "15156": {
      "op": "SWAP4"
    },
    "15157": {
      "op": "SWAP3"
    },
    "15158": {
      "op": "POP"
    },
    "15159": {
      "op": "POP"
    },
    "15160": {
      "op": "POP"
    },
    "15161": {
      "jump": "o",
      "op": "JUMP"
    },
    "15162": {
      "op": "JUMPDEST"
    },
    "15163": {
      "op": "DUP1"
    },
    "15164": {
      "op": "ISZERO"
    },
    "15165": {
      "op": "ISZERO"
    },
    "15166": {
      "op": "DUP2"
    },
    "15167": {
      "op": "EQ"
    },
    "15168": {
      "op": "PUSH2",
      "value": "0x392E"
    },
    "15171": {
      "op": "JUMPI"
    },
    "15172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15174": {
      "op": "DUP1"
    },
    "15175": {
      "op": "REVERT"
    },
    "15176": {
      "op": "JUMPDEST"
    },
    "15177": {
      "op": "DUP1"
    },
    "15178": {
      "op": "CALLDATALOAD"
    },
    "15179": {
      "op": "PUSH2",
      "value": "0x3B53"
    },
    "15182": {
      "op": "DUP2"
    },
    "15183": {
      "op": "PUSH2",
      "value": "0x3B3A"
    },
    "15186": {
      "jump": "i",
      "op": "JUMP"
    },
    "15187": {
      "op": "JUMPDEST"
    },
    "15188": {
      "op": "SWAP2"
    },
    "15189": {
      "op": "SWAP1"
    },
    "15190": {
      "op": "POP"
    },
    "15191": {
      "jump": "o",
      "op": "JUMP"
    },
    "15192": {
      "op": "JUMPDEST"
    },
    "15193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15195": {
      "op": "DUP1"
    },
    "15196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15198": {
      "op": "DUP1"
    },
    "15199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15201": {
      "op": "DUP1"
    },
    "15202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15204": {
      "op": "DUP1"
    },
    "15205": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "15208": {
      "op": "DUP10"
    },
    "15209": {
      "op": "DUP12"
    },
    "15210": {
      "op": "SUB"
    },
    "15211": {
      "op": "SLT"
    },
    "15212": {
      "op": "ISZERO"
    },
    "15213": {
      "op": "PUSH2",
      "value": "0x3B75"
    },
    "15216": {
      "op": "JUMPI"
    },
    "15217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15219": {
      "op": "DUP1"
    },
    "15220": {
      "op": "REVERT"
    },
    "15221": {
      "op": "JUMPDEST"
    },
    "15222": {
      "op": "DUP9"
    },
    "15223": {
      "op": "CALLDATALOAD"
    },
    "15224": {
      "op": "PUSH2",
      "value": "0x3B80"
    },
    "15227": {
      "op": "DUP2"
    },
    "15228": {
      "op": "PUSH2",
      "value": "0x3919"
    },
    "15231": {
      "jump": "i",
      "op": "JUMP"
    },
    "15232": {
      "op": "JUMPDEST"
    },
    "15233": {
      "op": "SWAP8"
    },
    "15234": {
      "op": "POP"
    },
    "15235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15237": {
      "op": "DUP10"
    },
    "15238": {
      "op": "ADD"
    },
    "15239": {
      "op": "CALLDATALOAD"
    },
    "15240": {
      "op": "PUSH2",
      "value": "0x3B90"
    },
    "15243": {
      "op": "DUP2"
    },
    "15244": {
      "op": "PUSH2",
      "value": "0x3919"
    },
    "15247": {
      "jump": "i",
      "op": "JUMP"
    },
    "15248": {
      "op": "JUMPDEST"
    },
    "15249": {
      "op": "SWAP7"
    },
    "15250": {
      "op": "POP"
    },
    "15251": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15253": {
      "op": "DUP10"
    },
    "15254": {
      "op": "ADD"
    },
    "15255": {
      "op": "CALLDATALOAD"
    },
    "15256": {
      "op": "PUSH2",
      "value": "0x3BA0"
    },
    "15259": {
      "op": "DUP2"
    },
    "15260": {
      "op": "PUSH2",
      "value": "0x3919"
    },
    "15263": {
      "jump": "i",
      "op": "JUMP"
    },
    "15264": {
      "op": "JUMPDEST"
    },
    "15265": {
      "op": "SWAP6"
    },
    "15266": {
      "op": "POP"
    },
    "15267": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15269": {
      "op": "DUP10"
    },
    "15270": {
      "op": "ADD"
    },
    "15271": {
      "op": "CALLDATALOAD"
    },
    "15272": {
      "op": "PUSH2",
      "value": "0x3BB0"
    },
    "15275": {
      "op": "DUP2"
    },
    "15276": {
      "op": "PUSH2",
      "value": "0x3A60"
    },
    "15279": {
      "jump": "i",
      "op": "JUMP"
    },
    "15280": {
      "op": "JUMPDEST"
    },
    "15281": {
      "op": "SWAP5"
    },
    "15282": {
      "op": "POP"
    },
    "15283": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15285": {
      "op": "DUP10"
    },
    "15286": {
      "op": "ADD"
    },
    "15287": {
      "op": "CALLDATALOAD"
    },
    "15288": {
      "op": "PUSH2",
      "value": "0x3BC0"
    },
    "15291": {
      "op": "DUP2"
    },
    "15292": {
      "op": "PUSH2",
      "value": "0x3A60"
    },
    "15295": {
      "jump": "i",
      "op": "JUMP"
    },
    "15296": {
      "op": "JUMPDEST"
    },
    "15297": {
      "op": "SWAP4"
    },
    "15298": {
      "op": "POP"
    },
    "15299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15301": {
      "op": "DUP10"
    },
    "15302": {
      "op": "ADD"
    },
    "15303": {
      "op": "CALLDATALOAD"
    },
    "15304": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15313": {
      "op": "DUP1"
    },
    "15314": {
      "op": "DUP3"
    },
    "15315": {
      "op": "GT"
    },
    "15316": {
      "op": "ISZERO"
    },
    "15317": {
      "op": "PUSH2",
      "value": "0x3BDD"
    },
    "15320": {
      "op": "JUMPI"
    },
    "15321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15323": {
      "op": "DUP1"
    },
    "15324": {
      "op": "REVERT"
    },
    "15325": {
      "op": "JUMPDEST"
    },
    "15326": {
      "op": "PUSH2",
      "value": "0x3BE9"
    },
    "15329": {
      "op": "DUP13"
    },
    "15330": {
      "op": "DUP4"
    },
    "15331": {
      "op": "DUP14"
    },
    "15332": {
      "op": "ADD"
    },
    "15333": {
      "op": "PUSH2",
      "value": "0x3AE4"
    },
    "15336": {
      "jump": "i",
      "op": "JUMP"
    },
    "15337": {
      "op": "JUMPDEST"
    },
    "15338": {
      "op": "SWAP5"
    },
    "15339": {
      "op": "POP"
    },
    "15340": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15342": {
      "op": "DUP12"
    },
    "15343": {
      "op": "ADD"
    },
    "15344": {
      "op": "CALLDATALOAD"
    },
    "15345": {
      "op": "SWAP2"
    },
    "15346": {
      "op": "POP"
    },
    "15347": {
      "op": "DUP1"
    },
    "15348": {
      "op": "DUP3"
    },
    "15349": {
      "op": "GT"
    },
    "15350": {
      "op": "ISZERO"
    },
    "15351": {
      "op": "PUSH2",
      "value": "0x3BFF"
    },
    "15354": {
      "op": "JUMPI"
    },
    "15355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15357": {
      "op": "DUP1"
    },
    "15358": {
      "op": "REVERT"
    },
    "15359": {
      "op": "JUMPDEST"
    },
    "15360": {
      "op": "POP"
    },
    "15361": {
      "op": "PUSH2",
      "value": "0x3C0C"
    },
    "15364": {
      "op": "DUP12"
    },
    "15365": {
      "op": "DUP3"
    },
    "15366": {
      "op": "DUP13"
    },
    "15367": {
      "op": "ADD"
    },
    "15368": {
      "op": "PUSH2",
      "value": "0x3AE4"
    },
    "15371": {
      "jump": "i",
      "op": "JUMP"
    },
    "15372": {
      "op": "JUMPDEST"
    },
    "15373": {
      "op": "SWAP3"
    },
    "15374": {
      "op": "POP"
    },
    "15375": {
      "op": "POP"
    },
    "15376": {
      "op": "PUSH2",
      "value": "0x3C1B"
    },
    "15379": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15381": {
      "op": "DUP11"
    },
    "15382": {
      "op": "ADD"
    },
    "15383": {
      "op": "PUSH2",
      "value": "0x3B48"
    },
    "15386": {
      "jump": "i",
      "op": "JUMP"
    },
    "15387": {
      "op": "JUMPDEST"
    },
    "15388": {
      "op": "SWAP1"
    },
    "15389": {
      "op": "POP"
    },
    "15390": {
      "op": "SWAP3"
    },
    "15391": {
      "op": "SWAP6"
    },
    "15392": {
      "op": "SWAP9"
    },
    "15393": {
      "op": "POP"
    },
    "15394": {
      "op": "SWAP3"
    },
    "15395": {
      "op": "SWAP6"
    },
    "15396": {
      "op": "SWAP9"
    },
    "15397": {
      "op": "SWAP1"
    },
    "15398": {
      "op": "SWAP4"
    },
    "15399": {
      "op": "SWAP7"
    },
    "15400": {
      "op": "POP"
    },
    "15401": {
      "jump": "o",
      "op": "JUMP"
    },
    "15402": {
      "op": "JUMPDEST"
    },
    "15403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15405": {
      "op": "DUP1"
    },
    "15406": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15408": {
      "op": "DUP4"
    },
    "15409": {
      "op": "DUP6"
    },
    "15410": {
      "op": "SUB"
    },
    "15411": {
      "op": "SLT"
    },
    "15412": {
      "op": "ISZERO"
    },
    "15413": {
      "op": "PUSH2",
      "value": "0x3C3D"
    },
    "15416": {
      "op": "JUMPI"
    },
    "15417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15419": {
      "op": "DUP1"
    },
    "15420": {
      "op": "REVERT"
    },
    "15421": {
      "op": "JUMPDEST"
    },
    "15422": {
      "op": "DUP3"
    },
    "15423": {
      "op": "CALLDATALOAD"
    },
    "15424": {
      "op": "PUSH2",
      "value": "0x3C48"
    },
    "15427": {
      "op": "DUP2"
    },
    "15428": {
      "op": "PUSH2",
      "value": "0x3919"
    },
    "15431": {
      "jump": "i",
      "op": "JUMP"
    },
    "15432": {
      "op": "JUMPDEST"
    },
    "15433": {
      "op": "SWAP2"
    },
    "15434": {
      "op": "POP"
    },
    "15435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15437": {
      "op": "DUP4"
    },
    "15438": {
      "op": "ADD"
    },
    "15439": {
      "op": "CALLDATALOAD"
    },
    "15440": {
      "op": "PUSH2",
      "value": "0x3C58"
    },
    "15443": {
      "op": "DUP2"
    },
    "15444": {
      "op": "PUSH2",
      "value": "0x3919"
    },
    "15447": {
      "jump": "i",
      "op": "JUMP"
    },
    "15448": {
      "op": "JUMPDEST"
    },
    "15449": {
      "op": "DUP1"
    },
    "15450": {
      "op": "SWAP2"
    },
    "15451": {
      "op": "POP"
    },
    "15452": {
      "op": "POP"
    },
    "15453": {
      "op": "SWAP3"
    },
    "15454": {
      "op": "POP"
    },
    "15455": {
      "op": "SWAP3"
    },
    "15456": {
      "op": "SWAP1"
    },
    "15457": {
      "op": "POP"
    },
    "15458": {
      "jump": "o",
      "op": "JUMP"
    },
    "15459": {
      "op": "JUMPDEST"
    },
    "15460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15462": {
      "op": "DUP2"
    },
    "15463": {
      "op": "DUP2"
    },
    "15464": {
      "op": "SHR"
    },
    "15465": {
      "op": "SWAP1"
    },
    "15466": {
      "op": "DUP3"
    },
    "15467": {
      "op": "AND"
    },
    "15468": {
      "op": "DUP1"
    },
    "15469": {
      "op": "PUSH2",
      "value": "0x3C77"
    },
    "15472": {
      "op": "JUMPI"
    },
    "15473": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "15475": {
      "op": "DUP3"
    },
    "15476": {
      "op": "AND"
    },
    "15477": {
      "op": "SWAP2"
    },
    "15478": {
      "op": "POP"
    },
    "15479": {
      "op": "JUMPDEST"
    },
    "15480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15482": {
      "op": "DUP3"
    },
    "15483": {
      "op": "LT"
    },
    "15484": {
      "op": "DUP2"
    },
    "15485": {
      "op": "SUB"
    },
    "15486": {
      "op": "PUSH2",
      "value": "0x3433"
    },
    "15489": {
      "op": "JUMPI"
    },
    "15490": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15495": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15497": {
      "op": "SHL"
    },
    "15498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15500": {
      "op": "MSTORE"
    },
    "15501": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "15503": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15505": {
      "op": "MSTORE"
    },
    "15506": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15510": {
      "op": "REVERT"
    },
    "15511": {
      "op": "JUMPDEST"
    },
    "15512": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15517": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15519": {
      "op": "SHL"
    },
    "15520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15522": {
      "op": "MSTORE"
    },
    "15523": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "15525": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15527": {
      "op": "MSTORE"
    },
    "15528": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15532": {
      "op": "REVERT"
    },
    "15533": {
      "op": "JUMPDEST"
    },
    "15534": {
      "op": "DUP1"
    },
    "15535": {
      "op": "DUP3"
    },
    "15536": {
      "op": "ADD"
    },
    "15537": {
      "op": "DUP1"
    },
    "15538": {
      "op": "DUP3"
    },
    "15539": {
      "op": "GT"
    },
    "15540": {
      "op": "ISZERO"
    },
    "15541": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "15544": {
      "op": "JUMPI"
    },
    "15545": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "15548": {
      "op": "PUSH2",
      "value": "0x3C97"
    },
    "15551": {
      "jump": "i",
      "op": "JUMP"
    },
    "15552": {
      "op": "JUMPDEST"
    },
    "15553": {
      "op": "DUP1"
    },
    "15554": {
      "op": "DUP3"
    },
    "15555": {
      "op": "MUL"
    },
    "15556": {
      "op": "DUP2"
    },
    "15557": {
      "op": "ISZERO"
    },
    "15558": {
      "op": "DUP3"
    },
    "15559": {
      "op": "DUP3"
    },
    "15560": {
      "op": "DIV"
    },
    "15561": {
      "op": "DUP5"
    },
    "15562": {
      "op": "EQ"
    },
    "15563": {
      "op": "OR"
    },
    "15564": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "15567": {
      "op": "JUMPI"
    },
    "15568": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "15571": {
      "op": "PUSH2",
      "value": "0x3C97"
    },
    "15574": {
      "jump": "i",
      "op": "JUMP"
    },
    "15575": {
      "op": "JUMPDEST"
    },
    "15576": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15581": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15583": {
      "op": "SHL"
    },
    "15584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15586": {
      "op": "MSTORE"
    },
    "15587": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "15589": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15591": {
      "op": "MSTORE"
    },
    "15592": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15596": {
      "op": "REVERT"
    },
    "15597": {
      "op": "JUMPDEST"
    },
    "15598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15600": {
      "op": "DUP3"
    },
    "15601": {
      "op": "PUSH2",
      "value": "0x3CFC"
    },
    "15604": {
      "op": "JUMPI"
    },
    "15605": {
      "op": "PUSH2",
      "value": "0x3CFC"
    },
    "15608": {
      "op": "PUSH2",
      "value": "0x3CD7"
    },
    "15611": {
      "jump": "i",
      "op": "JUMP"
    },
    "15612": {
      "op": "JUMPDEST"
    },
    "15613": {
      "op": "POP"
    },
    "15614": {
      "op": "DIV"
    },
    "15615": {
      "op": "SWAP1"
    },
    "15616": {
      "jump": "o",
      "op": "JUMP"
    },
    "15617": {
      "op": "JUMPDEST"
    },
    "15618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15620": {
      "op": "DUP2"
    },
    "15621": {
      "op": "DUP2"
    },
    "15622": {
      "op": "JUMPDEST"
    },
    "15623": {
      "op": "DUP1"
    },
    "15624": {
      "op": "DUP6"
    },
    "15625": {
      "op": "GT"
    },
    "15626": {
      "op": "ISZERO"
    },
    "15627": {
      "op": "PUSH2",
      "value": "0x3D3C"
    },
    "15630": {
      "op": "JUMPI"
    },
    "15631": {
      "op": "DUP2"
    },
    "15632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15634": {
      "op": "NOT"
    },
    "15635": {
      "op": "DIV"
    },
    "15636": {
      "op": "DUP3"
    },
    "15637": {
      "op": "GT"
    },
    "15638": {
      "op": "ISZERO"
    },
    "15639": {
      "op": "PUSH2",
      "value": "0x3D22"
    },
    "15642": {
      "op": "JUMPI"
    },
    "15643": {
      "op": "PUSH2",
      "value": "0x3D22"
    },
    "15646": {
      "op": "PUSH2",
      "value": "0x3C97"
    },
    "15649": {
      "jump": "i",
      "op": "JUMP"
    },
    "15650": {
      "op": "JUMPDEST"
    },
    "15651": {
      "op": "DUP1"
    },
    "15652": {
      "op": "DUP6"
    },
    "15653": {
      "op": "AND"
    },
    "15654": {
      "op": "ISZERO"
    },
    "15655": {
      "op": "PUSH2",
      "value": "0x3D2F"
    },
    "15658": {
      "op": "JUMPI"
    },
    "15659": {
      "op": "SWAP2"
    },
    "15660": {
      "op": "DUP2"
    },
    "15661": {
      "op": "MUL"
    },
    "15662": {
      "op": "SWAP2"
    },
    "15663": {
      "op": "JUMPDEST"
    },
    "15664": {
      "op": "SWAP4"
    },
    "15665": {
      "op": "DUP5"
    },
    "15666": {
      "op": "SHR"
    },
    "15667": {
      "op": "SWAP4"
    },
    "15668": {
      "op": "SWAP1"
    },
    "15669": {
      "op": "DUP1"
    },
    "15670": {
      "op": "MUL"
    },
    "15671": {
      "op": "SWAP1"
    },
    "15672": {
      "op": "PUSH2",
      "value": "0x3D06"
    },
    "15675": {
      "op": "JUMP"
    },
    "15676": {
      "op": "JUMPDEST"
    },
    "15677": {
      "op": "POP"
    },
    "15678": {
      "op": "SWAP3"
    },
    "15679": {
      "op": "POP"
    },
    "15680": {
      "op": "SWAP3"
    },
    "15681": {
      "op": "SWAP1"
    },
    "15682": {
      "op": "POP"
    },
    "15683": {
      "jump": "o",
      "op": "JUMP"
    },
    "15684": {
      "op": "JUMPDEST"
    },
    "15685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15687": {
      "op": "DUP3"
    },
    "15688": {
      "op": "PUSH2",
      "value": "0x3D53"
    },
    "15691": {
      "op": "JUMPI"
    },
    "15692": {
      "op": "POP"
    },
    "15693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15695": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "15698": {
      "op": "JUMP"
    },
    "15699": {
      "op": "JUMPDEST"
    },
    "15700": {
      "op": "DUP2"
    },
    "15701": {
      "op": "PUSH2",
      "value": "0x3D60"
    },
    "15704": {
      "op": "JUMPI"
    },
    "15705": {
      "op": "POP"
    },
    "15706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15708": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "15711": {
      "op": "JUMP"
    },
    "15712": {
      "op": "JUMPDEST"
    },
    "15713": {
      "op": "DUP2"
    },
    "15714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15716": {
      "op": "DUP2"
    },
    "15717": {
      "op": "EQ"
    },
    "15718": {
      "op": "PUSH2",
      "value": "0x3D76"
    },
    "15721": {
      "op": "JUMPI"
    },
    "15722": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "15724": {
      "op": "DUP2"
    },
    "15725": {
      "op": "EQ"
    },
    "15726": {
      "op": "PUSH2",
      "value": "0x3D80"
    },
    "15729": {
      "op": "JUMPI"
    },
    "15730": {
      "op": "PUSH2",
      "value": "0x3D9C"
    },
    "15733": {
      "op": "JUMP"
    },
    "15734": {
      "op": "JUMPDEST"
    },
    "15735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15737": {
      "op": "SWAP2"
    },
    "15738": {
      "op": "POP"
    },
    "15739": {
      "op": "POP"
    },
    "15740": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "15743": {
      "op": "JUMP"
    },
    "15744": {
      "op": "JUMPDEST"
    },
    "15745": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15747": {
      "op": "DUP5"
    },
    "15748": {
      "op": "GT"
    },
    "15749": {
      "op": "ISZERO"
    },
    "15750": {
      "op": "PUSH2",
      "value": "0x3D91"
    },
    "15753": {
      "op": "JUMPI"
    },
    "15754": {
      "op": "PUSH2",
      "value": "0x3D91"
    },
    "15757": {
      "op": "PUSH2",
      "value": "0x3C97"
    },
    "15760": {
      "jump": "i",
      "op": "JUMP"
    },
    "15761": {
      "op": "JUMPDEST"
    },
    "15762": {
      "op": "POP"
    },
    "15763": {
      "op": "POP"
    },
    "15764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15766": {
      "op": "DUP3"
    },
    "15767": {
      "op": "SHL"
    },
    "15768": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "15771": {
      "op": "JUMP"
    },
    "15772": {
      "op": "JUMPDEST"
    },
    "15773": {
      "op": "POP"
    },
    "15774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15776": {
      "op": "DUP4"
    },
    "15777": {
      "op": "LT"
    },
    "15778": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "15781": {
      "op": "DUP4"
    },
    "15782": {
      "op": "LT"
    },
    "15783": {
      "op": "AND"
    },
    "15784": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "15786": {
      "op": "DUP5"
    },
    "15787": {
      "op": "LT"
    },
    "15788": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "15790": {
      "op": "DUP5"
    },
    "15791": {
      "op": "LT"
    },
    "15792": {
      "op": "AND"
    },
    "15793": {
      "op": "OR"
    },
    "15794": {
      "op": "ISZERO"
    },
    "15795": {
      "op": "PUSH2",
      "value": "0x3DBF"
    },
    "15798": {
      "op": "JUMPI"
    },
    "15799": {
      "op": "POP"
    },
    "15800": {
      "op": "DUP2"
    },
    "15801": {
      "op": "DUP2"
    },
    "15802": {
      "op": "EXP"
    },
    "15803": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "15806": {
      "op": "JUMP"
    },
    "15807": {
      "op": "JUMPDEST"
    },
    "15808": {
      "op": "PUSH2",
      "value": "0x3DC9"
    },
    "15811": {
      "op": "DUP4"
    },
    "15812": {
      "op": "DUP4"
    },
    "15813": {
      "op": "PUSH2",
      "value": "0x3D01"
    },
    "15816": {
      "jump": "i",
      "op": "JUMP"
    },
    "15817": {
      "op": "JUMPDEST"
    },
    "15818": {
      "op": "DUP1"
    },
    "15819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15821": {
      "op": "NOT"
    },
    "15822": {
      "op": "DIV"
    },
    "15823": {
      "op": "DUP3"
    },
    "15824": {
      "op": "GT"
    },
    "15825": {
      "op": "ISZERO"
    },
    "15826": {
      "op": "PUSH2",
      "value": "0x3DDD"
    },
    "15829": {
      "op": "JUMPI"
    },
    "15830": {
      "op": "PUSH2",
      "value": "0x3DDD"
    },
    "15833": {
      "op": "PUSH2",
      "value": "0x3C97"
    },
    "15836": {
      "jump": "i",
      "op": "JUMP"
    },
    "15837": {
      "op": "JUMPDEST"
    },
    "15838": {
      "op": "MUL"
    },
    "15839": {
      "op": "SWAP4"
    },
    "15840": {
      "op": "SWAP3"
    },
    "15841": {
      "op": "POP"
    },
    "15842": {
      "op": "POP"
    },
    "15843": {
      "op": "POP"
    },
    "15844": {
      "jump": "o",
      "op": "JUMP"
    },
    "15845": {
      "op": "JUMPDEST"
    },
    "15846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15848": {
      "op": "PUSH2",
      "value": "0x71A"
    },
    "15851": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15853": {
      "op": "DUP5"
    },
    "15854": {
      "op": "AND"
    },
    "15855": {
      "op": "DUP4"
    },
    "15856": {
      "op": "PUSH2",
      "value": "0x3D44"
    },
    "15859": {
      "jump": "i",
      "op": "JUMP"
    },
    "15860": {
      "op": "JUMPDEST"
    },
    "15861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15865": {
      "op": "DUP3"
    },
    "15866": {
      "op": "DUP5"
    },
    "15867": {
      "op": "SUB"
    },
    "15868": {
      "op": "SLT"
    },
    "15869": {
      "op": "ISZERO"
    },
    "15870": {
      "op": "PUSH2",
      "value": "0x3E06"
    },
    "15873": {
      "op": "JUMPI"
    },
    "15874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15876": {
      "op": "DUP1"
    },
    "15877": {
      "op": "REVERT"
    },
    "15878": {
      "op": "JUMPDEST"
    },
    "15879": {
      "op": "POP"
    },
    "15880": {
      "op": "MLOAD"
    },
    "15881": {
      "op": "SWAP2"
    },
    "15882": {
      "op": "SWAP1"
    },
    "15883": {
      "op": "POP"
    },
    "15884": {
      "jump": "o",
      "op": "JUMP"
    },
    "15885": {
      "op": "JUMPDEST"
    },
    "15886": {
      "op": "DUP2"
    },
    "15887": {
      "op": "MLOAD"
    },
    "15888": {
      "op": "DUP2"
    },
    "15889": {
      "op": "MSTORE"
    },
    "15890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15892": {
      "op": "DUP1"
    },
    "15893": {
      "op": "DUP4"
    },
    "15894": {
      "op": "ADD"
    },
    "15895": {
      "op": "MLOAD"
    },
    "15896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15902": {
      "op": "SHL"
    },
    "15903": {
      "op": "SUB"
    },
    "15904": {
      "op": "AND"
    },
    "15905": {
      "op": "SWAP1"
    },
    "15906": {
      "op": "DUP3"
    },
    "15907": {
      "op": "ADD"
    },
    "15908": {
      "op": "MSTORE"
    },
    "15909": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15911": {
      "op": "DUP1"
    },
    "15912": {
      "op": "DUP4"
    },
    "15913": {
      "op": "ADD"
    },
    "15914": {
      "op": "MLOAD"
    },
    "15915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15919": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15921": {
      "op": "SHL"
    },
    "15922": {
      "op": "SUB"
    },
    "15923": {
      "op": "SWAP1"
    },
    "15924": {
      "op": "DUP2"
    },
    "15925": {
      "op": "AND"
    },
    "15926": {
      "op": "SWAP2"
    },
    "15927": {
      "op": "DUP4"
    },
    "15928": {
      "op": "ADD"
    },
    "15929": {
      "op": "SWAP2"
    },
    "15930": {
      "op": "SWAP1"
    },
    "15931": {
      "op": "SWAP2"
    },
    "15932": {
      "op": "MSTORE"
    },
    "15933": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15935": {
      "op": "SWAP3"
    },
    "15936": {
      "op": "DUP4"
    },
    "15937": {
      "op": "ADD"
    },
    "15938": {
      "op": "MLOAD"
    },
    "15939": {
      "op": "AND"
    },
    "15940": {
      "op": "SWAP2"
    },
    "15941": {
      "op": "DUP2"
    },
    "15942": {
      "op": "ADD"
    },
    "15943": {
      "op": "SWAP2"
    },
    "15944": {
      "op": "SWAP1"
    },
    "15945": {
      "op": "SWAP2"
    },
    "15946": {
      "op": "MSTORE"
    },
    "15947": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15949": {
      "op": "ADD"
    },
    "15950": {
      "op": "SWAP1"
    },
    "15951": {
      "jump": "o",
      "op": "JUMP"
    },
    "15952": {
      "op": "JUMPDEST"
    },
    "15953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15955": {
      "op": "DUP1"
    },
    "15956": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15958": {
      "op": "DUP4"
    },
    "15959": {
      "op": "DUP6"
    },
    "15960": {
      "op": "SUB"
    },
    "15961": {
      "op": "SLT"
    },
    "15962": {
      "op": "ISZERO"
    },
    "15963": {
      "op": "PUSH2",
      "value": "0x3E63"
    },
    "15966": {
      "op": "JUMPI"
    },
    "15967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15969": {
      "op": "DUP1"
    },
    "15970": {
      "op": "REVERT"
    },
    "15971": {
      "op": "JUMPDEST"
    },
    "15972": {
      "op": "POP"
    },
    "15973": {
      "op": "POP"
    },
    "15974": {
      "op": "DUP1"
    },
    "15975": {
      "op": "MLOAD"
    },
    "15976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15978": {
      "op": "SWAP1"
    },
    "15979": {
      "op": "SWAP2"
    },
    "15980": {
      "op": "ADD"
    },
    "15981": {
      "op": "MLOAD"
    },
    "15982": {
      "op": "SWAP1"
    },
    "15983": {
      "op": "SWAP3"
    },
    "15984": {
      "op": "SWAP1"
    },
    "15985": {
      "op": "SWAP2"
    },
    "15986": {
      "op": "POP"
    },
    "15987": {
      "jump": "o",
      "op": "JUMP"
    },
    "15988": {
      "op": "JUMPDEST"
    },
    "15989": {
      "op": "DUP2"
    },
    "15990": {
      "op": "DUP2"
    },
    "15991": {
      "op": "SUB"
    },
    "15992": {
      "op": "DUP2"
    },
    "15993": {
      "op": "DUP2"
    },
    "15994": {
      "op": "GT"
    },
    "15995": {
      "op": "ISZERO"
    },
    "15996": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "15999": {
      "op": "JUMPI"
    },
    "16000": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "16003": {
      "op": "PUSH2",
      "value": "0x3C97"
    },
    "16006": {
      "jump": "i",
      "op": "JUMP"
    },
    "16007": {
      "op": "JUMPDEST"
    },
    "16008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16010": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "16012": {
      "op": "DUP3"
    },
    "16013": {
      "op": "ADD"
    },
    "16014": {
      "op": "SWAP1"
    },
    "16015": {
      "op": "POP"
    },
    "16016": {
      "op": "DUP3"
    },
    "16017": {
      "op": "MLOAD"
    },
    "16018": {
      "op": "DUP3"
    },
    "16019": {
      "op": "MSTORE"
    },
    "16020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16022": {
      "op": "DUP4"
    },
    "16023": {
      "op": "ADD"
    },
    "16024": {
      "op": "MLOAD"
    },
    "16025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16027": {
      "op": "DUP4"
    },
    "16028": {
      "op": "ADD"
    },
    "16029": {
      "op": "MSTORE"
    },
    "16030": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16032": {
      "op": "DUP4"
    },
    "16033": {
      "op": "ADD"
    },
    "16034": {
      "op": "MLOAD"
    },
    "16035": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16037": {
      "op": "DUP4"
    },
    "16038": {
      "op": "ADD"
    },
    "16039": {
      "op": "MSTORE"
    },
    "16040": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16042": {
      "op": "DUP4"
    },
    "16043": {
      "op": "ADD"
    },
    "16044": {
      "op": "MLOAD"
    },
    "16045": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16047": {
      "op": "DUP4"
    },
    "16048": {
      "op": "ADD"
    },
    "16049": {
      "op": "MSTORE"
    },
    "16050": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16052": {
      "op": "DUP4"
    },
    "16053": {
      "op": "ADD"
    },
    "16054": {
      "op": "MLOAD"
    },
    "16055": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16057": {
      "op": "DUP4"
    },
    "16058": {
      "op": "ADD"
    },
    "16059": {
      "op": "MSTORE"
    },
    "16060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16062": {
      "op": "DUP4"
    },
    "16063": {
      "op": "ADD"
    },
    "16064": {
      "op": "MLOAD"
    },
    "16065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16067": {
      "op": "DUP4"
    },
    "16068": {
      "op": "ADD"
    },
    "16069": {
      "op": "MSTORE"
    },
    "16070": {
      "op": "SWAP3"
    },
    "16071": {
      "op": "SWAP2"
    },
    "16072": {
      "op": "POP"
    },
    "16073": {
      "op": "POP"
    },
    "16074": {
      "jump": "o",
      "op": "JUMP"
    },
    "16075": {
      "op": "JUMPDEST"
    },
    "16076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16078": {
      "op": "DUP1"
    },
    "16079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16081": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16083": {
      "op": "DUP5"
    },
    "16084": {
      "op": "DUP7"
    },
    "16085": {
      "op": "SUB"
    },
    "16086": {
      "op": "SLT"
    },
    "16087": {
      "op": "ISZERO"
    },
    "16088": {
      "op": "PUSH2",
      "value": "0x3EE0"
    },
    "16091": {
      "op": "JUMPI"
    },
    "16092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16094": {
      "op": "DUP1"
    },
    "16095": {
      "op": "REVERT"
    },
    "16096": {
      "op": "JUMPDEST"
    },
    "16097": {
      "op": "DUP4"
    },
    "16098": {
      "op": "MLOAD"
    },
    "16099": {
      "op": "PUSH2",
      "value": "0x3EEB"
    },
    "16102": {
      "op": "DUP2"
    },
    "16103": {
      "op": "PUSH2",
      "value": "0x3A60"
    },
    "16106": {
      "jump": "i",
      "op": "JUMP"
    },
    "16107": {
      "op": "JUMPDEST"
    },
    "16108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16110": {
      "op": "DUP6"
    },
    "16111": {
      "op": "ADD"
    },
    "16112": {
      "op": "MLOAD"
    },
    "16113": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16115": {
      "op": "SWAP1"
    },
    "16116": {
      "op": "SWAP6"
    },
    "16117": {
      "op": "ADD"
    },
    "16118": {
      "op": "MLOAD"
    },
    "16119": {
      "op": "SWAP1"
    },
    "16120": {
      "op": "SWAP7"
    },
    "16121": {
      "op": "SWAP5"
    },
    "16122": {
      "op": "SWAP6"
    },
    "16123": {
      "op": "POP"
    },
    "16124": {
      "op": "SWAP4"
    },
    "16125": {
      "op": "SWAP3"
    },
    "16126": {
      "op": "POP"
    },
    "16127": {
      "op": "POP"
    },
    "16128": {
      "op": "POP"
    },
    "16129": {
      "jump": "o",
      "op": "JUMP"
    },
    "16130": {
      "op": "JUMPDEST"
    },
    "16131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16135": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16137": {
      "op": "SHL"
    },
    "16138": {
      "op": "SUB"
    },
    "16139": {
      "op": "DUP2"
    },
    "16140": {
      "op": "DUP2"
    },
    "16141": {
      "op": "AND"
    },
    "16142": {
      "op": "DUP4"
    },
    "16143": {
      "op": "DUP3"
    },
    "16144": {
      "op": "AND"
    },
    "16145": {
      "op": "ADD"
    },
    "16146": {
      "op": "SWAP1"
    },
    "16147": {
      "op": "DUP1"
    },
    "16148": {
      "op": "DUP3"
    },
    "16149": {
      "op": "GT"
    },
    "16150": {
      "op": "ISZERO"
    },
    "16151": {
      "op": "PUSH2",
      "value": "0x3F22"
    },
    "16154": {
      "op": "JUMPI"
    },
    "16155": {
      "op": "PUSH2",
      "value": "0x3F22"
    },
    "16158": {
      "op": "PUSH2",
      "value": "0x3C97"
    },
    "16161": {
      "jump": "i",
      "op": "JUMP"
    },
    "16162": {
      "op": "JUMPDEST"
    },
    "16163": {
      "op": "POP"
    },
    "16164": {
      "op": "SWAP3"
    },
    "16165": {
      "op": "SWAP2"
    },
    "16166": {
      "op": "POP"
    },
    "16167": {
      "op": "POP"
    },
    "16168": {
      "jump": "o",
      "op": "JUMP"
    },
    "16169": {
      "op": "JUMPDEST"
    },
    "16170": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "16174": {
      "op": "DUP2"
    },
    "16175": {
      "op": "DUP2"
    },
    "16176": {
      "op": "AND"
    },
    "16177": {
      "op": "DUP4"
    },
    "16178": {
      "op": "DUP3"
    },
    "16179": {
      "op": "AND"
    },
    "16180": {
      "op": "MUL"
    },
    "16181": {
      "op": "DUP1"
    },
    "16182": {
      "op": "DUP3"
    },
    "16183": {
      "op": "AND"
    },
    "16184": {
      "op": "SWAP2"
    },
    "16185": {
      "op": "SWAP1"
    },
    "16186": {
      "op": "DUP3"
    },
    "16187": {
      "op": "DUP2"
    },
    "16188": {
      "op": "EQ"
    },
    "16189": {
      "op": "PUSH2",
      "value": "0x3F48"
    },
    "16192": {
      "op": "JUMPI"
    },
    "16193": {
      "op": "PUSH2",
      "value": "0x3F48"
    },
    "16196": {
      "op": "PUSH2",
      "value": "0x3C97"
    },
    "16199": {
      "jump": "i",
      "op": "JUMP"
    },
    "16200": {
      "op": "JUMPDEST"
    },
    "16201": {
      "op": "POP"
    },
    "16202": {
      "op": "POP"
    },
    "16203": {
      "op": "SWAP3"
    },
    "16204": {
      "op": "SWAP2"
    },
    "16205": {
      "op": "POP"
    },
    "16206": {
      "op": "POP"
    },
    "16207": {
      "jump": "o",
      "op": "JUMP"
    },
    "16208": {
      "op": "JUMPDEST"
    },
    "16209": {
      "op": "DUP2"
    },
    "16210": {
      "op": "MLOAD"
    },
    "16211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16217": {
      "op": "SHL"
    },
    "16218": {
      "op": "SUB"
    },
    "16219": {
      "op": "AND"
    },
    "16220": {
      "op": "DUP2"
    },
    "16221": {
      "op": "MSTORE"
    },
    "16222": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "16225": {
      "op": "DUP2"
    },
    "16226": {
      "op": "ADD"
    },
    "16227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16229": {
      "op": "DUP4"
    },
    "16230": {
      "op": "ADD"
    },
    "16231": {
      "op": "MLOAD"
    },
    "16232": {
      "op": "PUSH2",
      "value": "0x3F7C"
    },
    "16235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16237": {
      "op": "DUP5"
    },
    "16238": {
      "op": "ADD"
    },
    "16239": {
      "op": "DUP3"
    },
    "16240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16246": {
      "op": "SHL"
    },
    "16247": {
      "op": "SUB"
    },
    "16248": {
      "op": "AND"
    },
    "16249": {
      "op": "SWAP1"
    },
    "16250": {
      "op": "MSTORE"
    },
    "16251": {
      "op": "JUMP"
    },
    "16252": {
      "op": "JUMPDEST"
    },
    "16253": {
      "op": "POP"
    },
    "16254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16256": {
      "op": "DUP4"
    },
    "16257": {
      "op": "ADD"
    },
    "16258": {
      "op": "MLOAD"
    },
    "16259": {
      "op": "PUSH2",
      "value": "0x3F93"
    },
    "16262": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16264": {
      "op": "DUP5"
    },
    "16265": {
      "op": "ADD"
    },
    "16266": {
      "op": "DUP3"
    },
    "16267": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "16271": {
      "op": "AND"
    },
    "16272": {
      "op": "SWAP1"
    },
    "16273": {
      "op": "MSTORE"
    },
    "16274": {
      "op": "JUMP"
    },
    "16275": {
      "op": "JUMPDEST"
    },
    "16276": {
      "op": "POP"
    },
    "16277": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16279": {
      "op": "DUP4"
    },
    "16280": {
      "op": "ADD"
    },
    "16281": {
      "op": "MLOAD"
    },
    "16282": {
      "op": "PUSH2",
      "value": "0x3FA8"
    },
    "16285": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16287": {
      "op": "DUP5"
    },
    "16288": {
      "op": "ADD"
    },
    "16289": {
      "op": "DUP3"
    },
    "16290": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16292": {
      "op": "SIGNEXTEND"
    },
    "16293": {
      "op": "SWAP1"
    },
    "16294": {
      "op": "MSTORE"
    },
    "16295": {
      "op": "JUMP"
    },
    "16296": {
      "op": "JUMPDEST"
    },
    "16297": {
      "op": "POP"
    },
    "16298": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16300": {
      "op": "DUP4"
    },
    "16301": {
      "op": "ADD"
    },
    "16302": {
      "op": "MLOAD"
    },
    "16303": {
      "op": "PUSH2",
      "value": "0x3FBD"
    },
    "16306": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16308": {
      "op": "DUP5"
    },
    "16309": {
      "op": "ADD"
    },
    "16310": {
      "op": "DUP3"
    },
    "16311": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16313": {
      "op": "SIGNEXTEND"
    },
    "16314": {
      "op": "SWAP1"
    },
    "16315": {
      "op": "MSTORE"
    },
    "16316": {
      "op": "JUMP"
    },
    "16317": {
      "op": "JUMPDEST"
    },
    "16318": {
      "op": "POP"
    },
    "16319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16321": {
      "op": "DUP4"
    },
    "16322": {
      "op": "ADD"
    },
    "16323": {
      "op": "MLOAD"
    },
    "16324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16326": {
      "op": "DUP4"
    },
    "16327": {
      "op": "ADD"
    },
    "16328": {
      "op": "MSTORE"
    },
    "16329": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "16331": {
      "op": "DUP4"
    },
    "16332": {
      "op": "ADD"
    },
    "16333": {
      "op": "MLOAD"
    },
    "16334": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "16336": {
      "op": "DUP4"
    },
    "16337": {
      "op": "ADD"
    },
    "16338": {
      "op": "MSTORE"
    },
    "16339": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16341": {
      "op": "DUP4"
    },
    "16342": {
      "op": "ADD"
    },
    "16343": {
      "op": "MLOAD"
    },
    "16344": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16346": {
      "op": "DUP4"
    },
    "16347": {
      "op": "ADD"
    },
    "16348": {
      "op": "MSTORE"
    },
    "16349": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "16352": {
      "op": "DUP1"
    },
    "16353": {
      "op": "DUP5"
    },
    "16354": {
      "op": "ADD"
    },
    "16355": {
      "op": "MLOAD"
    },
    "16356": {
      "op": "DUP2"
    },
    "16357": {
      "op": "DUP5"
    },
    "16358": {
      "op": "ADD"
    },
    "16359": {
      "op": "MSTORE"
    },
    "16360": {
      "op": "POP"
    },
    "16361": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "16364": {
      "op": "DUP1"
    },
    "16365": {
      "op": "DUP5"
    },
    "16366": {
      "op": "ADD"
    },
    "16367": {
      "op": "MLOAD"
    },
    "16368": {
      "op": "PUSH2",
      "value": "0x4003"
    },
    "16371": {
      "op": "DUP3"
    },
    "16372": {
      "op": "DUP6"
    },
    "16373": {
      "op": "ADD"
    },
    "16374": {
      "op": "DUP3"
    },
    "16375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16381": {
      "op": "SHL"
    },
    "16382": {
      "op": "SUB"
    },
    "16383": {
      "op": "AND"
    },
    "16384": {
      "op": "SWAP1"
    },
    "16385": {
      "op": "MSTORE"
    },
    "16386": {
      "op": "JUMP"
    },
    "16387": {
      "op": "JUMPDEST"
    },
    "16388": {
      "op": "POP"
    },
    "16389": {
      "op": "POP"
    },
    "16390": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "16393": {
      "op": "SWAP3"
    },
    "16394": {
      "op": "DUP4"
    },
    "16395": {
      "op": "ADD"
    },
    "16396": {
      "op": "MLOAD"
    },
    "16397": {
      "op": "SWAP2"
    },
    "16398": {
      "op": "SWAP1"
    },
    "16399": {
      "op": "SWAP3"
    },
    "16400": {
      "op": "ADD"
    },
    "16401": {
      "op": "MSTORE"
    },
    "16402": {
      "op": "SWAP1"
    },
    "16403": {
      "jump": "o",
      "op": "JUMP"
    },
    "16404": {
      "op": "JUMPDEST"
    },
    "16405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16407": {
      "op": "DUP1"
    },
    "16408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16410": {
      "op": "DUP1"
    },
    "16411": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16413": {
      "op": "DUP6"
    },
    "16414": {
      "op": "DUP8"
    },
    "16415": {
      "op": "SUB"
    },
    "16416": {
      "op": "SLT"
    },
    "16417": {
      "op": "ISZERO"
    },
    "16418": {
      "op": "PUSH2",
      "value": "0x402A"
    },
    "16421": {
      "op": "JUMPI"
    },
    "16422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16424": {
      "op": "DUP1"
    },
    "16425": {
      "op": "REVERT"
    },
    "16426": {
      "op": "JUMPDEST"
    },
    "16427": {
      "op": "DUP5"
    },
    "16428": {
      "op": "MLOAD"
    },
    "16429": {
      "op": "SWAP4"
    },
    "16430": {
      "op": "POP"
    },
    "16431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16433": {
      "op": "DUP6"
    },
    "16434": {
      "op": "ADD"
    },
    "16435": {
      "op": "MLOAD"
    },
    "16436": {
      "op": "PUSH2",
      "value": "0x403C"
    },
    "16439": {
      "op": "DUP2"
    },
    "16440": {
      "op": "PUSH2",
      "value": "0x3A60"
    },
    "16443": {
      "jump": "i",
      "op": "JUMP"
    },
    "16444": {
      "op": "JUMPDEST"
    },
    "16445": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16447": {
      "op": "DUP7"
    },
    "16448": {
      "op": "ADD"
    },
    "16449": {
      "op": "MLOAD"
    },
    "16450": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16452": {
      "op": "SWAP1"
    },
    "16453": {
      "op": "SWAP7"
    },
    "16454": {
      "op": "ADD"
    },
    "16455": {
      "op": "MLOAD"
    },
    "16456": {
      "op": "SWAP5"
    },
    "16457": {
      "op": "SWAP8"
    },
    "16458": {
      "op": "SWAP1"
    },
    "16459": {
      "op": "SWAP7"
    },
    "16460": {
      "op": "POP"
    },
    "16461": {
      "op": "SWAP3"
    },
    "16462": {
      "op": "POP"
    },
    "16463": {
      "op": "POP"
    },
    "16464": {
      "op": "POP"
    },
    "16465": {
      "jump": "o",
      "op": "JUMP"
    },
    "16466": {
      "op": "JUMPDEST"
    },
    "16467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16471": {
      "op": "DUP3"
    },
    "16472": {
      "op": "DUP5"
    },
    "16473": {
      "op": "SUB"
    },
    "16474": {
      "op": "SLT"
    },
    "16475": {
      "op": "ISZERO"
    },
    "16476": {
      "op": "PUSH2",
      "value": "0x4064"
    },
    "16479": {
      "op": "JUMPI"
    },
    "16480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16482": {
      "op": "DUP1"
    },
    "16483": {
      "op": "REVERT"
    },
    "16484": {
      "op": "JUMPDEST"
    },
    "16485": {
      "op": "DUP2"
    },
    "16486": {
      "op": "MLOAD"
    },
    "16487": {
      "op": "PUSH2",
      "value": "0x71A"
    },
    "16490": {
      "op": "DUP2"
    },
    "16491": {
      "op": "PUSH2",
      "value": "0x3919"
    },
    "16494": {
      "jump": "i",
      "op": "JUMP"
    },
    "16495": {
      "op": "JUMPDEST"
    },
    "16496": {
      "op": "DUP1"
    },
    "16497": {
      "op": "MLOAD"
    },
    "16498": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16500": {
      "op": "DUP2"
    },
    "16501": {
      "op": "SWAP1"
    },
    "16502": {
      "op": "SIGNEXTEND"
    },
    "16503": {
      "op": "DUP2"
    },
    "16504": {
      "op": "EQ"
    },
    "16505": {
      "op": "PUSH2",
      "value": "0x3B53"
    },
    "16508": {
      "op": "JUMPI"
    },
    "16509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16511": {
      "op": "DUP1"
    },
    "16512": {
      "op": "REVERT"
    },
    "16513": {
      "op": "JUMPDEST"
    },
    "16514": {
      "op": "DUP1"
    },
    "16515": {
      "op": "MLOAD"
    },
    "16516": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "16519": {
      "op": "DUP2"
    },
    "16520": {
      "op": "AND"
    },
    "16521": {
      "op": "DUP2"
    },
    "16522": {
      "op": "EQ"
    },
    "16523": {
      "op": "PUSH2",
      "value": "0x3B53"
    },
    "16526": {
      "op": "JUMPI"
    },
    "16527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16529": {
      "op": "DUP1"
    },
    "16530": {
      "op": "REVERT"
    },
    "16531": {
      "op": "JUMPDEST"
    },
    "16532": {
      "op": "DUP1"
    },
    "16533": {
      "op": "MLOAD"
    },
    "16534": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16536": {
      "op": "DUP2"
    },
    "16537": {
      "op": "AND"
    },
    "16538": {
      "op": "DUP2"
    },
    "16539": {
      "op": "EQ"
    },
    "16540": {
      "op": "PUSH2",
      "value": "0x3B53"
    },
    "16543": {
      "op": "JUMPI"
    },
    "16544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16546": {
      "op": "DUP1"
    },
    "16547": {
      "op": "REVERT"
    },
    "16548": {
      "op": "JUMPDEST"
    },
    "16549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16551": {
      "op": "DUP1"
    },
    "16552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16554": {
      "op": "DUP1"
    },
    "16555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16557": {
      "op": "DUP1"
    },
    "16558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16560": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16562": {
      "op": "DUP9"
    },
    "16563": {
      "op": "DUP11"
    },
    "16564": {
      "op": "SUB"
    },
    "16565": {
      "op": "SLT"
    },
    "16566": {
      "op": "ISZERO"
    },
    "16567": {
      "op": "PUSH2",
      "value": "0x40BF"
    },
    "16570": {
      "op": "JUMPI"
    },
    "16571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16573": {
      "op": "DUP1"
    },
    "16574": {
      "op": "REVERT"
    },
    "16575": {
      "op": "JUMPDEST"
    },
    "16576": {
      "op": "DUP8"
    },
    "16577": {
      "op": "MLOAD"
    },
    "16578": {
      "op": "PUSH2",
      "value": "0x40CA"
    },
    "16581": {
      "op": "DUP2"
    },
    "16582": {
      "op": "PUSH2",
      "value": "0x3919"
    },
    "16585": {
      "jump": "i",
      "op": "JUMP"
    },
    "16586": {
      "op": "JUMPDEST"
    },
    "16587": {
      "op": "SWAP7"
    },
    "16588": {
      "op": "POP"
    },
    "16589": {
      "op": "PUSH2",
      "value": "0x40D8"
    },
    "16592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16594": {
      "op": "DUP10"
    },
    "16595": {
      "op": "ADD"
    },
    "16596": {
      "op": "PUSH2",
      "value": "0x406F"
    },
    "16599": {
      "jump": "i",
      "op": "JUMP"
    },
    "16600": {
      "op": "JUMPDEST"
    },
    "16601": {
      "op": "SWAP6"
    },
    "16602": {
      "op": "POP"
    },
    "16603": {
      "op": "PUSH2",
      "value": "0x40E6"
    },
    "16606": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16608": {
      "op": "DUP10"
    },
    "16609": {
      "op": "ADD"
    },
    "16610": {
      "op": "PUSH2",
      "value": "0x4081"
    },
    "16613": {
      "jump": "i",
      "op": "JUMP"
    },
    "16614": {
      "op": "JUMPDEST"
    },
    "16615": {
      "op": "SWAP5"
    },
    "16616": {
      "op": "POP"
    },
    "16617": {
      "op": "PUSH2",
      "value": "0x40F4"
    },
    "16620": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16622": {
      "op": "DUP10"
    },
    "16623": {
      "op": "ADD"
    },
    "16624": {
      "op": "PUSH2",
      "value": "0x4081"
    },
    "16627": {
      "jump": "i",
      "op": "JUMP"
    },
    "16628": {
      "op": "JUMPDEST"
    },
    "16629": {
      "op": "SWAP4"
    },
    "16630": {
      "op": "POP"
    },
    "16631": {
      "op": "PUSH2",
      "value": "0x4102"
    },
    "16634": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16636": {
      "op": "DUP10"
    },
    "16637": {
      "op": "ADD"
    },
    "16638": {
      "op": "PUSH2",
      "value": "0x4081"
    },
    "16641": {
      "jump": "i",
      "op": "JUMP"
    },
    "16642": {
      "op": "JUMPDEST"
    },
    "16643": {
      "op": "SWAP3"
    },
    "16644": {
      "op": "POP"
    },
    "16645": {
      "op": "PUSH2",
      "value": "0x4110"
    },
    "16648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16650": {
      "op": "DUP10"
    },
    "16651": {
      "op": "ADD"
    },
    "16652": {
      "op": "PUSH2",
      "value": "0x4093"
    },
    "16655": {
      "jump": "i",
      "op": "JUMP"
    },
    "16656": {
      "op": "JUMPDEST"
    },
    "16657": {
      "op": "SWAP2"
    },
    "16658": {
      "op": "POP"
    },
    "16659": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "16661": {
      "op": "DUP9"
    },
    "16662": {
      "op": "ADD"
    },
    "16663": {
      "op": "MLOAD"
    },
    "16664": {
      "op": "PUSH2",
      "value": "0x4120"
    },
    "16667": {
      "op": "DUP2"
    },
    "16668": {
      "op": "PUSH2",
      "value": "0x3B3A"
    },
    "16671": {
      "jump": "i",
      "op": "JUMP"
    },
    "16672": {
      "op": "JUMPDEST"
    },
    "16673": {
      "op": "DUP1"
    },
    "16674": {
      "op": "SWAP2"
    },
    "16675": {
      "op": "POP"
    },
    "16676": {
      "op": "POP"
    },
    "16677": {
      "op": "SWAP3"
    },
    "16678": {
      "op": "SWAP6"
    },
    "16679": {
      "op": "SWAP9"
    },
    "16680": {
      "op": "SWAP2"
    },
    "16681": {
      "op": "SWAP5"
    },
    "16682": {
      "op": "SWAP8"
    },
    "16683": {
      "op": "POP"
    },
    "16684": {
      "op": "SWAP3"
    },
    "16685": {
      "op": "SWAP6"
    },
    "16686": {
      "op": "POP"
    },
    "16687": {
      "jump": "o",
      "op": "JUMP"
    },
    "16688": {
      "op": "JUMPDEST"
    },
    "16689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16693": {
      "op": "DUP3"
    },
    "16694": {
      "op": "DUP5"
    },
    "16695": {
      "op": "SUB"
    },
    "16696": {
      "op": "SLT"
    },
    "16697": {
      "op": "ISZERO"
    },
    "16698": {
      "op": "PUSH2",
      "value": "0x4142"
    },
    "16701": {
      "op": "JUMPI"
    },
    "16702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16704": {
      "op": "DUP1"
    },
    "16705": {
      "op": "REVERT"
    },
    "16706": {
      "op": "JUMPDEST"
    },
    "16707": {
      "op": "PUSH2",
      "value": "0x71A"
    },
    "16710": {
      "op": "DUP3"
    },
    "16711": {
      "op": "PUSH2",
      "value": "0x4093"
    },
    "16714": {
      "jump": "i",
      "op": "JUMP"
    },
    "16715": {
      "op": "JUMPDEST"
    },
    "16716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16720": {
      "op": "DUP3"
    },
    "16721": {
      "op": "DUP5"
    },
    "16722": {
      "op": "SUB"
    },
    "16723": {
      "op": "SLT"
    },
    "16724": {
      "op": "ISZERO"
    },
    "16725": {
      "op": "PUSH2",
      "value": "0x415D"
    },
    "16728": {
      "op": "JUMPI"
    },
    "16729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16731": {
      "op": "DUP1"
    },
    "16732": {
      "op": "REVERT"
    },
    "16733": {
      "op": "JUMPDEST"
    },
    "16734": {
      "op": "DUP2"
    },
    "16735": {
      "op": "MLOAD"
    },
    "16736": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "16745": {
      "op": "DUP2"
    },
    "16746": {
      "op": "GT"
    },
    "16747": {
      "op": "ISZERO"
    },
    "16748": {
      "op": "PUSH2",
      "value": "0x4174"
    },
    "16751": {
      "op": "JUMPI"
    },
    "16752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16754": {
      "op": "DUP1"
    },
    "16755": {
      "op": "REVERT"
    },
    "16756": {
      "op": "JUMPDEST"
    },
    "16757": {
      "op": "DUP3"
    },
    "16758": {
      "op": "ADD"
    },
    "16759": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16761": {
      "op": "DUP2"
    },
    "16762": {
      "op": "ADD"
    },
    "16763": {
      "op": "DUP5"
    },
    "16764": {
      "op": "SGT"
    },
    "16765": {
      "op": "PUSH2",
      "value": "0x4185"
    },
    "16768": {
      "op": "JUMPI"
    },
    "16769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16771": {
      "op": "DUP1"
    },
    "16772": {
      "op": "REVERT"
    },
    "16773": {
      "op": "JUMPDEST"
    },
    "16774": {
      "op": "DUP1"
    },
    "16775": {
      "op": "MLOAD"
    },
    "16776": {
      "op": "PUSH2",
      "value": "0x4193"
    },
    "16779": {
      "op": "PUSH2",
      "value": "0x3B03"
    },
    "16782": {
      "op": "DUP3"
    },
    "16783": {
      "op": "PUSH2",
      "value": "0x3ABC"
    },
    "16786": {
      "jump": "i",
      "op": "JUMP"
    },
    "16787": {
      "op": "JUMPDEST"
    },
    "16788": {
      "op": "DUP2"
    },
    "16789": {
      "op": "DUP2"
    },
    "16790": {
      "op": "MSTORE"
    },
    "16791": {
      "op": "DUP6"
    },
    "16792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16794": {
      "op": "DUP4"
    },
    "16795": {
      "op": "DUP6"
    },
    "16796": {
      "op": "ADD"
    },
    "16797": {
      "op": "ADD"
    },
    "16798": {
      "op": "GT"
    },
    "16799": {
      "op": "ISZERO"
    },
    "16800": {
      "op": "PUSH2",
      "value": "0x41A8"
    },
    "16803": {
      "op": "JUMPI"
    },
    "16804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16806": {
      "op": "DUP1"
    },
    "16807": {
      "op": "REVERT"
    },
    "16808": {
      "op": "JUMPDEST"
    },
    "16809": {
      "op": "PUSH2",
      "value": "0x41B9"
    },
    "16812": {
      "op": "DUP3"
    },
    "16813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16815": {
      "op": "DUP4"
    },
    "16816": {
      "op": "ADD"
    },
    "16817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16819": {
      "op": "DUP7"
    },
    "16820": {
      "op": "ADD"
    },
    "16821": {
      "op": "PUSH2",
      "value": "0x38C2"
    },
    "16824": {
      "jump": "i",
      "op": "JUMP"
    },
    "16825": {
      "op": "JUMPDEST"
    },
    "16826": {
      "op": "SWAP6"
    },
    "16827": {
      "op": "SWAP5"
    },
    "16828": {
      "op": "POP"
    },
    "16829": {
      "op": "POP"
    },
    "16830": {
      "op": "POP"
    },
    "16831": {
      "op": "POP"
    },
    "16832": {
      "op": "POP"
    },
    "16833": {
      "jump": "o",
      "op": "JUMP"
    },
    "16834": {
      "op": "JUMPDEST"
    },
    "16835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16837": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16839": {
      "op": "DUP3"
    },
    "16840": {
      "op": "DUP5"
    },
    "16841": {
      "op": "SUB"
    },
    "16842": {
      "op": "SLT"
    },
    "16843": {
      "op": "ISZERO"
    },
    "16844": {
      "op": "PUSH2",
      "value": "0x41D4"
    },
    "16847": {
      "op": "JUMPI"
    },
    "16848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16850": {
      "op": "DUP1"
    },
    "16851": {
      "op": "REVERT"
    },
    "16852": {
      "op": "JUMPDEST"
    },
    "16853": {
      "op": "PUSH2",
      "value": "0x71A"
    },
    "16856": {
      "op": "DUP3"
    },
    "16857": {
      "op": "PUSH2",
      "value": "0x406F"
    },
    "16860": {
      "jump": "i",
      "op": "JUMP"
    },
    "16861": {
      "op": "JUMPDEST"
    },
    "16862": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16864": {
      "op": "DUP2"
    },
    "16865": {
      "op": "DUP2"
    },
    "16866": {
      "op": "SIGNEXTEND"
    },
    "16867": {
      "op": "SWAP1"
    },
    "16868": {
      "op": "DUP4"
    },
    "16869": {
      "op": "SWAP1"
    },
    "16870": {
      "op": "SIGNEXTEND"
    },
    "16871": {
      "op": "ADD"
    },
    "16872": {
      "op": "PUSH3",
      "value": "0x7FFFFF"
    },
    "16876": {
      "op": "DUP2"
    },
    "16877": {
      "op": "SGT"
    },
    "16878": {
      "op": "PUSH3",
      "value": "0x7FFFFF"
    },
    "16882": {
      "op": "NOT"
    },
    "16883": {
      "op": "DUP3"
    },
    "16884": {
      "op": "SLT"
    },
    "16885": {
      "op": "OR"
    },
    "16886": {
      "op": "ISZERO"
    },
    "16887": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "16890": {
      "op": "JUMPI"
    },
    "16891": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "16894": {
      "op": "PUSH2",
      "value": "0x3C97"
    },
    "16897": {
      "jump": "i",
      "op": "JUMP"
    },
    "16898": {
      "op": "JUMPDEST"
    },
    "16899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16901": {
      "op": "DUP2"
    },
    "16902": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16904": {
      "op": "SIGNEXTEND"
    },
    "16905": {
      "op": "DUP4"
    },
    "16906": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16908": {
      "op": "SIGNEXTEND"
    },
    "16909": {
      "op": "DUP1"
    },
    "16910": {
      "op": "PUSH2",
      "value": "0x4219"
    },
    "16913": {
      "op": "JUMPI"
    },
    "16914": {
      "op": "PUSH2",
      "value": "0x4219"
    },
    "16917": {
      "op": "PUSH2",
      "value": "0x3CD7"
    },
    "16920": {
      "jump": "i",
      "op": "JUMP"
    },
    "16921": {
      "op": "JUMPDEST"
    },
    "16922": {
      "op": "PUSH3",
      "value": "0x7FFFFF"
    },
    "16926": {
      "op": "NOT"
    },
    "16927": {
      "op": "DUP3"
    },
    "16928": {
      "op": "EQ"
    },
    "16929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16931": {
      "op": "NOT"
    },
    "16932": {
      "op": "DUP3"
    },
    "16933": {
      "op": "EQ"
    },
    "16934": {
      "op": "AND"
    },
    "16935": {
      "op": "ISZERO"
    },
    "16936": {
      "op": "PUSH2",
      "value": "0x4233"
    },
    "16939": {
      "op": "JUMPI"
    },
    "16940": {
      "op": "PUSH2",
      "value": "0x4233"
    },
    "16943": {
      "op": "PUSH2",
      "value": "0x3C97"
    },
    "16946": {
      "jump": "i",
      "op": "JUMP"
    },
    "16947": {
      "op": "JUMPDEST"
    },
    "16948": {
      "op": "SWAP1"
    },
    "16949": {
      "op": "SDIV"
    },
    "16950": {
      "op": "SWAP4"
    },
    "16951": {
      "op": "SWAP3"
    },
    "16952": {
      "op": "POP"
    },
    "16953": {
      "op": "POP"
    },
    "16954": {
      "op": "POP"
    },
    "16955": {
      "jump": "o",
      "op": "JUMP"
    },
    "16956": {
      "op": "JUMPDEST"
    },
    "16957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16959": {
      "op": "DUP3"
    },
    "16960": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16962": {
      "op": "SIGNEXTEND"
    },
    "16963": {
      "op": "DUP1"
    },
    "16964": {
      "op": "PUSH2",
      "value": "0x424F"
    },
    "16967": {
      "op": "JUMPI"
    },
    "16968": {
      "op": "PUSH2",
      "value": "0x424F"
    },
    "16971": {
      "op": "PUSH2",
      "value": "0x3CD7"
    },
    "16974": {
      "jump": "i",
      "op": "JUMP"
    },
    "16975": {
      "op": "JUMPDEST"
    },
    "16976": {
      "op": "DUP1"
    },
    "16977": {
      "op": "DUP4"
    },
    "16978": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16980": {
      "op": "SIGNEXTEND"
    },
    "16981": {
      "op": "SMOD"
    },
    "16982": {
      "op": "SWAP2"
    },
    "16983": {
      "op": "POP"
    },
    "16984": {
      "op": "POP"
    },
    "16985": {
      "op": "SWAP3"
    },
    "16986": {
      "op": "SWAP2"
    },
    "16987": {
      "op": "POP"
    },
    "16988": {
      "op": "POP"
    },
    "16989": {
      "jump": "o",
      "op": "JUMP"
    },
    "16990": {
      "op": "JUMPDEST"
    },
    "16991": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16993": {
      "op": "DUP3"
    },
    "16994": {
      "op": "DUP2"
    },
    "16995": {
      "op": "SIGNEXTEND"
    },
    "16996": {
      "op": "SWAP1"
    },
    "16997": {
      "op": "DUP3"
    },
    "16998": {
      "op": "SWAP1"
    },
    "16999": {
      "op": "SIGNEXTEND"
    },
    "17000": {
      "op": "SUB"
    },
    "17001": {
      "op": "PUSH3",
      "value": "0x7FFFFF"
    },
    "17005": {
      "op": "NOT"
    },
    "17006": {
      "op": "DUP2"
    },
    "17007": {
      "op": "SLT"
    },
    "17008": {
      "op": "PUSH3",
      "value": "0x7FFFFF"
    },
    "17012": {
      "op": "DUP3"
    },
    "17013": {
      "op": "SGT"
    },
    "17014": {
      "op": "OR"
    },
    "17015": {
      "op": "ISZERO"
    },
    "17016": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "17019": {
      "op": "JUMPI"
    },
    "17020": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "17023": {
      "op": "PUSH2",
      "value": "0x3C97"
    },
    "17026": {
      "jump": "i",
      "op": "JUMP"
    },
    "17027": {
      "op": "JUMPDEST"
    },
    "17028": {
      "op": "PUSH7",
      "value": "0x2A34B1B5B2B91"
    },
    "17036": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "17038": {
      "op": "SHL"
    },
    "17039": {
      "op": "DUP2"
    },
    "17040": {
      "op": "MSTORE"
    },
    "17041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17043": {
      "op": "DUP6"
    },
    "17044": {
      "op": "MLOAD"
    },
    "17045": {
      "op": "PUSH2",
      "value": "0x42A5"
    },
    "17048": {
      "op": "DUP2"
    },
    "17049": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "17051": {
      "op": "DUP6"
    },
    "17052": {
      "op": "ADD"
    },
    "17053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17055": {
      "op": "DUP11"
    },
    "17056": {
      "op": "ADD"
    },
    "17057": {
      "op": "PUSH2",
      "value": "0x38C2"
    },
    "17060": {
      "jump": "i",
      "op": "JUMP"
    },
    "17061": {
      "op": "JUMPDEST"
    },
    "17062": {
      "op": "DUP1"
    },
    "17063": {
      "op": "DUP4"
    },
    "17064": {
      "op": "ADD"
    },
    "17065": {
      "op": "SWAP1"
    },
    "17066": {
      "op": "POP"
    },
    "17067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17069": {
      "op": "PUSH1",
      "value": "0xFD"
    },
    "17071": {
      "op": "SHL"
    },
    "17072": {
      "op": "DUP1"
    },
    "17073": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "17075": {
      "op": "DUP4"
    },
    "17076": {
      "op": "ADD"
    },
    "17077": {
      "op": "MSTORE"
    },
    "17078": {
      "op": "DUP7"
    },
    "17079": {
      "op": "MLOAD"
    },
    "17080": {
      "op": "PUSH2",
      "value": "0x42C8"
    },
    "17083": {
      "op": "DUP2"
    },
    "17084": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "17086": {
      "op": "DUP6"
    },
    "17087": {
      "op": "ADD"
    },
    "17088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17090": {
      "op": "DUP12"
    },
    "17091": {
      "op": "ADD"
    },
    "17092": {
      "op": "PUSH2",
      "value": "0x38C2"
    },
    "17095": {
      "jump": "i",
      "op": "JUMP"
    },
    "17096": {
      "op": "JUMPDEST"
    },
    "17097": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "17099": {
      "op": "SWAP3"
    },
    "17100": {
      "op": "ADD"
    },
    "17101": {
      "op": "SWAP2"
    },
    "17102": {
      "op": "DUP3"
    },
    "17103": {
      "op": "ADD"
    },
    "17104": {
      "op": "MSTORE"
    },
    "17105": {
      "op": "DUP5"
    },
    "17106": {
      "op": "MLOAD"
    },
    "17107": {
      "op": "PUSH2",
      "value": "0x42E3"
    },
    "17110": {
      "op": "DUP2"
    },
    "17111": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "17113": {
      "op": "DUP5"
    },
    "17114": {
      "op": "ADD"
    },
    "17115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17117": {
      "op": "DUP10"
    },
    "17118": {
      "op": "ADD"
    },
    "17119": {
      "op": "PUSH2",
      "value": "0x38C2"
    },
    "17122": {
      "jump": "i",
      "op": "JUMP"
    },
    "17123": {
      "op": "JUMPDEST"
    },
    "17124": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "17126": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "17128": {
      "op": "SHL"
    },
    "17129": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "17131": {
      "op": "SWAP3"
    },
    "17132": {
      "op": "SWAP1"
    },
    "17133": {
      "op": "SWAP2"
    },
    "17134": {
      "op": "ADD"
    },
    "17135": {
      "op": "SWAP2"
    },
    "17136": {
      "op": "DUP3"
    },
    "17137": {
      "op": "ADD"
    },
    "17138": {
      "op": "MSTORE"
    },
    "17139": {
      "op": "DUP4"
    },
    "17140": {
      "op": "MLOAD"
    },
    "17141": {
      "op": "PUSH2",
      "value": "0x4305"
    },
    "17144": {
      "op": "DUP2"
    },
    "17145": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "17147": {
      "op": "DUP5"
    },
    "17148": {
      "op": "ADD"
    },
    "17149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17151": {
      "op": "DUP9"
    },
    "17152": {
      "op": "ADD"
    },
    "17153": {
      "op": "PUSH2",
      "value": "0x38C2"
    },
    "17156": {
      "jump": "i",
      "op": "JUMP"
    },
    "17157": {
      "op": "JUMPDEST"
    },
    "17158": {
      "op": "ADD"
    },
    "17159": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "17161": {
      "op": "ADD"
    },
    "17162": {
      "op": "SWAP7"
    },
    "17163": {
      "op": "SWAP6"
    },
    "17164": {
      "op": "POP"
    },
    "17165": {
      "op": "POP"
    },
    "17166": {
      "op": "POP"
    },
    "17167": {
      "op": "POP"
    },
    "17168": {
      "op": "POP"
    },
    "17169": {
      "op": "POP"
    },
    "17170": {
      "jump": "o",
      "op": "JUMP"
    },
    "17171": {
      "op": "JUMPDEST"
    },
    "17172": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17174": {
      "op": "DUP3"
    },
    "17175": {
      "op": "GT"
    },
    "17176": {
      "op": "ISZERO"
    },
    "17177": {
      "op": "PUSH2",
      "value": "0x3027"
    },
    "17180": {
      "op": "JUMPI"
    },
    "17181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17183": {
      "op": "DUP2"
    },
    "17184": {
      "op": "DUP2"
    },
    "17185": {
      "op": "MSTORE"
    },
    "17186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17188": {
      "op": "DUP2"
    },
    "17189": {
      "op": "KECCAK256"
    },
    "17190": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17192": {
      "op": "DUP6"
    },
    "17193": {
      "op": "ADD"
    },
    "17194": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "17196": {
      "op": "SHR"
    },
    "17197": {
      "op": "DUP2"
    },
    "17198": {
      "op": "ADD"
    },
    "17199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17201": {
      "op": "DUP7"
    },
    "17202": {
      "op": "LT"
    },
    "17203": {
      "op": "ISZERO"
    },
    "17204": {
      "op": "PUSH2",
      "value": "0x433A"
    },
    "17207": {
      "op": "JUMPI"
    },
    "17208": {
      "op": "POP"
    },
    "17209": {
      "op": "DUP1"
    },
    "17210": {
      "op": "JUMPDEST"
    },
    "17211": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17213": {
      "op": "DUP6"
    },
    "17214": {
      "op": "ADD"
    },
    "17215": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "17217": {
      "op": "SHR"
    },
    "17218": {
      "op": "DUP3"
    },
    "17219": {
      "op": "ADD"
    },
    "17220": {
      "op": "SWAP2"
    },
    "17221": {
      "op": "POP"
    },
    "17222": {
      "op": "JUMPDEST"
    },
    "17223": {
      "op": "DUP2"
    },
    "17224": {
      "op": "DUP2"
    },
    "17225": {
      "op": "LT"
    },
    "17226": {
      "op": "ISZERO"
    },
    "17227": {
      "op": "PUSH2",
      "value": "0x4359"
    },
    "17230": {
      "op": "JUMPI"
    },
    "17231": {
      "op": "DUP3"
    },
    "17232": {
      "op": "DUP2"
    },
    "17233": {
      "op": "SSTORE"
    },
    "17234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17236": {
      "op": "ADD"
    },
    "17237": {
      "op": "PUSH2",
      "value": "0x4346"
    },
    "17240": {
      "op": "JUMP"
    },
    "17241": {
      "op": "JUMPDEST"
    },
    "17242": {
      "op": "POP"
    },
    "17243": {
      "op": "POP"
    },
    "17244": {
      "op": "POP"
    },
    "17245": {
      "op": "POP"
    },
    "17246": {
      "op": "POP"
    },
    "17247": {
      "op": "POP"
    },
    "17248": {
      "jump": "o",
      "op": "JUMP"
    },
    "17249": {
      "op": "JUMPDEST"
    },
    "17250": {
      "op": "DUP2"
    },
    "17251": {
      "op": "MLOAD"
    },
    "17252": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "17261": {
      "op": "DUP2"
    },
    "17262": {
      "op": "GT"
    },
    "17263": {
      "op": "ISZERO"
    },
    "17264": {
      "op": "PUSH2",
      "value": "0x437B"
    },
    "17267": {
      "op": "JUMPI"
    },
    "17268": {
      "op": "PUSH2",
      "value": "0x437B"
    },
    "17271": {
      "op": "PUSH2",
      "value": "0x3A75"
    },
    "17274": {
      "jump": "i",
      "op": "JUMP"
    },
    "17275": {
      "op": "JUMPDEST"
    },
    "17276": {
      "op": "PUSH2",
      "value": "0x438F"
    },
    "17279": {
      "op": "DUP2"
    },
    "17280": {
      "op": "PUSH2",
      "value": "0x4389"
    },
    "17283": {
      "op": "DUP5"
    },
    "17284": {
      "op": "SLOAD"
    },
    "17285": {
      "op": "PUSH2",
      "value": "0x3C63"
    },
    "17288": {
      "jump": "i",
      "op": "JUMP"
    },
    "17289": {
      "op": "JUMPDEST"
    },
    "17290": {
      "op": "DUP5"
    },
    "17291": {
      "op": "PUSH2",
      "value": "0x4313"
    },
    "17294": {
      "jump": "i",
      "op": "JUMP"
    },
    "17295": {
      "op": "JUMPDEST"
    },
    "17296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17298": {
      "op": "DUP1"
    },
    "17299": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17301": {
      "op": "DUP4"
    },
    "17302": {
      "op": "GT"
    },
    "17303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17305": {
      "op": "DUP2"
    },
    "17306": {
      "op": "EQ"
    },
    "17307": {
      "op": "PUSH2",
      "value": "0x43C4"
    },
    "17310": {
      "op": "JUMPI"
    },
    "17311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17313": {
      "op": "DUP5"
    },
    "17314": {
      "op": "ISZERO"
    },
    "17315": {
      "op": "PUSH2",
      "value": "0x43AC"
    },
    "17318": {
      "op": "JUMPI"
    },
    "17319": {
      "op": "POP"
    },
    "17320": {
      "op": "DUP6"
    },
    "17321": {
      "op": "DUP4"
    },
    "17322": {
      "op": "ADD"
    },
    "17323": {
      "op": "MLOAD"
    },
    "17324": {
      "op": "JUMPDEST"
    },
    "17325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17327": {
      "op": "NOT"
    },
    "17328": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "17330": {
      "op": "DUP7"
    },
    "17331": {
      "op": "SWAP1"
    },
    "17332": {
      "op": "SHL"
    },
    "17333": {
      "op": "SHR"
    },
    "17334": {
      "op": "NOT"
    },
    "17335": {
      "op": "AND"
    },
    "17336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17338": {
      "op": "DUP6"
    },
    "17339": {
      "op": "SWAP1"
    },
    "17340": {
      "op": "SHL"
    },
    "17341": {
      "op": "OR"
    },
    "17342": {
      "op": "DUP6"
    },
    "17343": {
      "op": "SSTORE"
    },
    "17344": {
      "op": "PUSH2",
      "value": "0x4359"
    },
    "17347": {
      "op": "JUMP"
    },
    "17348": {
      "op": "JUMPDEST"
    },
    "17349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17351": {
      "op": "DUP6"
    },
    "17352": {
      "op": "DUP2"
    },
    "17353": {
      "op": "MSTORE"
    },
    "17354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17356": {
      "op": "DUP2"
    },
    "17357": {
      "op": "KECCAK256"
    },
    "17358": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17360": {
      "op": "NOT"
    },
    "17361": {
      "op": "DUP7"
    },
    "17362": {
      "op": "AND"
    },
    "17363": {
      "op": "SWAP2"
    },
    "17364": {
      "op": "JUMPDEST"
    },
    "17365": {
      "op": "DUP3"
    },
    "17366": {
      "op": "DUP2"
    },
    "17367": {
      "op": "LT"
    },
    "17368": {
      "op": "ISZERO"
    },
    "17369": {
      "op": "PUSH2",
      "value": "0x43F3"
    },
    "17372": {
      "op": "JUMPI"
    },
    "17373": {
      "op": "DUP9"
    },
    "17374": {
      "op": "DUP7"
    },
    "17375": {
      "op": "ADD"
    },
    "17376": {
      "op": "MLOAD"
    },
    "17377": {
      "op": "DUP3"
    },
    "17378": {
      "op": "SSTORE"
    },
    "17379": {
      "op": "SWAP5"
    },
    "17380": {
      "op": "DUP5"
    },
    "17381": {
      "op": "ADD"
    },
    "17382": {
      "op": "SWAP5"
    },
    "17383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17385": {
      "op": "SWAP1"
    },
    "17386": {
      "op": "SWAP2"
    },
    "17387": {
      "op": "ADD"
    },
    "17388": {
      "op": "SWAP1"
    },
    "17389": {
      "op": "DUP5"
    },
    "17390": {
      "op": "ADD"
    },
    "17391": {
      "op": "PUSH2",
      "value": "0x43D4"
    },
    "17394": {
      "op": "JUMP"
    },
    "17395": {
      "op": "JUMPDEST"
    },
    "17396": {
      "op": "POP"
    },
    "17397": {
      "op": "DUP6"
    },
    "17398": {
      "op": "DUP3"
    },
    "17399": {
      "op": "LT"
    },
    "17400": {
      "op": "ISZERO"
    },
    "17401": {
      "op": "PUSH2",
      "value": "0x4411"
    },
    "17404": {
      "op": "JUMPI"
    },
    "17405": {
      "op": "DUP8"
    },
    "17406": {
      "op": "DUP6"
    },
    "17407": {
      "op": "ADD"
    },
    "17408": {
      "op": "MLOAD"
    },
    "17409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17411": {
      "op": "NOT"
    },
    "17412": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "17414": {
      "op": "DUP9"
    },
    "17415": {
      "op": "SWAP1"
    },
    "17416": {
      "op": "SHL"
    },
    "17417": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "17419": {
      "op": "AND"
    },
    "17420": {
      "op": "SHR"
    },
    "17421": {
      "op": "NOT"
    },
    "17422": {
      "op": "AND"
    },
    "17423": {
      "op": "DUP2"
    },
    "17424": {
      "op": "SSTORE"
    },
    "17425": {
      "op": "JUMPDEST"
    },
    "17426": {
      "op": "POP"
    },
    "17427": {
      "op": "POP"
    },
    "17428": {
      "op": "POP"
    },
    "17429": {
      "op": "POP"
    },
    "17430": {
      "op": "POP"
    },
    "17431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17433": {
      "op": "SWAP1"
    },
    "17434": {
      "op": "DUP2"
    },
    "17435": {
      "op": "SHL"
    },
    "17436": {
      "op": "ADD"
    },
    "17437": {
      "op": "SWAP1"
    },
    "17438": {
      "op": "SSTORE"
    },
    "17439": {
      "op": "POP"
    },
    "17440": {
      "jump": "o",
      "op": "JUMP"
    },
    "17441": {
      "op": "JUMPDEST"
    },
    "17442": {
      "op": "PUSH2",
      "value": "0x542D"
    },
    "17445": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "17447": {
      "op": "SHL"
    },
    "17448": {
      "op": "DUP2"
    },
    "17449": {
      "op": "MSTORE"
    },
    "17450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17452": {
      "op": "DUP6"
    },
    "17453": {
      "op": "MLOAD"
    },
    "17454": {
      "op": "PUSH2",
      "value": "0x443E"
    },
    "17457": {
      "op": "DUP2"
    },
    "17458": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17460": {
      "op": "DUP6"
    },
    "17461": {
      "op": "ADD"
    },
    "17462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17464": {
      "op": "DUP11"
    },
    "17465": {
      "op": "ADD"
    },
    "17466": {
      "op": "PUSH2",
      "value": "0x38C2"
    },
    "17469": {
      "jump": "i",
      "op": "JUMP"
    },
    "17470": {
      "op": "JUMPDEST"
    },
    "17471": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "17473": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "17475": {
      "op": "SHL"
    },
    "17476": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17478": {
      "op": "SWAP2"
    },
    "17479": {
      "op": "DUP5"
    },
    "17480": {
      "op": "ADD"
    },
    "17481": {
      "op": "SWAP2"
    },
    "17482": {
      "op": "DUP3"
    },
    "17483": {
      "op": "ADD"
    },
    "17484": {
      "op": "MSTORE"
    },
    "17485": {
      "op": "DUP6"
    },
    "17486": {
      "op": "MLOAD"
    },
    "17487": {
      "op": "PUSH2",
      "value": "0x445F"
    },
    "17490": {
      "op": "DUP2"
    },
    "17491": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "17493": {
      "op": "DUP5"
    },
    "17494": {
      "op": "ADD"
    },
    "17495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17497": {
      "op": "DUP11"
    },
    "17498": {
      "op": "ADD"
    },
    "17499": {
      "op": "PUSH2",
      "value": "0x38C2"
    },
    "17502": {
      "jump": "i",
      "op": "JUMP"
    },
    "17503": {
      "op": "JUMPDEST"
    },
    "17504": {
      "op": "DUP1"
    },
    "17505": {
      "op": "DUP3"
    },
    "17506": {
      "op": "ADD"
    },
    "17507": {
      "op": "SWAP2"
    },
    "17508": {
      "op": "POP"
    },
    "17509": {
      "op": "POP"
    },
    "17510": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "17512": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "17514": {
      "op": "SHL"
    },
    "17515": {
      "op": "DUP1"
    },
    "17516": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "17518": {
      "op": "DUP4"
    },
    "17519": {
      "op": "ADD"
    },
    "17520": {
      "op": "MSTORE"
    },
    "17521": {
      "op": "DUP6"
    },
    "17522": {
      "op": "MLOAD"
    },
    "17523": {
      "op": "PUSH2",
      "value": "0x4483"
    },
    "17526": {
      "op": "DUP2"
    },
    "17527": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17529": {
      "op": "DUP6"
    },
    "17530": {
      "op": "ADD"
    },
    "17531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17533": {
      "op": "DUP11"
    },
    "17534": {
      "op": "ADD"
    },
    "17535": {
      "op": "PUSH2",
      "value": "0x38C2"
    },
    "17538": {
      "jump": "i",
      "op": "JUMP"
    },
    "17539": {
      "op": "JUMPDEST"
    },
    "17540": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17542": {
      "op": "SWAP3"
    },
    "17543": {
      "op": "ADD"
    },
    "17544": {
      "op": "SWAP2"
    },
    "17545": {
      "op": "DUP3"
    },
    "17546": {
      "op": "ADD"
    },
    "17547": {
      "op": "MSTORE"
    },
    "17548": {
      "op": "DUP4"
    },
    "17549": {
      "op": "MLOAD"
    },
    "17550": {
      "op": "PUSH2",
      "value": "0x449E"
    },
    "17553": {
      "op": "DUP2"
    },
    "17554": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "17556": {
      "op": "DUP5"
    },
    "17557": {
      "op": "ADD"
    },
    "17558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17560": {
      "op": "DUP9"
    },
    "17561": {
      "op": "ADD"
    },
    "17562": {
      "op": "PUSH2",
      "value": "0x38C2"
    },
    "17565": {
      "jump": "i",
      "op": "JUMP"
    },
    "17566": {
      "op": "JUMPDEST"
    },
    "17567": {
      "op": "ADD"
    },
    "17568": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "17570": {
      "op": "ADD"
    },
    "17571": {
      "op": "SWAP7"
    },
    "17572": {
      "op": "SWAP6"
    },
    "17573": {
      "op": "POP"
    },
    "17574": {
      "op": "POP"
    },
    "17575": {
      "op": "POP"
    },
    "17576": {
      "op": "POP"
    },
    "17577": {
      "op": "POP"
    },
    "17578": {
      "op": "POP"
    },
    "17579": {
      "jump": "o",
      "op": "JUMP"
    },
    "17580": {
      "op": "JUMPDEST"
    },
    "17581": {
      "op": "PUSH7",
      "value": "0x2930B733B2B91"
    },
    "17589": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "17591": {
      "op": "SHL"
    },
    "17592": {
      "op": "DUP2"
    },
    "17593": {
      "op": "MSTORE"
    },
    "17594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17596": {
      "op": "DUP6"
    },
    "17597": {
      "op": "MLOAD"
    },
    "17598": {
      "op": "PUSH2",
      "value": "0x42A5"
    },
    "17601": {
      "op": "DUP2"
    },
    "17602": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "17604": {
      "op": "DUP6"
    },
    "17605": {
      "op": "ADD"
    },
    "17606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17608": {
      "op": "DUP11"
    },
    "17609": {
      "op": "ADD"
    },
    "17610": {
      "op": "PUSH2",
      "value": "0x38C2"
    },
    "17613": {
      "jump": "i",
      "op": "JUMP"
    },
    "17614": {
      "op": "JUMPDEST"
    },
    "17615": {
      "op": "PUSH2",
      "value": "0x522D"
    },
    "17618": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "17620": {
      "op": "SHL"
    },
    "17621": {
      "op": "DUP2"
    },
    "17622": {
      "op": "MSTORE"
    },
    "17623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17625": {
      "op": "DUP6"
    },
    "17626": {
      "op": "MLOAD"
    },
    "17627": {
      "op": "PUSH2",
      "value": "0x443E"
    },
    "17630": {
      "op": "DUP2"
    },
    "17631": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17633": {
      "op": "DUP6"
    },
    "17634": {
      "op": "ADD"
    },
    "17635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17637": {
      "op": "DUP11"
    },
    "17638": {
      "op": "ADD"
    },
    "17639": {
      "op": "PUSH2",
      "value": "0x38C2"
    },
    "17642": {
      "jump": "i",
      "op": "JUMP"
    },
    "17643": {
      "op": "JUMPDEST"
    },
    "17644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17648": {
      "op": "DUP3"
    },
    "17649": {
      "op": "DUP5"
    },
    "17650": {
      "op": "SUB"
    },
    "17651": {
      "op": "SLT"
    },
    "17652": {
      "op": "ISZERO"
    },
    "17653": {
      "op": "PUSH2",
      "value": "0x44FD"
    },
    "17656": {
      "op": "JUMPI"
    },
    "17657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17659": {
      "op": "DUP1"
    },
    "17660": {
      "op": "REVERT"
    },
    "17661": {
      "op": "JUMPDEST"
    },
    "17662": {
      "op": "DUP2"
    },
    "17663": {
      "op": "MLOAD"
    },
    "17664": {
      "op": "PUSH2",
      "value": "0x71A"
    },
    "17667": {
      "op": "DUP2"
    },
    "17668": {
      "op": "PUSH2",
      "value": "0x3B3A"
    },
    "17671": {
      "jump": "i",
      "op": "JUMP"
    },
    "17672": {
      "op": "JUMPDEST"
    },
    "17673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17679": {
      "op": "SHL"
    },
    "17680": {
      "op": "SUB"
    },
    "17681": {
      "op": "DUP3"
    },
    "17682": {
      "op": "DUP2"
    },
    "17683": {
      "op": "AND"
    },
    "17684": {
      "op": "DUP3"
    },
    "17685": {
      "op": "DUP3"
    },
    "17686": {
      "op": "AND"
    },
    "17687": {
      "op": "SUB"
    },
    "17688": {
      "op": "SWAP1"
    },
    "17689": {
      "op": "DUP1"
    },
    "17690": {
      "op": "DUP3"
    },
    "17691": {
      "op": "GT"
    },
    "17692": {
      "op": "ISZERO"
    },
    "17693": {
      "op": "PUSH2",
      "value": "0x3F22"
    },
    "17696": {
      "op": "JUMPI"
    },
    "17697": {
      "op": "PUSH2",
      "value": "0x3F22"
    },
    "17700": {
      "op": "PUSH2",
      "value": "0x3C97"
    },
    "17703": {
      "jump": "i",
      "op": "JUMP"
    },
    "17704": {
      "op": "JUMPDEST"
    },
    "17705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17707": {
      "op": "DUP3"
    },
    "17708": {
      "op": "MLOAD"
    },
    "17709": {
      "op": "PUSH2",
      "value": "0x453A"
    },
    "17712": {
      "op": "DUP2"
    },
    "17713": {
      "op": "DUP5"
    },
    "17714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17716": {
      "op": "DUP8"
    },
    "17717": {
      "op": "ADD"
    },
    "17718": {
      "op": "PUSH2",
      "value": "0x38C2"
    },
    "17721": {
      "jump": "i",
      "op": "JUMP"
    },
    "17722": {
      "op": "JUMPDEST"
    },
    "17723": {
      "op": "SWAP2"
    },
    "17724": {
      "op": "SWAP1"
    },
    "17725": {
      "op": "SWAP2"
    },
    "17726": {
      "op": "ADD"
    },
    "17727": {
      "op": "SWAP3"
    },
    "17728": {
      "op": "SWAP2"
    },
    "17729": {
      "op": "POP"
    },
    "17730": {
      "op": "POP"
    },
    "17731": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "3b25ceb244d6a81c52dfcd483af1c6e77880d360",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8;\n\nimport \"../interfaces/INonfungiblePositionManager.sol\";\nimport \"../interfaces/IUniswapV3Factory.sol\";\nimport \"../interfaces/IUniswapV3Pool.sol\";\nimport \"./openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"./openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./openzeppelin-solidity/contracts/utils/Strings.sol\";\nimport \"./openzeppelin-solidity/contracts/security/ReentrancyGuard.sol\";\nimport \"./lib/LiquidityAmounts.sol\";\nimport \"./lib/TickMath.sol\";\nimport \"../interfaces/IAaveOracle.sol\";\nimport \"../interfaces/IAaveOracle.sol\";\n\n/// @notice Tokenize a Uniswap V3 NFT position\ncontract TokenisableRange is ERC20(\"\", \"\"), ReentrancyGuard {\n    using SafeERC20 for ERC20;\n    /// EVENTS\n    event InitTR(\n        address asset0,\n        address asset1,\n        uint128 startX10,\n        uint128 endX10\n    );\n    event Deposit(address sender, uint trAmount);\n    event Withdraw(address sender, uint trAmount);\n    event ClaimFees(uint fee0, uint fee1);\n\n    /// VARIABLES\n\n    int24 public lowerTick;\n    int24 public upperTick;\n    uint24 public feeTier;\n\n    uint256 public tokenId;\n    uint256 public fee0;\n    uint256 public fee1;\n\n    struct ASSET {\n        ERC20 token;\n        uint8 decimals;\n    }\n\n    ASSET public TOKEN0;\n    ASSET public TOKEN1;\n    IAaveOracle public ORACLE;\n\n    string _name;\n    string _symbol;\n\n    enum ProxyState {\n        INIT_PROXY,\n        INIT_LP,\n        READY\n    }\n    ProxyState public status;\n    address private creator;\n\n    uint128 public liquidity;\n    // @notice deprecated, keep to avoid beacon storage slot overwriting errors\n    address public TREASURY_DEPRECATED =\n        0x22Cc3f665ba4C898226353B672c5123c58751692;\n    uint public treasuryFee_deprecated = 20;\n\n    // These are constant across chains - https://docs.uniswap.org/protocol/reference/deployments\n    INonfungiblePositionManager public constant POS_MGR =\n        INonfungiblePositionManager(0xC36442b4a4522E871399CD717aBDD847Ab11FE88);\n    IUniswapV3Factory public constant V3_FACTORY =\n        IUniswapV3Factory(0x1F98431c8aD98523631AE4a59f267346ea31F984);\n    address public constant treasury =\n        0x22Cc3f665ba4C898226353B672c5123c58751692;\n    uint public constant treasuryFee = 20;\n\n    /// @notice Babylonian method for sqrt\n    /// @param x sqrt parameter\n    /// @return y Square root\n    function sqrt(uint x) internal pure returns (uint y) {\n        uint z = (x + 1) / 2;\n        y = x;\n        while (z < y) {\n            y = z;\n            z = (x / z + z) / 2;\n        }\n    }\n\n    /// @notice Store range parameters\n    /// @param _oracle Address of the IAaveOracle interface of the ROE lending pool\n    /// @param asset0 Quote token address\n    /// @param asset1 Base token address\n    /// @param startX10 Range lower price scaled by 1e10\n    /// @param endX10 Range high price scaled by 1e10\n    /// @param startName Name of the range lower bound\n    /// @param endName Name of the range higher bound\n    /// @param isTicker Range is single tick liquidity around upperTick/startX10/startName\n    function initProxy(\n        IAaveOracle _oracle,\n        ERC20 asset0,\n        ERC20 asset1,\n        uint128 startX10,\n        uint128 endX10,\n        string memory startName,\n        string memory endName,\n        bool isTicker\n    ) external {\n        require(address(_oracle) != address(0x0), \"Invalid oracle\");\n        require(status == ProxyState.INIT_PROXY, \"!InitProxy\");\n        creator = msg.sender;\n        status = ProxyState.INIT_LP;\n        ORACLE = _oracle;\n\n        TOKEN0.token = asset0;\n        TOKEN0.decimals = asset0.decimals();\n        TOKEN1.token = asset1;\n        TOKEN1.decimals = asset1.decimals();\n        string memory quoteSymbol = asset0.symbol();\n        string memory baseSymbol = asset1.symbol();\n\n        int24 _upperTick = TickMath.getTickAtSqrtRatio(\n            uint160(\n                2 ** 48 *\n                    sqrt(\n                        ((2 ** 96 * (10 ** TOKEN1.decimals)) * 1e10) /\n                            (uint256(startX10) * 10 ** TOKEN0.decimals)\n                    )\n            )\n        );\n        int24 _lowerTick = TickMath.getTickAtSqrtRatio(\n            uint160(\n                2 ** 48 *\n                    sqrt(\n                        ((2 ** 96 * (10 ** TOKEN1.decimals)) * 1e10) /\n                            (uint256(endX10) * 10 ** TOKEN0.decimals)\n                    )\n            )\n        );\n\n        if (isTicker) {\n            feeTier = 5;\n            int24 midleTick;\n            midleTick = (_upperTick + _lowerTick) / 2;\n            _upperTick =\n                (midleTick + int24(feeTier)) -\n                ((midleTick + int24(feeTier)) % int24(feeTier * 2));\n            _lowerTick = _upperTick - int24(feeTier) - int24(feeTier);\n            _name = string(\n                abi.encodePacked(\n                    \"Ticker \",\n                    baseSymbol,\n                    \" \",\n                    quoteSymbol,\n                    \" \",\n                    startName,\n                    \"-\",\n                    endName\n                )\n            );\n            _symbol = string(\n                abi.encodePacked(\n                    \"T-\",\n                    startName,\n                    \"_\",\n                    endName,\n                    \"-\",\n                    baseSymbol,\n                    \"-\",\n                    quoteSymbol\n                )\n            );\n        } else {\n            feeTier = 5;\n            _lowerTick =\n                (_lowerTick + int24(feeTier)) -\n                ((_lowerTick + int24(feeTier)) % int24(feeTier * 2));\n            _upperTick =\n                (_upperTick + int24(feeTier)) -\n                ((_upperTick + int24(feeTier)) % int24(feeTier * 2));\n            _name = string(\n                abi.encodePacked(\n                    \"Ranger \",\n                    baseSymbol,\n                    \" \",\n                    quoteSymbol,\n                    \" \",\n                    startName,\n                    \"-\",\n                    endName\n                )\n            );\n            _symbol = string(\n                abi.encodePacked(\n                    \"R-\",\n                    startName,\n                    \"_\",\n                    endName,\n                    \"-\",\n                    baseSymbol,\n                    \"-\",\n                    quoteSymbol\n                )\n            );\n        }\n        lowerTick = _lowerTick;\n        upperTick = _upperTick;\n        emit InitTR(address(asset0), address(asset1), startX10, endX10);\n    }\n\n    /// @notice Get the name of this contract token\n    /// @dev Override name, symbol and decimals from ERC20 inheritance\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /// @notice Get the symbol of this contract token\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /// @notice Initialize a TokenizableRange by adding assets in the underlying Uniswap V3 position\n    /// @param n0 Amount of quote token added\n    /// @param n1 Amount of base token added\n    /// @notice The token amounts must be 95% correct or this will fail the Uniswap slippage check\n    function init(uint n0, uint n1) external {\n        require(status == ProxyState.INIT_LP, \"!InitLP\");\n        require(msg.sender == creator, \"Unallowed call\");\n        status = ProxyState.READY;\n        TOKEN0.token.safeTransferFrom(msg.sender, address(this), n0);\n        TOKEN1.token.safeTransferFrom(msg.sender, address(this), n1);\n        TOKEN0.token.safeIncreaseAllowance(address(POS_MGR), n0);\n        TOKEN1.token.safeIncreaseAllowance(address(POS_MGR), n1);\n        (tokenId, liquidity, , ) = POS_MGR.mint(\n            INonfungiblePositionManager.MintParams({\n                token0: address(TOKEN0.token),\n                token1: address(TOKEN1.token),\n                fee: feeTier * 100,\n                tickLower: lowerTick,\n                tickUpper: upperTick,\n                amount0Desired: n0,\n                amount1Desired: n1,\n                amount0Min: (n0 * 95) / 100,\n                amount1Min: (n1 * 95) / 100,\n                recipient: address(this),\n                deadline: block.timestamp\n            })\n        );\n\n        // Transfer remaining assets back to user\n        TOKEN0.token.safeTransfer(\n            msg.sender,\n            TOKEN0.token.balanceOf(address(this))\n        );\n        TOKEN1.token.safeTransfer(\n            msg.sender,\n            TOKEN1.token.balanceOf(address(this))\n        );\n        _mint(msg.sender, 1e18);\n        emit Deposit(msg.sender, 1e18);\n    }\n\n    /// @notice Claim the accumulated Uniswap V3 trading fees\n    function claimFee() public {\n        (uint256 newFee0, uint256 newFee1) = POS_MGR.collect(\n            INonfungiblePositionManager.CollectParams({\n                tokenId: tokenId,\n                recipient: address(this),\n                amount0Max: type(uint128).max,\n                amount1Max: type(uint128).max\n            })\n        );\n        // If there's no new fees generated, skip compounding logic;\n        if ((newFee0 == 0) && (newFee1 == 0)) return;\n        uint tf0 = (newFee0 * treasuryFee) / 100;\n        uint tf1 = (newFee1 * treasuryFee) / 100;\n        if (tf0 > 0) TOKEN0.token.safeTransfer(treasury, tf0);\n        if (tf1 > 0) TOKEN1.token.safeTransfer(treasury, tf1);\n\n        fee0 = fee0 + newFee0 - tf0;\n        fee1 = fee1 + newFee1 - tf1;\n\n        // Calculate expected balance,\n        (uint256 bal0, uint256 bal1) = returnExpectedBalanceWithoutFees(0, 0);\n\n        // If accumulated more than 1% worth of fees, compound by adding fees to Uniswap position\n        if ((fee0 * 100 > bal0) && (fee1 * 100 > bal1)) {\n            TOKEN0.token.safeIncreaseAllowance(address(POS_MGR), fee0);\n            TOKEN1.token.safeIncreaseAllowance(address(POS_MGR), fee1);\n            (uint128 newLiquidity, uint256 added0, uint256 added1) = POS_MGR\n                .increaseLiquidity(\n                    INonfungiblePositionManager.IncreaseLiquidityParams({\n                        tokenId: tokenId,\n                        amount0Desired: fee0,\n                        amount1Desired: fee1,\n                        amount0Min: 0,\n                        amount1Min: 0,\n                        deadline: block.timestamp\n                    })\n                );\n            // check slippage: validate against value since token amounts can move widely\n            uint token0Price = ORACLE.getAssetPrice(address(TOKEN0.token));\n            uint token1Price = ORACLE.getAssetPrice(address(TOKEN1.token));\n            uint addedValue = (added0 * token0Price) /\n                10 ** TOKEN0.decimals +\n                (added1 * token1Price) /\n                10 ** TOKEN1.decimals;\n            uint totalValue = (bal0 * token0Price) /\n                10 ** TOKEN0.decimals +\n                (bal1 * token1Price) /\n                10 ** TOKEN1.decimals;\n            uint liquidityValue = (totalValue * newLiquidity) / liquidity;\n            require(\n                addedValue > (liquidityValue * 95) / 100 &&\n                    liquidityValue > (addedValue * 95) / 100,\n                \"TR: Claim Fee Slippage\"\n            );\n            fee0 -= added0;\n            fee1 -= added1;\n            liquidity = liquidity + newLiquidity;\n        }\n        emit ClaimFees(newFee0, newFee1);\n    }\n\n    /// @notice Deposit assets into the range\n    /// @param n0 Amount of quote asset\n    /// @param n1 Amount of base asset\n    /// @return lpAmt Amount of LP tokens created\n    function deposit(\n        uint256 n0,\n        uint256 n1\n    ) external nonReentrant returns (uint256 lpAmt) {\n        // Once all assets were withdrawn after initialisation, this is considered closed\n        // Prevents TR oracle values from being too manipulatable by emptying the range and redepositing\n        require(totalSupply() > 0, \"TR Closed\");\n\n        claimFee();\n        TOKEN0.token.transferFrom(msg.sender, address(this), n0);\n        TOKEN1.token.transferFrom(msg.sender, address(this), n1);\n\n        uint newFee0;\n        uint newFee1;\n        // Calculate proportion of deposit that goes to pending fee pool, useful to deposit exact amount of liquidity and fully repay a position\n        // Cannot repay only one side, if fees are both 0, or if one side is missing, skip adding fees here\n        // if ( fee0+fee1 == 0 || (n0 == 0 && fee0 > 0) || (n1 == 0 && fee1 > 0) ) skip\n        // DeMorgan: !( (n0 == 0 && fee0 > 0) || (n1 == 0 && fee1 > 0) ) = !(n0 == 0 && fee0 > 0) && !(n0 == 0 && fee1 > 0)\n        if (fee0 + fee1 > 0 && (n0 > 0 || fee0 == 0) && (n1 > 0 || fee1 == 0)) {\n            address pool = V3_FACTORY.getPool(\n                address(TOKEN0.token),\n                address(TOKEN1.token),\n                feeTier * 100\n            );\n            (uint160 sqrtPriceX96, , , , , , ) = IUniswapV3Pool(pool).slot0();\n            (uint256 token0Amount, uint256 token1Amount) = LiquidityAmounts\n                .getAmountsForLiquidity(\n                    sqrtPriceX96,\n                    TickMath.getSqrtRatioAtTick(lowerTick),\n                    TickMath.getSqrtRatioAtTick(upperTick),\n                    liquidity\n                );\n            if (token0Amount + fee0 > 0)\n                newFee0 = (n0 * fee0) / (token0Amount + fee0);\n            if (token1Amount + fee1 > 0)\n                newFee1 = (n1 * fee1) / (token1Amount + fee1);\n            fee0 += newFee0;\n            fee1 += newFee1;\n            n0 -= newFee0;\n            n1 -= newFee1;\n        }\n\n        TOKEN0.token.safeIncreaseAllowance(address(POS_MGR), n0);\n        TOKEN1.token.safeIncreaseAllowance(address(POS_MGR), n1);\n\n        // New liquidity is indeed the amount of liquidity added, not the total, despite being unclear in Uniswap doc\n        (uint128 newLiquidity, uint256 added0, uint256 added1) = POS_MGR\n            .increaseLiquidity(\n                INonfungiblePositionManager.IncreaseLiquidityParams({\n                    tokenId: tokenId,\n                    amount0Desired: n0,\n                    amount1Desired: n1,\n                    amount0Min: (n0 * 95) / 100,\n                    amount1Min: (n1 * 95) / 100,\n                    deadline: block.timestamp\n                })\n            );\n\n        uint256 feeLiquidity;\n\n        // Stack too deep, so localising some variables for feeLiquidity calculations\n        // If we already clawed back fees earlier, do nothing, else we need to adjust returned liquidity\n        if (newFee0 == 0 && newFee1 == 0) {\n            uint256 TOKEN0_PRICE = ORACLE.getAssetPrice(address(TOKEN0.token));\n            uint256 TOKEN1_PRICE = ORACLE.getAssetPrice(address(TOKEN1.token));\n            require(\n                TOKEN0_PRICE > 0 && TOKEN1_PRICE > 0,\n                \"Invalid Oracle Price\"\n            );\n            // Calculate the equivalent liquidity amount of the non-yet compounded fees\n            // Assume linearity for liquidity in same tick range; calculate feeLiquidity equivalent and consider it part of base liquidity\n            feeLiquidity =\n                (newLiquidity *\n                    (((fee0 * TOKEN0_PRICE) / 10 ** TOKEN0.decimals) +\n                        ((fee1 * TOKEN1_PRICE) / 10 ** TOKEN1.decimals))) /\n                (((added0 * TOKEN0_PRICE) / 10 ** TOKEN0.decimals) +\n                    ((added1 * TOKEN1_PRICE) / 10 ** TOKEN1.decimals));\n        }\n\n        lpAmt = (totalSupply() * newLiquidity) / (liquidity + feeLiquidity);\n        liquidity = liquidity + newLiquidity;\n\n        _mint(msg.sender, lpAmt);\n        TOKEN0.token.safeTransfer(msg.sender, n0 - added0);\n        TOKEN1.token.safeTransfer(msg.sender, n1 - added1);\n        emit Deposit(msg.sender, lpAmt);\n    }\n\n    /// @notice Withdraw assets from a range\n    /// @param lp Amount of tokens withdrawn\n    /// @param amount0Min Minimum amount of quote token withdrawn\n    /// @param amount1Min Minimum amount of base token withdrawn\n    function withdraw(\n        uint256 lp,\n        uint256 amount0Min,\n        uint256 amount1Min\n    ) external nonReentrant returns (uint256 removed0, uint256 removed1) {\n        claimFee();\n        uint removedLiquidity = (uint(liquidity) * lp) / totalSupply();\n        (removed0, removed1) = POS_MGR.decreaseLiquidity(\n            INonfungiblePositionManager.DecreaseLiquidityParams({\n                tokenId: tokenId,\n                liquidity: uint128(removedLiquidity),\n                amount0Min: amount0Min,\n                amount1Min: amount1Min,\n                deadline: block.timestamp\n            })\n        );\n        liquidity = uint128(uint256(liquidity) - removedLiquidity);\n\n        POS_MGR.collect(\n            INonfungiblePositionManager.CollectParams({\n                tokenId: tokenId,\n                recipient: msg.sender,\n                amount0Max: uint128(removed0),\n                amount1Max: uint128(removed1)\n            })\n        );\n        // Handle uncompounded fees\n        if (fee0 > 0) {\n            TOKEN0.token.safeTransfer(msg.sender, (fee0 * lp) / totalSupply());\n            removed0 += (fee0 * lp) / totalSupply();\n            fee0 -= (fee0 * lp) / totalSupply();\n        }\n        if (fee1 > 0) {\n            TOKEN1.token.safeTransfer(msg.sender, (fee1 * lp) / totalSupply());\n            removed1 += (fee1 * lp) / totalSupply();\n            fee1 -= (fee1 * lp) / totalSupply();\n        }\n        _burn(msg.sender, lp);\n        emit Withdraw(msg.sender, lp);\n    }\n\n    /// @notice Calculate the balance of underlying assets based on the assets price\n    /// @param TOKEN0_PRICE Base token price\n    /// @param TOKEN1_PRICE Quote token price\n    function returnExpectedBalanceWithoutFees(\n        uint TOKEN0_PRICE,\n        uint TOKEN1_PRICE\n    ) internal view returns (uint256 amt0, uint256 amt1) {\n        // if 0 get price from oracle\n        if (TOKEN0_PRICE == 0)\n            TOKEN0_PRICE = ORACLE.getAssetPrice(address(TOKEN0.token));\n        if (TOKEN1_PRICE == 0)\n            TOKEN1_PRICE = ORACLE.getAssetPrice(address(TOKEN1.token));\n\n        (amt0, amt1) = LiquidityAmounts.getAmountsForLiquidity(\n            uint160(\n                sqrt(\n                    (2 ** 192 *\n                        ((TOKEN0_PRICE * 10 ** TOKEN1.decimals) /\n                            TOKEN1_PRICE)) / (10 ** TOKEN0.decimals)\n                )\n            ),\n            TickMath.getSqrtRatioAtTick(lowerTick),\n            TickMath.getSqrtRatioAtTick(upperTick),\n            liquidity\n        );\n    }\n\n    /// @notice Calculate the balance of underlying assets based on the assets price, excluding fees\n    function returnExpectedBalance(\n        uint TOKEN0_PRICE,\n        uint TOKEN1_PRICE\n    ) public view returns (uint256 amt0, uint256 amt1) {\n        (amt0, amt1) = returnExpectedBalanceWithoutFees(\n            TOKEN0_PRICE,\n            TOKEN1_PRICE\n        );\n        amt0 += fee0;\n        amt1 += fee1;\n    }\n\n    /// @notice Return the price of LP tokens based on the underlying assets price\n    /// @param TOKEN0_PRICE Base token price\n    /// @param TOKEN1_PRICE Quote token price\n    function getValuePerLPAtPrice(\n        uint TOKEN0_PRICE,\n        uint TOKEN1_PRICE\n    ) public view returns (uint256 priceX1e8) {\n        if (totalSupply() == 0) return 0;\n        (uint256 amt0, uint256 amt1) = returnExpectedBalance(\n            TOKEN0_PRICE,\n            TOKEN1_PRICE\n        );\n        uint totalValue = (TOKEN0_PRICE * amt0) /\n            (10 ** TOKEN0.decimals) +\n            (amt1 * TOKEN1_PRICE) /\n            (10 ** TOKEN1.decimals);\n        return (totalValue * 1e18) / totalSupply();\n    }\n\n    /// @notice Return the price of the LP token\n    function latestAnswer() public view returns (uint256 priceX1e8) {\n        return\n            getValuePerLPAtPrice(\n                ORACLE.getAssetPrice(address(TOKEN0.token)),\n                ORACLE.getAssetPrice(address(TOKEN1.token))\n            );\n    }\n\n    /// @notice Return the underlying tokens amounts for a given TR balance excluding the fees\n    /// @param amount Amount of tokens we want the underlying amounts for\n    function getTokenAmountsExcludingFees(\n        uint amount\n    ) public view returns (uint token0Amount, uint token1Amount) {\n        address pool = V3_FACTORY.getPool(\n            address(TOKEN0.token),\n            address(TOKEN1.token),\n            feeTier * 100\n        );\n        (uint160 sqrtPriceX96, , , , , , ) = IUniswapV3Pool(pool).slot0();\n        (token0Amount, token1Amount) = LiquidityAmounts.getAmountsForLiquidity(\n            sqrtPriceX96,\n            TickMath.getSqrtRatioAtTick(lowerTick),\n            TickMath.getSqrtRatioAtTick(upperTick),\n            uint128((uint(liquidity) * amount) / totalSupply())\n        );\n    }\n\n    /// @notice Return the underlying tokens amounts for a given TR balance\n    /// @param amount Amount of tokens we want the underlying amounts for\n    function getTokenAmounts(\n        uint amount\n    ) external view returns (uint token0Amount, uint token1Amount) {\n        (token0Amount, token1Amount) = getTokenAmountsExcludingFees(amount);\n        token0Amount += (fee0 * amount) / totalSupply();\n        token1Amount += (fee1 * amount) / totalSupply();\n    }\n}\n",
  "sourceMap": "677:20652:1:-:0;;;1679:87;;;-1:-1:-1;;;;;;1679:87:1;1724:42;1679:87;;;1809:2;1772:39;;677:20652;;;;;;;;;-1:-1:-1;1963:113:43;;;;;;;;;-1:-1:-1;1963:113:43;;;;;;;;;;;;;;;2029:5;:13;1963:113;2029:5;:13;:::i;:::-;-1:-1:-1;2052:7:43;:17;2062:7;2052;:17;:::i;:::-;-1:-1:-1;;1701:1:42;1806:7;:22;-1:-1:-1;677:20652:1;;14:127:102;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:102;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:102;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:102;;;2580:26;2531:89;-1:-1:-1;;1335:1:102;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:102;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:102;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:102;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:102:o;:::-;677:20652:1;;;;;;",
  "sourcePath": "contracts/TokenisableRange.sol",
  "type": "contract"
}