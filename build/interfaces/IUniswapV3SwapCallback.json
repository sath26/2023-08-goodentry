{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "amount0Delta",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "amount1Delta",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "uniswapV3SwapCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "interfaces/IUniswapV3SwapCallback.sol",
    "exportedSymbols": {
      "IUniswapV3SwapCallback": [
        2189
      ]
    },
    "id": 2190,
    "license": "GPL-2.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2177,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:27"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IUniswapV3SwapCallback",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2178,
          "nodeType": "StructuredDocumentation",
          "src": "71:144:27",
          "text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
        },
        "fullyImplemented": false,
        "id": 2189,
        "linearizedBaseContracts": [
          2189
        ],
        "name": "IUniswapV3SwapCallback",
        "nameLocation": "225:22:27",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2179,
              "nodeType": "StructuredDocumentation",
              "src": "254:898:27",
              "text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
            },
            "functionSelector": "fa461e33",
            "id": 2188,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "uniswapV3SwapCallback",
            "nameLocation": "1166:21:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2181,
                  "mutability": "mutable",
                  "name": "amount0Delta",
                  "nameLocation": "1204:12:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 2188,
                  "src": "1197:19:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2180,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2183,
                  "mutability": "mutable",
                  "name": "amount1Delta",
                  "nameLocation": "1233:12:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 2188,
                  "src": "1226:19:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2182,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2185,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1270:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 2188,
                  "src": "1255:19:27",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2184,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1187:93:27"
            },
            "returnParameters": {
              "id": 2187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1289:0:27"
            },
            "scope": 2189,
            "src": "1157:133:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2190,
        "src": "215:1077:27",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "45:1248:27"
  },
  "contractName": "IUniswapV3SwapCallback",
  "dependencies": [],
  "offset": [
    215,
    1292
  ],
  "sha1": "f13bf3c597f26d70800687a222d026b9b7a928eb",
  "source": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n",
  "type": "interface"
}